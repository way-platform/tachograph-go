// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wayplatform/connect/tachograph/datadictionary/v1/full_card_number.proto

package datadictionaryv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Corresponds to the `FullCardNumber` data type in the Data Dictionary, Section 2.73.
//
// ASN.1 Specification:
//
//	FullCardNumber ::= SEQUENCE {
//	    cardType EquipmentType,
//	    cardIssuingMemberState NationNumeric,
//	    cardNumber CardNumber
//	}
type FullCardNumber struct {
	state                             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_CardType               EquipmentType          `protobuf:"varint,1,opt,name=card_type,json=cardType,enum=wayplatform.connect.tachograph.datadictionary.v1.EquipmentType"`
	xxx_hidden_CardIssuingMemberState int32                  `protobuf:"varint,2,opt,name=card_issuing_member_state,json=cardIssuingMemberState"`
	xxx_hidden_CardNumber             *string                `protobuf:"bytes,3,opt,name=card_number,json=cardNumber"`
	XXX_raceDetectHookData            protoimpl.RaceDetectHookData
	XXX_presence                      [1]uint32
	unknownFields                     protoimpl.UnknownFields
	sizeCache                         protoimpl.SizeCache
}

func (x *FullCardNumber) Reset() {
	*x = FullCardNumber{}
	mi := &file_wayplatform_connect_tachograph_datadictionary_v1_full_card_number_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FullCardNumber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullCardNumber) ProtoMessage() {}

func (x *FullCardNumber) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_datadictionary_v1_full_card_number_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *FullCardNumber) GetCardType() EquipmentType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_CardType
		}
	}
	return EquipmentType_EQUIPMENT_TYPE_UNSPECIFIED
}

func (x *FullCardNumber) GetCardIssuingMemberState() int32 {
	if x != nil {
		return x.xxx_hidden_CardIssuingMemberState
	}
	return 0
}

func (x *FullCardNumber) GetCardNumber() string {
	if x != nil {
		if x.xxx_hidden_CardNumber != nil {
			return *x.xxx_hidden_CardNumber
		}
		return ""
	}
	return ""
}

func (x *FullCardNumber) SetCardType(v EquipmentType) {
	x.xxx_hidden_CardType = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *FullCardNumber) SetCardIssuingMemberState(v int32) {
	x.xxx_hidden_CardIssuingMemberState = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *FullCardNumber) SetCardNumber(v string) {
	x.xxx_hidden_CardNumber = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *FullCardNumber) HasCardType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *FullCardNumber) HasCardIssuingMemberState() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *FullCardNumber) HasCardNumber() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *FullCardNumber) ClearCardType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_CardType = EquipmentType_EQUIPMENT_TYPE_UNSPECIFIED
}

func (x *FullCardNumber) ClearCardIssuingMemberState() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_CardIssuingMemberState = 0
}

func (x *FullCardNumber) ClearCardNumber() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_CardNumber = nil
}

type FullCardNumber_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The type of the tachograph card.
	//
	// ASN.1 Specification:
	//
	//	EquipmentType ::= INTEGER (0..255)
	CardType *EquipmentType
	// The code of the Member State issuing the card.
	//
	// ASN.1 Specification:
	//
	//	NationNumeric ::= INTEGER(0..255)
	CardIssuingMemberState *int32
	// The card number.
	//
	// ASN.1 Specification:
	//
	//	CardNumber ::= CHOICE { ... }
	CardNumber *string
}

func (b0 FullCardNumber_builder) Build() *FullCardNumber {
	m0 := &FullCardNumber{}
	b, x := &b0, m0
	_, _ = b, x
	if b.CardType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_CardType = *b.CardType
	}
	if b.CardIssuingMemberState != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_CardIssuingMemberState = *b.CardIssuingMemberState
	}
	if b.CardNumber != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_CardNumber = b.CardNumber
	}
	return m0
}

var File_wayplatform_connect_tachograph_datadictionary_v1_full_card_number_proto protoreflect.FileDescriptor

const file_wayplatform_connect_tachograph_datadictionary_v1_full_card_number_proto_rawDesc = "" +
	"\n" +
	"Gwayplatform/connect/tachograph/datadictionary/v1/full_card_number.proto\x120wayplatform.connect.tachograph.datadictionary.v1\x1aEwayplatform/connect/tachograph/datadictionary/v1/equipment_type.proto\"\xca\x01\n" +
	"\x0eFullCardNumber\x12\\\n" +
	"\tcard_type\x18\x01 \x01(\x0e2?.wayplatform.connect.tachograph.datadictionary.v1.EquipmentTypeR\bcardType\x129\n" +
	"\x19card_issuing_member_state\x18\x02 \x01(\x05R\x16cardIssuingMemberState\x12\x1f\n" +
	"\vcard_number\x18\x03 \x01(\tR\n" +
	"cardNumberB\xa6\x03\n" +
	"4com.wayplatform.connect.tachograph.datadictionary.v1B\x13FullCardNumberProtoP\x01Ztgithub.com/way-platform/tachograph-go/proto/gen/go/wayplatform/connect/tachograph/datadictionary/v1;datadictionaryv1\xa2\x02\x04WCTD\xaa\x020Wayplatform.Connect.Tachograph.Datadictionary.V1\xca\x020Wayplatform\\Connect\\Tachograph\\Datadictionary\\V1\xe2\x02<Wayplatform\\Connect\\Tachograph\\Datadictionary\\V1\\GPBMetadata\xea\x024Wayplatform::Connect::Tachograph::Datadictionary::V1b\beditionsp\xe8\a"

var file_wayplatform_connect_tachograph_datadictionary_v1_full_card_number_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_wayplatform_connect_tachograph_datadictionary_v1_full_card_number_proto_goTypes = []any{
	(*FullCardNumber)(nil), // 0: wayplatform.connect.tachograph.datadictionary.v1.FullCardNumber
	(EquipmentType)(0),     // 1: wayplatform.connect.tachograph.datadictionary.v1.EquipmentType
}
var file_wayplatform_connect_tachograph_datadictionary_v1_full_card_number_proto_depIdxs = []int32{
	1, // 0: wayplatform.connect.tachograph.datadictionary.v1.FullCardNumber.card_type:type_name -> wayplatform.connect.tachograph.datadictionary.v1.EquipmentType
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_wayplatform_connect_tachograph_datadictionary_v1_full_card_number_proto_init() }
func file_wayplatform_connect_tachograph_datadictionary_v1_full_card_number_proto_init() {
	if File_wayplatform_connect_tachograph_datadictionary_v1_full_card_number_proto != nil {
		return
	}
	file_wayplatform_connect_tachograph_datadictionary_v1_equipment_type_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wayplatform_connect_tachograph_datadictionary_v1_full_card_number_proto_rawDesc), len(file_wayplatform_connect_tachograph_datadictionary_v1_full_card_number_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wayplatform_connect_tachograph_datadictionary_v1_full_card_number_proto_goTypes,
		DependencyIndexes: file_wayplatform_connect_tachograph_datadictionary_v1_full_card_number_proto_depIdxs,
		MessageInfos:      file_wayplatform_connect_tachograph_datadictionary_v1_full_card_number_proto_msgTypes,
	}.Build()
	File_wayplatform_connect_tachograph_datadictionary_v1_full_card_number_proto = out.File
	file_wayplatform_connect_tachograph_datadictionary_v1_full_card_number_proto_goTypes = nil
	file_wayplatform_connect_tachograph_datadictionary_v1_full_card_number_proto_depIdxs = nil
}
