// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wayplatform/connect/tachograph/datadictionary/v1/holder_name.proto

package datadictionaryv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents the name of a card holder, separating surname and first names.
//
// See Data Dictionary, Section 2.83.
//
// ASN.1 Definition:
//
//	HolderName ::= SEQUENCE {
//	    holderSurname Name,
//	    holderFirstNames Name
//	}
type HolderName struct {
	state                       protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_HolderSurname    *StringValue           `protobuf:"bytes,1,opt,name=holder_surname,json=holderSurname"`
	xxx_hidden_HolderFirstNames *StringValue           `protobuf:"bytes,2,opt,name=holder_first_names,json=holderFirstNames"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *HolderName) Reset() {
	*x = HolderName{}
	mi := &file_wayplatform_connect_tachograph_datadictionary_v1_holder_name_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HolderName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HolderName) ProtoMessage() {}

func (x *HolderName) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_datadictionary_v1_holder_name_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *HolderName) GetHolderSurname() *StringValue {
	if x != nil {
		return x.xxx_hidden_HolderSurname
	}
	return nil
}

func (x *HolderName) GetHolderFirstNames() *StringValue {
	if x != nil {
		return x.xxx_hidden_HolderFirstNames
	}
	return nil
}

func (x *HolderName) SetHolderSurname(v *StringValue) {
	x.xxx_hidden_HolderSurname = v
}

func (x *HolderName) SetHolderFirstNames(v *StringValue) {
	x.xxx_hidden_HolderFirstNames = v
}

func (x *HolderName) HasHolderSurname() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_HolderSurname != nil
}

func (x *HolderName) HasHolderFirstNames() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_HolderFirstNames != nil
}

func (x *HolderName) ClearHolderSurname() {
	x.xxx_hidden_HolderSurname = nil
}

func (x *HolderName) ClearHolderFirstNames() {
	x.xxx_hidden_HolderFirstNames = nil
}

type HolderName_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The surname (family name) of the holder.
	//
	// See Data Dictionary, Section 2.99.
	//
	// ASN.1 Definition (`Name`):
	//
	//	Name ::= SEQUENCE {
	//	    codePage INTEGER,
	//	    name OCTET STRING
	//	}
	HolderSurname *StringValue
	// The first name(s) and initials of the holder.
	//
	// See Data Dictionary, Section 2.99.
	//
	// ASN.1 Definition (`Name`):
	//
	//	Name ::= SEQUENCE {
	//	    codePage INTEGER,
	//	    name OCTET STRING
	//	}
	HolderFirstNames *StringValue
}

func (b0 HolderName_builder) Build() *HolderName {
	m0 := &HolderName{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_HolderSurname = b.HolderSurname
	x.xxx_hidden_HolderFirstNames = b.HolderFirstNames
	return m0
}

var File_wayplatform_connect_tachograph_datadictionary_v1_holder_name_proto protoreflect.FileDescriptor

const file_wayplatform_connect_tachograph_datadictionary_v1_holder_name_proto_rawDesc = "" +
	"\n" +
	"Bwayplatform/connect/tachograph/datadictionary/v1/holder_name.proto\x120wayplatform.connect.tachograph.datadictionary.v1\x1aCwayplatform/connect/tachograph/datadictionary/v1/string_value.proto\"\xdf\x01\n" +
	"\n" +
	"HolderName\x12d\n" +
	"\x0eholder_surname\x18\x01 \x01(\v2=.wayplatform.connect.tachograph.datadictionary.v1.StringValueR\rholderSurname\x12k\n" +
	"\x12holder_first_names\x18\x02 \x01(\v2=.wayplatform.connect.tachograph.datadictionary.v1.StringValueR\x10holderFirstNamesB\xa2\x03\n" +
	"4com.wayplatform.connect.tachograph.datadictionary.v1B\x0fHolderNameProtoP\x01Ztgithub.com/way-platform/tachograph-go/proto/gen/go/wayplatform/connect/tachograph/datadictionary/v1;datadictionaryv1\xa2\x02\x04WCTD\xaa\x020Wayplatform.Connect.Tachograph.Datadictionary.V1\xca\x020Wayplatform\\Connect\\Tachograph\\Datadictionary\\V1\xe2\x02<Wayplatform\\Connect\\Tachograph\\Datadictionary\\V1\\GPBMetadata\xea\x024Wayplatform::Connect::Tachograph::Datadictionary::V1b\beditionsp\xe8\a"

var file_wayplatform_connect_tachograph_datadictionary_v1_holder_name_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_wayplatform_connect_tachograph_datadictionary_v1_holder_name_proto_goTypes = []any{
	(*HolderName)(nil),  // 0: wayplatform.connect.tachograph.datadictionary.v1.HolderName
	(*StringValue)(nil), // 1: wayplatform.connect.tachograph.datadictionary.v1.StringValue
}
var file_wayplatform_connect_tachograph_datadictionary_v1_holder_name_proto_depIdxs = []int32{
	1, // 0: wayplatform.connect.tachograph.datadictionary.v1.HolderName.holder_surname:type_name -> wayplatform.connect.tachograph.datadictionary.v1.StringValue
	1, // 1: wayplatform.connect.tachograph.datadictionary.v1.HolderName.holder_first_names:type_name -> wayplatform.connect.tachograph.datadictionary.v1.StringValue
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_wayplatform_connect_tachograph_datadictionary_v1_holder_name_proto_init() }
func file_wayplatform_connect_tachograph_datadictionary_v1_holder_name_proto_init() {
	if File_wayplatform_connect_tachograph_datadictionary_v1_holder_name_proto != nil {
		return
	}
	file_wayplatform_connect_tachograph_datadictionary_v1_string_value_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wayplatform_connect_tachograph_datadictionary_v1_holder_name_proto_rawDesc), len(file_wayplatform_connect_tachograph_datadictionary_v1_holder_name_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wayplatform_connect_tachograph_datadictionary_v1_holder_name_proto_goTypes,
		DependencyIndexes: file_wayplatform_connect_tachograph_datadictionary_v1_holder_name_proto_depIdxs,
		MessageInfos:      file_wayplatform_connect_tachograph_datadictionary_v1_holder_name_proto_msgTypes,
	}.Build()
	File_wayplatform_connect_tachograph_datadictionary_v1_holder_name_proto = out.File
	file_wayplatform_connect_tachograph_datadictionary_v1_holder_name_proto_goTypes = nil
	file_wayplatform_connect_tachograph_datadictionary_v1_holder_name_proto_depIdxs = nil
}
