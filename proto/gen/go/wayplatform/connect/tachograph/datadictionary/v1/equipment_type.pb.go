// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wayplatform/connect/tachograph/datadictionary/v1/equipment_type.proto

package datadictionaryv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// EquipmentType distinguishes different types of tachograph equipment.
// See Data Dictionary, Section 2.67.
type EquipmentType int32

const (
	EquipmentType_EQUIPMENT_TYPE_UNSPECIFIED      EquipmentType = 0
	EquipmentType_EQUIPMENT_TYPE_UNRECOGNIZED     EquipmentType = 1
	EquipmentType_RESERVED_MEMBER_STATE_OR_EUROPE EquipmentType = 2
	EquipmentType_DRIVER_CARD                     EquipmentType = 3
	EquipmentType_WORKSHOP_CARD                   EquipmentType = 4
	EquipmentType_CONTROL_CARD                    EquipmentType = 5
	EquipmentType_COMPANY_CARD                    EquipmentType = 6
	EquipmentType_MANUFACTURING_CARD              EquipmentType = 7
	EquipmentType_VEHICLE_UNIT                    EquipmentType = 8
	EquipmentType_MOTION_SENSOR                   EquipmentType = 9
	EquipmentType_GNSS_FACILITY                   EquipmentType = 10 // Gen2
	EquipmentType_REMOTE_COMMUNICATION_MODULE     EquipmentType = 11 // Gen2
	EquipmentType_ITS_INTERFACE_MODULE            EquipmentType = 12 // Gen2
	EquipmentType_PLAQUE                          EquipmentType = 13 // Gen2
	EquipmentType_M1_N1_ADAPTER                   EquipmentType = 14 // Gen2
	EquipmentType_EUROPEAN_ROOT_CA                EquipmentType = 15 // Gen2
	EquipmentType_MEMBER_STATE_CA                 EquipmentType = 16 // Gen2
	EquipmentType_EXTERNAL_GNSS_CONNECTION        EquipmentType = 17 // Gen2
	EquipmentType_UNUSED                          EquipmentType = 18 // Gen2
	EquipmentType_DRIVER_CARD_SIGN                EquipmentType = 19 // Gen2
	EquipmentType_WORKSHOP_CARD_SIGN              EquipmentType = 20 // Gen2
	EquipmentType_VEHICLE_UNIT_SIGN               EquipmentType = 21 // Gen2
)

// Enum value maps for EquipmentType.
var (
	EquipmentType_name = map[int32]string{
		0:  "EQUIPMENT_TYPE_UNSPECIFIED",
		1:  "EQUIPMENT_TYPE_UNRECOGNIZED",
		2:  "RESERVED_MEMBER_STATE_OR_EUROPE",
		3:  "DRIVER_CARD",
		4:  "WORKSHOP_CARD",
		5:  "CONTROL_CARD",
		6:  "COMPANY_CARD",
		7:  "MANUFACTURING_CARD",
		8:  "VEHICLE_UNIT",
		9:  "MOTION_SENSOR",
		10: "GNSS_FACILITY",
		11: "REMOTE_COMMUNICATION_MODULE",
		12: "ITS_INTERFACE_MODULE",
		13: "PLAQUE",
		14: "M1_N1_ADAPTER",
		15: "EUROPEAN_ROOT_CA",
		16: "MEMBER_STATE_CA",
		17: "EXTERNAL_GNSS_CONNECTION",
		18: "UNUSED",
		19: "DRIVER_CARD_SIGN",
		20: "WORKSHOP_CARD_SIGN",
		21: "VEHICLE_UNIT_SIGN",
	}
	EquipmentType_value = map[string]int32{
		"EQUIPMENT_TYPE_UNSPECIFIED":      0,
		"EQUIPMENT_TYPE_UNRECOGNIZED":     1,
		"RESERVED_MEMBER_STATE_OR_EUROPE": 2,
		"DRIVER_CARD":                     3,
		"WORKSHOP_CARD":                   4,
		"CONTROL_CARD":                    5,
		"COMPANY_CARD":                    6,
		"MANUFACTURING_CARD":              7,
		"VEHICLE_UNIT":                    8,
		"MOTION_SENSOR":                   9,
		"GNSS_FACILITY":                   10,
		"REMOTE_COMMUNICATION_MODULE":     11,
		"ITS_INTERFACE_MODULE":            12,
		"PLAQUE":                          13,
		"M1_N1_ADAPTER":                   14,
		"EUROPEAN_ROOT_CA":                15,
		"MEMBER_STATE_CA":                 16,
		"EXTERNAL_GNSS_CONNECTION":        17,
		"UNUSED":                          18,
		"DRIVER_CARD_SIGN":                19,
		"WORKSHOP_CARD_SIGN":              20,
		"VEHICLE_UNIT_SIGN":               21,
	}
)

func (x EquipmentType) Enum() *EquipmentType {
	p := new(EquipmentType)
	*p = x
	return p
}

func (x EquipmentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EquipmentType) Descriptor() protoreflect.EnumDescriptor {
	return file_wayplatform_connect_tachograph_datadictionary_v1_equipment_type_proto_enumTypes[0].Descriptor()
}

func (EquipmentType) Type() protoreflect.EnumType {
	return &file_wayplatform_connect_tachograph_datadictionary_v1_equipment_type_proto_enumTypes[0]
}

func (x EquipmentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

var File_wayplatform_connect_tachograph_datadictionary_v1_equipment_type_proto protoreflect.FileDescriptor

const file_wayplatform_connect_tachograph_datadictionary_v1_equipment_type_proto_rawDesc = "" +
	"\n" +
	"Ewayplatform/connect/tachograph/datadictionary/v1/equipment_type.proto\x120wayplatform.connect.tachograph.datadictionary.v1\x1aBwayplatform/connect/tachograph/datadictionary/v1/annotations.proto*\x8d\x05\n" +
	"\rEquipmentType\x12\x1e\n" +
	"\x1aEQUIPMENT_TYPE_UNSPECIFIED\x10\x00\x12\x1f\n" +
	"\x1bEQUIPMENT_TYPE_UNRECOGNIZED\x10\x01\x12*\n" +
	"\x1fRESERVED_MEMBER_STATE_OR_EUROPE\x10\x02\x1a\x05\x98\xaf\x9c\x02\x00\x12\x16\n" +
	"\vDRIVER_CARD\x10\x03\x1a\x05\x98\xaf\x9c\x02\x01\x12\x18\n" +
	"\rWORKSHOP_CARD\x10\x04\x1a\x05\x98\xaf\x9c\x02\x02\x12\x17\n" +
	"\fCONTROL_CARD\x10\x05\x1a\x05\x98\xaf\x9c\x02\x03\x12\x17\n" +
	"\fCOMPANY_CARD\x10\x06\x1a\x05\x98\xaf\x9c\x02\x04\x12\x1d\n" +
	"\x12MANUFACTURING_CARD\x10\a\x1a\x05\x98\xaf\x9c\x02\x05\x12\x17\n" +
	"\fVEHICLE_UNIT\x10\b\x1a\x05\x98\xaf\x9c\x02\x06\x12\x18\n" +
	"\rMOTION_SENSOR\x10\t\x1a\x05\x98\xaf\x9c\x02\a\x12\x18\n" +
	"\rGNSS_FACILITY\x10\n" +
	"\x1a\x05\x98\xaf\x9c\x02\b\x12&\n" +
	"\x1bREMOTE_COMMUNICATION_MODULE\x10\v\x1a\x05\x98\xaf\x9c\x02\t\x12\x1f\n" +
	"\x14ITS_INTERFACE_MODULE\x10\f\x1a\x05\x98\xaf\x9c\x02\n" +
	"\x12\x11\n" +
	"\x06PLAQUE\x10\r\x1a\x05\x98\xaf\x9c\x02\v\x12\x18\n" +
	"\rM1_N1_ADAPTER\x10\x0e\x1a\x05\x98\xaf\x9c\x02\f\x12\x1b\n" +
	"\x10EUROPEAN_ROOT_CA\x10\x0f\x1a\x05\x98\xaf\x9c\x02\r\x12\x1a\n" +
	"\x0fMEMBER_STATE_CA\x10\x10\x1a\x05\x98\xaf\x9c\x02\x0e\x12#\n" +
	"\x18EXTERNAL_GNSS_CONNECTION\x10\x11\x1a\x05\x98\xaf\x9c\x02\x0f\x12\x11\n" +
	"\x06UNUSED\x10\x12\x1a\x05\x98\xaf\x9c\x02\x10\x12\x1b\n" +
	"\x10DRIVER_CARD_SIGN\x10\x13\x1a\x05\x98\xaf\x9c\x02\x11\x12\x1d\n" +
	"\x12WORKSHOP_CARD_SIGN\x10\x14\x1a\x05\x98\xaf\x9c\x02\x12\x12\x1c\n" +
	"\x11VEHICLE_UNIT_SIGN\x10\x15\x1a\x05\x98\xaf\x9c\x02\x13B\xa5\x03\n" +
	"4com.wayplatform.connect.tachograph.datadictionary.v1B\x12EquipmentTypeProtoP\x01Ztgithub.com/way-platform/tachograph-go/proto/gen/go/wayplatform/connect/tachograph/datadictionary/v1;datadictionaryv1\xa2\x02\x04WCTD\xaa\x020Wayplatform.Connect.Tachograph.Datadictionary.V1\xca\x020Wayplatform\\Connect\\Tachograph\\Datadictionary\\V1\xe2\x02<Wayplatform\\Connect\\Tachograph\\Datadictionary\\V1\\GPBMetadata\xea\x024Wayplatform::Connect::Tachograph::Datadictionary::V1b\beditionsp\xe8\a"

var file_wayplatform_connect_tachograph_datadictionary_v1_equipment_type_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_wayplatform_connect_tachograph_datadictionary_v1_equipment_type_proto_goTypes = []any{
	(EquipmentType)(0), // 0: wayplatform.connect.tachograph.datadictionary.v1.EquipmentType
}
var file_wayplatform_connect_tachograph_datadictionary_v1_equipment_type_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_wayplatform_connect_tachograph_datadictionary_v1_equipment_type_proto_init() }
func file_wayplatform_connect_tachograph_datadictionary_v1_equipment_type_proto_init() {
	if File_wayplatform_connect_tachograph_datadictionary_v1_equipment_type_proto != nil {
		return
	}
	file_wayplatform_connect_tachograph_datadictionary_v1_annotations_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wayplatform_connect_tachograph_datadictionary_v1_equipment_type_proto_rawDesc), len(file_wayplatform_connect_tachograph_datadictionary_v1_equipment_type_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wayplatform_connect_tachograph_datadictionary_v1_equipment_type_proto_goTypes,
		DependencyIndexes: file_wayplatform_connect_tachograph_datadictionary_v1_equipment_type_proto_depIdxs,
		EnumInfos:         file_wayplatform_connect_tachograph_datadictionary_v1_equipment_type_proto_enumTypes,
	}.Build()
	File_wayplatform_connect_tachograph_datadictionary_v1_equipment_type_proto = out.File
	file_wayplatform_connect_tachograph_datadictionary_v1_equipment_type_proto_goTypes = nil
	file_wayplatform_connect_tachograph_datadictionary_v1_equipment_type_proto_depIdxs = nil
}
