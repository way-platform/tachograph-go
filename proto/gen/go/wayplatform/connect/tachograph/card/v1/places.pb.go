// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wayplatform/connect/tachograph/card/v1/places.proto

package cardv1

import (
	v1 "github.com/way-platform/tachograph-go/proto/gen/go/wayplatform/connect/tachograph/dd/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents the content of the EF_Places file, where daily work periods begin and/or end.
//
// This is a circular buffer that may contain corrupted records due to overwrites.
// Records store information about when and where daily work periods started or ended.
//
// The format differs between generations:
// - Gen1: 10-byte records (no GNSS data) - stored in `records`
// - Gen2: 21-byte records (includes GNSS data) - stored in `records_g2`
//
// The file structure is specified in Appendix 2, Section 4.2.1:
//
//	EF Places
//	└─CardPlaceDailyWorkPeriod
//
// The data type `CardPlaceDailyWorkPeriod` is specified in the Data Dictionary, Section 2.27.
//
// ASN.1 Definition:
//
//	CardPlaceDailyWorkPeriod ::= SEQUENCE {
//	    placePointerNewestRecord INTEGER(0..NoOfCardPlaceRecords-1),
//	    placeRecords SET SIZE(NoOfCardPlaceRecords) OF PlaceRecord
//	}
type Places struct {
	state                        protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_NewestRecordIndex int32                  `protobuf:"varint,1,opt,name=newest_record_index,json=newestRecordIndex"`
	xxx_hidden_Records           *[]*v1.PlaceRecord     `protobuf:"bytes,2,rep,name=records"`
	xxx_hidden_RecordsG2         *[]*v1.PlaceRecordG2   `protobuf:"bytes,6,rep,name=records_g2,json=recordsG2"`
	xxx_hidden_TrailingBytes     []byte                 `protobuf:"bytes,3,opt,name=trailing_bytes,json=trailingBytes"`
	xxx_hidden_Signature         []byte                 `protobuf:"bytes,5,opt,name=signature"`
	XXX_raceDetectHookData       protoimpl.RaceDetectHookData
	XXX_presence                 [1]uint32
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *Places) Reset() {
	*x = Places{}
	mi := &file_wayplatform_connect_tachograph_card_v1_places_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Places) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Places) ProtoMessage() {}

func (x *Places) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_card_v1_places_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Places) GetNewestRecordIndex() int32 {
	if x != nil {
		return x.xxx_hidden_NewestRecordIndex
	}
	return 0
}

func (x *Places) GetRecords() []*v1.PlaceRecord {
	if x != nil {
		if x.xxx_hidden_Records != nil {
			return *x.xxx_hidden_Records
		}
	}
	return nil
}

func (x *Places) GetRecordsG2() []*v1.PlaceRecordG2 {
	if x != nil {
		if x.xxx_hidden_RecordsG2 != nil {
			return *x.xxx_hidden_RecordsG2
		}
	}
	return nil
}

func (x *Places) GetTrailingBytes() []byte {
	if x != nil {
		return x.xxx_hidden_TrailingBytes
	}
	return nil
}

func (x *Places) GetSignature() []byte {
	if x != nil {
		return x.xxx_hidden_Signature
	}
	return nil
}

func (x *Places) SetNewestRecordIndex(v int32) {
	x.xxx_hidden_NewestRecordIndex = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *Places) SetRecords(v []*v1.PlaceRecord) {
	x.xxx_hidden_Records = &v
}

func (x *Places) SetRecordsG2(v []*v1.PlaceRecordG2) {
	x.xxx_hidden_RecordsG2 = &v
}

func (x *Places) SetTrailingBytes(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_TrailingBytes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *Places) SetSignature(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Signature = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *Places) HasNewestRecordIndex() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Places) HasTrailingBytes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Places) HasSignature() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Places) ClearNewestRecordIndex() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_NewestRecordIndex = 0
}

func (x *Places) ClearTrailingBytes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_TrailingBytes = nil
}

func (x *Places) ClearSignature() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Signature = nil
}

type Places_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Index of the newest record in the circular buffer.
	//
	// Corresponds to `placePointerNewestRecord` in DD Section 2.27.
	// Valid range: 0 to (number of records - 1).
	NewestRecordIndex *int32
	// Place records from the circular buffer (Generation 1 format).
	//
	// Each record is 10 bytes and may be valid (successfully parsed) or corrupted
	// (from buffer overwrites). Check the `valid` field on each record to determine
	// which fields are reliable.
	//
	// Only one of `records` or `records_g2` will be populated, based on the DF context.
	//
	// Corresponds to `placeRecords` in DD Section 2.27.
	Records []*v1.PlaceRecord
	// Place records from the circular buffer (Generation 2 format).
	//
	// Each record is 21 bytes and includes GNSS location data. Records may be valid
	// (successfully parsed) or corrupted (from buffer overwrites). Check the `valid`
	// field on each record to determine which fields are reliable.
	//
	// Only one of `records` or `records_g2` will be populated, based on the DF context.
	//
	// Corresponds to `placeRecords` in DD Section 2.27.
	RecordsG2 []*v1.PlaceRecordG2
	// Trailing bytes that don't form complete records (for roundtrip fidelity).
	TrailingBytes []byte
	// Signature from the following file block, if present.
	//
	// Gen1: RSA signature, 128 bytes (OCTET STRING SIZE(128))
	// Gen2: ECDSA signature, variable size based on elliptic curve
	//
	// See Data Dictionary, Section 2.149, `Signature`.
	Signature []byte
}

func (b0 Places_builder) Build() *Places {
	m0 := &Places{}
	b, x := &b0, m0
	_, _ = b, x
	if b.NewestRecordIndex != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_NewestRecordIndex = *b.NewestRecordIndex
	}
	x.xxx_hidden_Records = &b.Records
	x.xxx_hidden_RecordsG2 = &b.RecordsG2
	if b.TrailingBytes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_TrailingBytes = b.TrailingBytes
	}
	if b.Signature != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_Signature = b.Signature
	}
	return m0
}

var File_wayplatform_connect_tachograph_card_v1_places_proto protoreflect.FileDescriptor

const file_wayplatform_connect_tachograph_card_v1_places_proto_rawDesc = "" +
	"\n" +
	"3wayplatform/connect/tachograph/card/v1/places.proto\x12&wayplatform.connect.tachograph.card.v1\x1a7wayplatform/connect/tachograph/dd/v1/place_record.proto\x1a:wayplatform/connect/tachograph/dd/v1/place_record_g2.proto\"\x9e\x02\n" +
	"\x06Places\x12.\n" +
	"\x13newest_record_index\x18\x01 \x01(\x05R\x11newestRecordIndex\x12K\n" +
	"\arecords\x18\x02 \x03(\v21.wayplatform.connect.tachograph.dd.v1.PlaceRecordR\arecords\x12R\n" +
	"\n" +
	"records_g2\x18\x06 \x03(\v23.wayplatform.connect.tachograph.dd.v1.PlaceRecordG2R\trecordsG2\x12%\n" +
	"\x0etrailing_bytes\x18\x03 \x01(\fR\rtrailingBytes\x12\x1c\n" +
	"\tsignature\x18\x05 \x01(\fR\tsignatureB\xd8\x02\n" +
	"*com.wayplatform.connect.tachograph.card.v1B\vPlacesProtoP\x01Z`github.com/way-platform/tachograph-go/proto/gen/go/wayplatform/connect/tachograph/card/v1;cardv1\xa2\x02\x04WCTC\xaa\x02&Wayplatform.Connect.Tachograph.Card.V1\xca\x02&Wayplatform\\Connect\\Tachograph\\Card\\V1\xe2\x022Wayplatform\\Connect\\Tachograph\\Card\\V1\\GPBMetadata\xea\x02*Wayplatform::Connect::Tachograph::Card::V1b\beditionsp\xe8\a"

var file_wayplatform_connect_tachograph_card_v1_places_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_wayplatform_connect_tachograph_card_v1_places_proto_goTypes = []any{
	(*Places)(nil),           // 0: wayplatform.connect.tachograph.card.v1.Places
	(*v1.PlaceRecord)(nil),   // 1: wayplatform.connect.tachograph.dd.v1.PlaceRecord
	(*v1.PlaceRecordG2)(nil), // 2: wayplatform.connect.tachograph.dd.v1.PlaceRecordG2
}
var file_wayplatform_connect_tachograph_card_v1_places_proto_depIdxs = []int32{
	1, // 0: wayplatform.connect.tachograph.card.v1.Places.records:type_name -> wayplatform.connect.tachograph.dd.v1.PlaceRecord
	2, // 1: wayplatform.connect.tachograph.card.v1.Places.records_g2:type_name -> wayplatform.connect.tachograph.dd.v1.PlaceRecordG2
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_wayplatform_connect_tachograph_card_v1_places_proto_init() }
func file_wayplatform_connect_tachograph_card_v1_places_proto_init() {
	if File_wayplatform_connect_tachograph_card_v1_places_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wayplatform_connect_tachograph_card_v1_places_proto_rawDesc), len(file_wayplatform_connect_tachograph_card_v1_places_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wayplatform_connect_tachograph_card_v1_places_proto_goTypes,
		DependencyIndexes: file_wayplatform_connect_tachograph_card_v1_places_proto_depIdxs,
		MessageInfos:      file_wayplatform_connect_tachograph_card_v1_places_proto_msgTypes,
	}.Build()
	File_wayplatform_connect_tachograph_card_v1_places_proto = out.File
	file_wayplatform_connect_tachograph_card_v1_places_proto_goTypes = nil
	file_wayplatform_connect_tachograph_card_v1_places_proto_depIdxs = nil
}
