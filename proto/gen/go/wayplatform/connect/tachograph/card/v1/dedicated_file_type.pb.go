// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wayplatform/connect/tachograph/card/v1/dedicated_file_type.proto

package cardv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// DedicatedFileType represents the types of dedicated files (DFs) that can be found on a tachograph card.
// These correspond to the standardized DF names defined in the tachograph regulation's
// file structure specifications (e.g., Appendix 2). This enum does not have a direct
// equivalent data type in the Data Dictionary but is used to model the card's file system.
type DedicatedFileType int32

const (
	// Default value. This value is unused.
	DedicatedFileType_DEDICATED_FILE_TYPE_UNSPECIFIED DedicatedFileType = 0
	// Tachograph application for Generation 1 cards.
	DedicatedFileType_DF_TACHOGRAPH DedicatedFileType = 1
	// Tachograph application for Generation 2 cards.
	DedicatedFileType_DF_TACHOGRAPH_G2 DedicatedFileType = 2
	// Dedicated file for an external GNSS facility.
	DedicatedFileType_DF_GNSS_FACILITY DedicatedFileType = 3
)

// Enum value maps for DedicatedFileType.
var (
	DedicatedFileType_name = map[int32]string{
		0: "DEDICATED_FILE_TYPE_UNSPECIFIED",
		1: "DF_TACHOGRAPH",
		2: "DF_TACHOGRAPH_G2",
		3: "DF_GNSS_FACILITY",
	}
	DedicatedFileType_value = map[string]int32{
		"DEDICATED_FILE_TYPE_UNSPECIFIED": 0,
		"DF_TACHOGRAPH":                   1,
		"DF_TACHOGRAPH_G2":                2,
		"DF_GNSS_FACILITY":                3,
	}
)

func (x DedicatedFileType) Enum() *DedicatedFileType {
	p := new(DedicatedFileType)
	*p = x
	return p
}

func (x DedicatedFileType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DedicatedFileType) Descriptor() protoreflect.EnumDescriptor {
	return file_wayplatform_connect_tachograph_card_v1_dedicated_file_type_proto_enumTypes[0].Descriptor()
}

func (DedicatedFileType) Type() protoreflect.EnumType {
	return &file_wayplatform_connect_tachograph_card_v1_dedicated_file_type_proto_enumTypes[0]
}

func (x DedicatedFileType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

var File_wayplatform_connect_tachograph_card_v1_dedicated_file_type_proto protoreflect.FileDescriptor

const file_wayplatform_connect_tachograph_card_v1_dedicated_file_type_proto_rawDesc = "" +
	"\n" +
	"@wayplatform/connect/tachograph/card/v1/dedicated_file_type.proto\x12&wayplatform.connect.tachograph.card.v1\x1a google/protobuf/descriptor.proto*w\n" +
	"\x11DedicatedFileType\x12#\n" +
	"\x1fDEDICATED_FILE_TYPE_UNSPECIFIED\x10\x00\x12\x11\n" +
	"\rDF_TACHOGRAPH\x10\x01\x12\x14\n" +
	"\x10DF_TACHOGRAPH_G2\x10\x02\x12\x14\n" +
	"\x10DF_GNSS_FACILITY\x10\x03B\xe3\x02\n" +
	"*com.wayplatform.connect.tachograph.card.v1B\x16DedicatedFileTypeProtoP\x01Z`github.com/way-platform/tachograph-go/proto/gen/go/wayplatform/connect/tachograph/card/v1;cardv1\xa2\x02\x04WCTC\xaa\x02&Wayplatform.Connect.Tachograph.Card.V1\xca\x02&Wayplatform\\Connect\\Tachograph\\Card\\V1\xe2\x022Wayplatform\\Connect\\Tachograph\\Card\\V1\\GPBMetadata\xea\x02*Wayplatform::Connect::Tachograph::Card::V1b\beditionsp\xe8\a"

var file_wayplatform_connect_tachograph_card_v1_dedicated_file_type_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_wayplatform_connect_tachograph_card_v1_dedicated_file_type_proto_goTypes = []any{
	(DedicatedFileType)(0), // 0: wayplatform.connect.tachograph.card.v1.DedicatedFileType
}
var file_wayplatform_connect_tachograph_card_v1_dedicated_file_type_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_wayplatform_connect_tachograph_card_v1_dedicated_file_type_proto_init() }
func file_wayplatform_connect_tachograph_card_v1_dedicated_file_type_proto_init() {
	if File_wayplatform_connect_tachograph_card_v1_dedicated_file_type_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wayplatform_connect_tachograph_card_v1_dedicated_file_type_proto_rawDesc), len(file_wayplatform_connect_tachograph_card_v1_dedicated_file_type_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wayplatform_connect_tachograph_card_v1_dedicated_file_type_proto_goTypes,
		DependencyIndexes: file_wayplatform_connect_tachograph_card_v1_dedicated_file_type_proto_depIdxs,
		EnumInfos:         file_wayplatform_connect_tachograph_card_v1_dedicated_file_type_proto_enumTypes,
	}.Build()
	File_wayplatform_connect_tachograph_card_v1_dedicated_file_type_proto = out.File
	file_wayplatform_connect_tachograph_card_v1_dedicated_file_type_proto_goTypes = nil
	file_wayplatform_connect_tachograph_card_v1_dedicated_file_type_proto_depIdxs = nil
}
