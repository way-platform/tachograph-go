// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wayplatform/connect/tachograph/card/v1/control_activity_data.proto

package cardv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents data about the last control the driver was subject to.
//
// Corresponds to the `CardControlActivityDataRecord` data type from EF_Control_Activity_Data.
// See Data Dictionary, Section 2.15.
type ControlActivityData struct {
	state                                 protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Valid                      bool                   `protobuf:"varint,1,opt,name=valid"`
	xxx_hidden_ControlType                []byte                 `protobuf:"bytes,2,opt,name=control_type,json=controlType"`
	xxx_hidden_ControlTime                *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=control_time,json=controlTime"`
	xxx_hidden_ControlCardNumber          *string                `protobuf:"bytes,4,opt,name=control_card_number,json=controlCardNumber"`
	xxx_hidden_VehicleRegistrationNation  *string                `protobuf:"bytes,5,opt,name=vehicle_registration_nation,json=vehicleRegistrationNation"`
	xxx_hidden_VehicleRegistrationNumber  *string                `protobuf:"bytes,6,opt,name=vehicle_registration_number,json=vehicleRegistrationNumber"`
	xxx_hidden_ControlDownloadPeriodBegin *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=control_download_period_begin,json=controlDownloadPeriodBegin"`
	xxx_hidden_ControlDownloadPeriodEnd   *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=control_download_period_end,json=controlDownloadPeriodEnd"`
	xxx_hidden_RawData                    []byte                 `protobuf:"bytes,9,opt,name=raw_data,json=rawData"`
	xxx_hidden_Signature                  []byte                 `protobuf:"bytes,10,opt,name=signature"`
	XXX_raceDetectHookData                protoimpl.RaceDetectHookData
	XXX_presence                          [1]uint32
	unknownFields                         protoimpl.UnknownFields
	sizeCache                             protoimpl.SizeCache
}

func (x *ControlActivityData) Reset() {
	*x = ControlActivityData{}
	mi := &file_wayplatform_connect_tachograph_card_v1_control_activity_data_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ControlActivityData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlActivityData) ProtoMessage() {}

func (x *ControlActivityData) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_card_v1_control_activity_data_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ControlActivityData) GetValid() bool {
	if x != nil {
		return x.xxx_hidden_Valid
	}
	return false
}

func (x *ControlActivityData) GetControlType() []byte {
	if x != nil {
		return x.xxx_hidden_ControlType
	}
	return nil
}

func (x *ControlActivityData) GetControlTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_ControlTime
	}
	return nil
}

func (x *ControlActivityData) GetControlCardNumber() string {
	if x != nil {
		if x.xxx_hidden_ControlCardNumber != nil {
			return *x.xxx_hidden_ControlCardNumber
		}
		return ""
	}
	return ""
}

func (x *ControlActivityData) GetVehicleRegistrationNation() string {
	if x != nil {
		if x.xxx_hidden_VehicleRegistrationNation != nil {
			return *x.xxx_hidden_VehicleRegistrationNation
		}
		return ""
	}
	return ""
}

func (x *ControlActivityData) GetVehicleRegistrationNumber() string {
	if x != nil {
		if x.xxx_hidden_VehicleRegistrationNumber != nil {
			return *x.xxx_hidden_VehicleRegistrationNumber
		}
		return ""
	}
	return ""
}

func (x *ControlActivityData) GetControlDownloadPeriodBegin() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_ControlDownloadPeriodBegin
	}
	return nil
}

func (x *ControlActivityData) GetControlDownloadPeriodEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_ControlDownloadPeriodEnd
	}
	return nil
}

func (x *ControlActivityData) GetRawData() []byte {
	if x != nil {
		return x.xxx_hidden_RawData
	}
	return nil
}

func (x *ControlActivityData) GetSignature() []byte {
	if x != nil {
		return x.xxx_hidden_Signature
	}
	return nil
}

func (x *ControlActivityData) SetValid(v bool) {
	x.xxx_hidden_Valid = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 10)
}

func (x *ControlActivityData) SetControlType(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_ControlType = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 10)
}

func (x *ControlActivityData) SetControlTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_ControlTime = v
}

func (x *ControlActivityData) SetControlCardNumber(v string) {
	x.xxx_hidden_ControlCardNumber = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 10)
}

func (x *ControlActivityData) SetVehicleRegistrationNation(v string) {
	x.xxx_hidden_VehicleRegistrationNation = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 10)
}

func (x *ControlActivityData) SetVehicleRegistrationNumber(v string) {
	x.xxx_hidden_VehicleRegistrationNumber = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 10)
}

func (x *ControlActivityData) SetControlDownloadPeriodBegin(v *timestamppb.Timestamp) {
	x.xxx_hidden_ControlDownloadPeriodBegin = v
}

func (x *ControlActivityData) SetControlDownloadPeriodEnd(v *timestamppb.Timestamp) {
	x.xxx_hidden_ControlDownloadPeriodEnd = v
}

func (x *ControlActivityData) SetRawData(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_RawData = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 10)
}

func (x *ControlActivityData) SetSignature(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Signature = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 10)
}

func (x *ControlActivityData) HasValid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ControlActivityData) HasControlType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ControlActivityData) HasControlTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ControlTime != nil
}

func (x *ControlActivityData) HasControlCardNumber() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ControlActivityData) HasVehicleRegistrationNation() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *ControlActivityData) HasVehicleRegistrationNumber() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *ControlActivityData) HasControlDownloadPeriodBegin() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ControlDownloadPeriodBegin != nil
}

func (x *ControlActivityData) HasControlDownloadPeriodEnd() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ControlDownloadPeriodEnd != nil
}

func (x *ControlActivityData) HasRawData() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *ControlActivityData) HasSignature() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *ControlActivityData) ClearValid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Valid = false
}

func (x *ControlActivityData) ClearControlType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ControlType = nil
}

func (x *ControlActivityData) ClearControlTime() {
	x.xxx_hidden_ControlTime = nil
}

func (x *ControlActivityData) ClearControlCardNumber() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_ControlCardNumber = nil
}

func (x *ControlActivityData) ClearVehicleRegistrationNation() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_VehicleRegistrationNation = nil
}

func (x *ControlActivityData) ClearVehicleRegistrationNumber() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_VehicleRegistrationNumber = nil
}

func (x *ControlActivityData) ClearControlDownloadPeriodBegin() {
	x.xxx_hidden_ControlDownloadPeriodBegin = nil
}

func (x *ControlActivityData) ClearControlDownloadPeriodEnd() {
	x.xxx_hidden_ControlDownloadPeriodEnd = nil
}

func (x *ControlActivityData) ClearRawData() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_RawData = nil
}

func (x *ControlActivityData) ClearSignature() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_Signature = nil
}

type ControlActivityData_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// If true, the fields below are populated with parsed, semantic data.
	// If false, the 'raw_data' field contains the original, unprocessed record
	// bytes for perfect roundtrip accuracy.
	Valid *bool
	// See Data Dictionary, Section 2.53 for `ControlType`.
	ControlType []byte
	// Date and time of the control. See DD Section 2.162 for `TimeReal`.
	ControlTime *timestamppb.Timestamp
	// Card number of the control officer. See DD Section 2.73 for `FullCardNumber`.
	ControlCardNumber *string
	// Nation of the vehicle's registration. See DD Section 2.166.
	VehicleRegistrationNation *string
	// Vehicle's registration number. See DD Section 2.166.
	VehicleRegistrationNumber *string
	// Start of the downloaded period. See DD Section 2.162 for `TimeReal`.
	ControlDownloadPeriodBegin *timestamppb.Timestamp
	// End of the downloaded period. See DD Section 2.162 for `TimeReal`.
	ControlDownloadPeriodEnd *timestamppb.Timestamp
	// --- Field for raw data preservation (when valid = false) ---
	// Holds the raw 46 bytes of the original record for perfect roundtrip.
	RawData []byte
	// Digital signature for the EF_Control_Activity_Data file content.
	Signature []byte
}

func (b0 ControlActivityData_builder) Build() *ControlActivityData {
	m0 := &ControlActivityData{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Valid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 10)
		x.xxx_hidden_Valid = *b.Valid
	}
	if b.ControlType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 10)
		x.xxx_hidden_ControlType = b.ControlType
	}
	x.xxx_hidden_ControlTime = b.ControlTime
	if b.ControlCardNumber != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 10)
		x.xxx_hidden_ControlCardNumber = b.ControlCardNumber
	}
	if b.VehicleRegistrationNation != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 10)
		x.xxx_hidden_VehicleRegistrationNation = b.VehicleRegistrationNation
	}
	if b.VehicleRegistrationNumber != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 10)
		x.xxx_hidden_VehicleRegistrationNumber = b.VehicleRegistrationNumber
	}
	x.xxx_hidden_ControlDownloadPeriodBegin = b.ControlDownloadPeriodBegin
	x.xxx_hidden_ControlDownloadPeriodEnd = b.ControlDownloadPeriodEnd
	if b.RawData != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 10)
		x.xxx_hidden_RawData = b.RawData
	}
	if b.Signature != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 10)
		x.xxx_hidden_Signature = b.Signature
	}
	return m0
}

var File_wayplatform_connect_tachograph_card_v1_control_activity_data_proto protoreflect.FileDescriptor

const file_wayplatform_connect_tachograph_card_v1_control_activity_data_proto_rawDesc = "" +
	"\n" +
	"Bwayplatform/connect/tachograph/card/v1/control_activity_data.proto\x12&wayplatform.connect.tachograph.card.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\xb0\x04\n" +
	"\x13ControlActivityData\x12\x14\n" +
	"\x05valid\x18\x01 \x01(\bR\x05valid\x12!\n" +
	"\fcontrol_type\x18\x02 \x01(\fR\vcontrolType\x12=\n" +
	"\fcontrol_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\vcontrolTime\x12.\n" +
	"\x13control_card_number\x18\x04 \x01(\tR\x11controlCardNumber\x12>\n" +
	"\x1bvehicle_registration_nation\x18\x05 \x01(\tR\x19vehicleRegistrationNation\x12>\n" +
	"\x1bvehicle_registration_number\x18\x06 \x01(\tR\x19vehicleRegistrationNumber\x12]\n" +
	"\x1dcontrol_download_period_begin\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\x1acontrolDownloadPeriodBegin\x12Y\n" +
	"\x1bcontrol_download_period_end\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\x18controlDownloadPeriodEnd\x12\x19\n" +
	"\braw_data\x18\t \x01(\fR\arawData\x12\x1c\n" +
	"\tsignature\x18\n" +
	" \x01(\fR\tsignatureB\xe5\x02\n" +
	"*com.wayplatform.connect.tachograph.card.v1B\x18ControlActivityDataProtoP\x01Z`github.com/way-platform/tachograph-go/proto/gen/go/wayplatform/connect/tachograph/card/v1;cardv1\xa2\x02\x04WCTC\xaa\x02&Wayplatform.Connect.Tachograph.Card.V1\xca\x02&Wayplatform\\Connect\\Tachograph\\Card\\V1\xe2\x022Wayplatform\\Connect\\Tachograph\\Card\\V1\\GPBMetadata\xea\x02*Wayplatform::Connect::Tachograph::Card::V1b\beditionsp\xe8\a"

var file_wayplatform_connect_tachograph_card_v1_control_activity_data_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_wayplatform_connect_tachograph_card_v1_control_activity_data_proto_goTypes = []any{
	(*ControlActivityData)(nil),   // 0: wayplatform.connect.tachograph.card.v1.ControlActivityData
	(*timestamppb.Timestamp)(nil), // 1: google.protobuf.Timestamp
}
var file_wayplatform_connect_tachograph_card_v1_control_activity_data_proto_depIdxs = []int32{
	1, // 0: wayplatform.connect.tachograph.card.v1.ControlActivityData.control_time:type_name -> google.protobuf.Timestamp
	1, // 1: wayplatform.connect.tachograph.card.v1.ControlActivityData.control_download_period_begin:type_name -> google.protobuf.Timestamp
	1, // 2: wayplatform.connect.tachograph.card.v1.ControlActivityData.control_download_period_end:type_name -> google.protobuf.Timestamp
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_wayplatform_connect_tachograph_card_v1_control_activity_data_proto_init() }
func file_wayplatform_connect_tachograph_card_v1_control_activity_data_proto_init() {
	if File_wayplatform_connect_tachograph_card_v1_control_activity_data_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wayplatform_connect_tachograph_card_v1_control_activity_data_proto_rawDesc), len(file_wayplatform_connect_tachograph_card_v1_control_activity_data_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wayplatform_connect_tachograph_card_v1_control_activity_data_proto_goTypes,
		DependencyIndexes: file_wayplatform_connect_tachograph_card_v1_control_activity_data_proto_depIdxs,
		MessageInfos:      file_wayplatform_connect_tachograph_card_v1_control_activity_data_proto_msgTypes,
	}.Build()
	File_wayplatform_connect_tachograph_card_v1_control_activity_data_proto = out.File
	file_wayplatform_connect_tachograph_card_v1_control_activity_data_proto_goTypes = nil
	file_wayplatform_connect_tachograph_card_v1_control_activity_data_proto_depIdxs = nil
}
