// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wayplatform/connect/tachograph/card/v1/elementary_file_type.proto

package cardv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ElementaryFileType represents the types of elementary files that can be found on a tachograph card.
// Each file is identified by a unique file ID as specified in the EU regulations.
type ElementaryFileType int32

const (
	// Unspecified elementary file type.
	ElementaryFileType_ELEMENTARY_FILE_UNSPECIFIED ElementaryFileType = 0
	// Integrated circuit card identification data.
	ElementaryFileType_EF_ICC ElementaryFileType = 1
	// Integrated circuit chip identification data.
	ElementaryFileType_EF_IC ElementaryFileType = 2
	// Answer To Reset/INFO, for extended length information.
	ElementaryFileType_EF_ATR_INFO ElementaryFileType = 4
	// Indicates support for extended length APDUs.
	ElementaryFileType_EF_EXTENDED_LENGTH ElementaryFileType = 5
	// Card application identification data.
	ElementaryFileType_EF_APPLICATION_IDENTIFICATION ElementaryFileType = 6
	// Events data.
	ElementaryFileType_EF_EVENTS_DATA ElementaryFileType = 7
	// Faults data.
	ElementaryFileType_EF_FAULTS_DATA ElementaryFileType = 8
	// Driver activity data.
	ElementaryFileType_EF_DRIVER_ACTIVITY_DATA ElementaryFileType = 9
	// Vehicles used data.
	ElementaryFileType_EF_VEHICLES_USED ElementaryFileType = 10
	// Places where daily work periods begin and/or end.
	ElementaryFileType_EF_PLACES ElementaryFileType = 11
	// Current usage data.
	ElementaryFileType_EF_CURRENT_USAGE ElementaryFileType = 12
	// Control activity data.
	ElementaryFileType_EF_CONTROL_ACTIVITY_DATA ElementaryFileType = 13
	// Number of calibrations since last download (workshop card).
	ElementaryFileType_EF_CARD_DOWNLOAD_WORKSHOP ElementaryFileType = 14
	// Calibration data (workshop card).
	ElementaryFileType_EF_CALIBRATION ElementaryFileType = 15
	// Sensor installation data.
	ElementaryFileType_EF_SENSOR_INSTALLATION_DATA ElementaryFileType = 16
	// Controller activity data (control card).
	ElementaryFileType_EF_CONTROLLER_ACTIVITY_DATA ElementaryFileType = 17
	// Company activity data (company card).
	ElementaryFileType_EF_COMPANY_ACTIVITY_DATA ElementaryFileType = 18
	// Date of last card download (driver card).
	ElementaryFileType_EF_CARD_DOWNLOAD_DRIVER ElementaryFileType = 19
	// Card and card holder identification data.
	ElementaryFileType_EF_IDENTIFICATION ElementaryFileType = 20
	// Driving licence information.
	ElementaryFileType_EF_DRIVING_LICENCE_INFO ElementaryFileType = 21
	// Specific conditions data.
	ElementaryFileType_EF_SPECIFIC_CONDITIONS ElementaryFileType = 22
	// Vehicle units used data.
	ElementaryFileType_EF_VEHICLE_UNITS_USED ElementaryFileType = 23
	// GNSS places for accumulated driving.
	ElementaryFileType_EF_GNSS_PLACES ElementaryFileType = 24
	// Card application identification data (G2V2).
	ElementaryFileType_EF_APPLICATION_IDENTIFICATION_V2 ElementaryFileType = 25
	// Authentication status for places.
	ElementaryFileType_EF_PLACES_AUTHENTICATION ElementaryFileType = 26
	// Authentication status for GNSS places.
	ElementaryFileType_EF_GNSS_PLACES_AUTHENTICATION ElementaryFileType = 27
	// Border crossings data.
	ElementaryFileType_EF_BORDER_CROSSINGS ElementaryFileType = 28
	// Load/unload operations data.
	ElementaryFileType_EF_LOAD_UNLOAD_OPERATIONS ElementaryFileType = 29
	// Load type entries data.
	ElementaryFileType_EF_LOAD_TYPE_ENTRIES ElementaryFileType = 30
	// Additional calibration data (workshop card).
	ElementaryFileType_EF_CALIBRATION_ADD_DATA ElementaryFileType = 31
	// Vehicle unit configuration data.
	ElementaryFileType_EF_VU_CONFIGURATION ElementaryFileType = 32
	// Directory of applications on the card.
	ElementaryFileType_EF_DIR ElementaryFileType = 33
	// Card public key certificate for authentication (Generation 1).
	ElementaryFileType_EF_CARD_CERTIFICATE ElementaryFileType = 34
	// Card public key certificate for mutual authentication (Generation 2).
	ElementaryFileType_EF_CARD_MA_CERTIFICATE ElementaryFileType = 35
	// Card public key certificate for digital signatures (Generation 2).
	ElementaryFileType_EF_CARD_SIGN_CERTIFICATE ElementaryFileType = 36
	// Certification Authority certificate (both generations).
	ElementaryFileType_EF_CA_CERTIFICATE ElementaryFileType = 37
	// Link certificate for chaining root CAs (Generation 2).
	ElementaryFileType_EF_LINK_CERTIFICATE ElementaryFileType = 38
	// Elementary file for the external GNSS facility.
	ElementaryFileType_EF_EGF ElementaryFileType = 39
	// Elementary file for the vehicle unit data on the GNSS facility.
	ElementaryFileType_EF_VU ElementaryFileType = 40
)

// Enum value maps for ElementaryFileType.
var (
	ElementaryFileType_name = map[int32]string{
		0:  "ELEMENTARY_FILE_UNSPECIFIED",
		1:  "EF_ICC",
		2:  "EF_IC",
		4:  "EF_ATR_INFO",
		5:  "EF_EXTENDED_LENGTH",
		6:  "EF_APPLICATION_IDENTIFICATION",
		7:  "EF_EVENTS_DATA",
		8:  "EF_FAULTS_DATA",
		9:  "EF_DRIVER_ACTIVITY_DATA",
		10: "EF_VEHICLES_USED",
		11: "EF_PLACES",
		12: "EF_CURRENT_USAGE",
		13: "EF_CONTROL_ACTIVITY_DATA",
		14: "EF_CARD_DOWNLOAD_WORKSHOP",
		15: "EF_CALIBRATION",
		16: "EF_SENSOR_INSTALLATION_DATA",
		17: "EF_CONTROLLER_ACTIVITY_DATA",
		18: "EF_COMPANY_ACTIVITY_DATA",
		19: "EF_CARD_DOWNLOAD_DRIVER",
		20: "EF_IDENTIFICATION",
		21: "EF_DRIVING_LICENCE_INFO",
		22: "EF_SPECIFIC_CONDITIONS",
		23: "EF_VEHICLE_UNITS_USED",
		24: "EF_GNSS_PLACES",
		25: "EF_APPLICATION_IDENTIFICATION_V2",
		26: "EF_PLACES_AUTHENTICATION",
		27: "EF_GNSS_PLACES_AUTHENTICATION",
		28: "EF_BORDER_CROSSINGS",
		29: "EF_LOAD_UNLOAD_OPERATIONS",
		30: "EF_LOAD_TYPE_ENTRIES",
		31: "EF_CALIBRATION_ADD_DATA",
		32: "EF_VU_CONFIGURATION",
		33: "EF_DIR",
		34: "EF_CARD_CERTIFICATE",
		35: "EF_CARD_MA_CERTIFICATE",
		36: "EF_CARD_SIGN_CERTIFICATE",
		37: "EF_CA_CERTIFICATE",
		38: "EF_LINK_CERTIFICATE",
		39: "EF_EGF",
		40: "EF_VU",
	}
	ElementaryFileType_value = map[string]int32{
		"ELEMENTARY_FILE_UNSPECIFIED":      0,
		"EF_ICC":                           1,
		"EF_IC":                            2,
		"EF_ATR_INFO":                      4,
		"EF_EXTENDED_LENGTH":               5,
		"EF_APPLICATION_IDENTIFICATION":    6,
		"EF_EVENTS_DATA":                   7,
		"EF_FAULTS_DATA":                   8,
		"EF_DRIVER_ACTIVITY_DATA":          9,
		"EF_VEHICLES_USED":                 10,
		"EF_PLACES":                        11,
		"EF_CURRENT_USAGE":                 12,
		"EF_CONTROL_ACTIVITY_DATA":         13,
		"EF_CARD_DOWNLOAD_WORKSHOP":        14,
		"EF_CALIBRATION":                   15,
		"EF_SENSOR_INSTALLATION_DATA":      16,
		"EF_CONTROLLER_ACTIVITY_DATA":      17,
		"EF_COMPANY_ACTIVITY_DATA":         18,
		"EF_CARD_DOWNLOAD_DRIVER":          19,
		"EF_IDENTIFICATION":                20,
		"EF_DRIVING_LICENCE_INFO":          21,
		"EF_SPECIFIC_CONDITIONS":           22,
		"EF_VEHICLE_UNITS_USED":            23,
		"EF_GNSS_PLACES":                   24,
		"EF_APPLICATION_IDENTIFICATION_V2": 25,
		"EF_PLACES_AUTHENTICATION":         26,
		"EF_GNSS_PLACES_AUTHENTICATION":    27,
		"EF_BORDER_CROSSINGS":              28,
		"EF_LOAD_UNLOAD_OPERATIONS":        29,
		"EF_LOAD_TYPE_ENTRIES":             30,
		"EF_CALIBRATION_ADD_DATA":          31,
		"EF_VU_CONFIGURATION":              32,
		"EF_DIR":                           33,
		"EF_CARD_CERTIFICATE":              34,
		"EF_CARD_MA_CERTIFICATE":           35,
		"EF_CARD_SIGN_CERTIFICATE":         36,
		"EF_CA_CERTIFICATE":                37,
		"EF_LINK_CERTIFICATE":              38,
		"EF_EGF":                           39,
		"EF_VU":                            40,
	}
)

func (x ElementaryFileType) Enum() *ElementaryFileType {
	p := new(ElementaryFileType)
	*p = x
	return p
}

func (x ElementaryFileType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ElementaryFileType) Descriptor() protoreflect.EnumDescriptor {
	return file_wayplatform_connect_tachograph_card_v1_elementary_file_type_proto_enumTypes[0].Descriptor()
}

func (ElementaryFileType) Type() protoreflect.EnumType {
	return &file_wayplatform_connect_tachograph_card_v1_elementary_file_type_proto_enumTypes[0]
}

func (x ElementaryFileType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

var File_wayplatform_connect_tachograph_card_v1_elementary_file_type_proto protoreflect.FileDescriptor

const file_wayplatform_connect_tachograph_card_v1_elementary_file_type_proto_rawDesc = "" +
	"\n" +
	"Awayplatform/connect/tachograph/card/v1/elementary_file_type.proto\x12&wayplatform.connect.tachograph.card.v1\x1a4wayplatform/connect/tachograph/card/v1/file_id.proto*\x8d\n" +
	"\n" +
	"\x12ElementaryFileType\x12\x1f\n" +
	"\x1bELEMENTARY_FILE_UNSPECIFIED\x10\x00\x12\x10\n" +
	"\x06EF_ICC\x10\x01\x1a\x04\x88\xb5\x18\x02\x12\x0f\n" +
	"\x05EF_IC\x10\x02\x1a\x04\x88\xb5\x18\x05\x12\x16\n" +
	"\vEF_ATR_INFO\x10\x04\x1a\x05\x88\xb5\x18\x81^\x12\x1c\n" +
	"\x12EF_EXTENDED_LENGTH\x10\x05\x1a\x04\x88\xb5\x18\x06\x12(\n" +
	"\x1dEF_APPLICATION_IDENTIFICATION\x10\x06\x1a\x05\x88\xb5\x18\x81\n" +
	"\x12\x19\n" +
	"\x0eEF_EVENTS_DATA\x10\a\x1a\x05\x88\xb5\x18\x82\n" +
	"\x12\x19\n" +
	"\x0eEF_FAULTS_DATA\x10\b\x1a\x05\x88\xb5\x18\x83\n" +
	"\x12\"\n" +
	"\x17EF_DRIVER_ACTIVITY_DATA\x10\t\x1a\x05\x88\xb5\x18\x84\n" +
	"\x12\x1b\n" +
	"\x10EF_VEHICLES_USED\x10\n" +
	"\x1a\x05\x88\xb5\x18\x85\n" +
	"\x12\x14\n" +
	"\tEF_PLACES\x10\v\x1a\x05\x88\xb5\x18\x86\n" +
	"\x12\x1b\n" +
	"\x10EF_CURRENT_USAGE\x10\f\x1a\x05\x88\xb5\x18\x87\n" +
	"\x12#\n" +
	"\x18EF_CONTROL_ACTIVITY_DATA\x10\r\x1a\x05\x88\xb5\x18\x88\n" +
	"\x12$\n" +
	"\x19EF_CARD_DOWNLOAD_WORKSHOP\x10\x0e\x1a\x05\x88\xb5\x18\x89\n" +
	"\x12\x19\n" +
	"\x0eEF_CALIBRATION\x10\x0f\x1a\x05\x88\xb5\x18\x8a\n" +
	"\x12&\n" +
	"\x1bEF_SENSOR_INSTALLATION_DATA\x10\x10\x1a\x05\x88\xb5\x18\x8b\n" +
	"\x12&\n" +
	"\x1bEF_CONTROLLER_ACTIVITY_DATA\x10\x11\x1a\x05\x88\xb5\x18\x8c\n" +
	"\x12#\n" +
	"\x18EF_COMPANY_ACTIVITY_DATA\x10\x12\x1a\x05\x88\xb5\x18\x8d\n" +
	"\x12\"\n" +
	"\x17EF_CARD_DOWNLOAD_DRIVER\x10\x13\x1a\x05\x88\xb5\x18\x8e\n" +
	"\x12\x1c\n" +
	"\x11EF_IDENTIFICATION\x10\x14\x1a\x05\x88\xb5\x18\xa0\n" +
	"\x12\"\n" +
	"\x17EF_DRIVING_LICENCE_INFO\x10\x15\x1a\x05\x88\xb5\x18\xa1\n" +
	"\x12!\n" +
	"\x16EF_SPECIFIC_CONDITIONS\x10\x16\x1a\x05\x88\xb5\x18\xa2\n" +
	"\x12 \n" +
	"\x15EF_VEHICLE_UNITS_USED\x10\x17\x1a\x05\x88\xb5\x18\xa3\n" +
	"\x12\x19\n" +
	"\x0eEF_GNSS_PLACES\x10\x18\x1a\x05\x88\xb5\x18\xa4\n" +
	"\x12+\n" +
	" EF_APPLICATION_IDENTIFICATION_V2\x10\x19\x1a\x05\x88\xb5\x18\xa5\n" +
	"\x12#\n" +
	"\x18EF_PLACES_AUTHENTICATION\x10\x1a\x1a\x05\x88\xb5\x18\xa6\n" +
	"\x12(\n" +
	"\x1dEF_GNSS_PLACES_AUTHENTICATION\x10\x1b\x1a\x05\x88\xb5\x18\xa7\n" +
	"\x12\x1e\n" +
	"\x13EF_BORDER_CROSSINGS\x10\x1c\x1a\x05\x88\xb5\x18\xa8\n" +
	"\x12$\n" +
	"\x19EF_LOAD_UNLOAD_OPERATIONS\x10\x1d\x1a\x05\x88\xb5\x18\xa9\n" +
	"\x12\x1f\n" +
	"\x14EF_LOAD_TYPE_ENTRIES\x10\x1e\x1a\x05\x88\xb5\x18\xb0\n" +
	"\x12\"\n" +
	"\x17EF_CALIBRATION_ADD_DATA\x10\x1f\x1a\x05\x88\xb5\x18\xb1\n" +
	"\x12\x1e\n" +
	"\x13EF_VU_CONFIGURATION\x10 \x1a\x05\x88\xb5\x18\xc0\n" +
	"\x12\x11\n" +
	"\x06EF_DIR\x10!\x1a\x05\x88\xb5\x18\x80^\x12\x1f\n" +
	"\x13EF_CARD_CERTIFICATE\x10\"\x1a\x06\x88\xb5\x18\x80\x82\x03\x12\"\n" +
	"\x16EF_CARD_MA_CERTIFICATE\x10#\x1a\x06\x88\xb5\x18\x80\x82\x03\x12$\n" +
	"\x18EF_CARD_SIGN_CERTIFICATE\x10$\x1a\x06\x88\xb5\x18\x81\x82\x03\x12\x1d\n" +
	"\x11EF_CA_CERTIFICATE\x10%\x1a\x06\x88\xb5\x18\x88\x82\x03\x12\x1f\n" +
	"\x13EF_LINK_CERTIFICATE\x10&\x1a\x06\x88\xb5\x18\x89\x82\x03\x12\x11\n" +
	"\x06EF_EGF\x10'\x1a\x05\x88\xb5\x18\xaf^\x12\x10\n" +
	"\x05EF_VU\x10(\x1a\x05\x88\xb5\x18\xb0^B\xe4\x02\n" +
	"*com.wayplatform.connect.tachograph.card.v1B\x17ElementaryFileTypeProtoP\x01Z`github.com/way-platform/tachograph-go/proto/gen/go/wayplatform/connect/tachograph/card/v1;cardv1\xa2\x02\x04WCTC\xaa\x02&Wayplatform.Connect.Tachograph.Card.V1\xca\x02&Wayplatform\\Connect\\Tachograph\\Card\\V1\xe2\x022Wayplatform\\Connect\\Tachograph\\Card\\V1\\GPBMetadata\xea\x02*Wayplatform::Connect::Tachograph::Card::V1b\beditionsp\xe8\a"

var file_wayplatform_connect_tachograph_card_v1_elementary_file_type_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_wayplatform_connect_tachograph_card_v1_elementary_file_type_proto_goTypes = []any{
	(ElementaryFileType)(0), // 0: wayplatform.connect.tachograph.card.v1.ElementaryFileType
}
var file_wayplatform_connect_tachograph_card_v1_elementary_file_type_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_wayplatform_connect_tachograph_card_v1_elementary_file_type_proto_init() }
func file_wayplatform_connect_tachograph_card_v1_elementary_file_type_proto_init() {
	if File_wayplatform_connect_tachograph_card_v1_elementary_file_type_proto != nil {
		return
	}
	file_wayplatform_connect_tachograph_card_v1_file_id_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wayplatform_connect_tachograph_card_v1_elementary_file_type_proto_rawDesc), len(file_wayplatform_connect_tachograph_card_v1_elementary_file_type_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wayplatform_connect_tachograph_card_v1_elementary_file_type_proto_goTypes,
		DependencyIndexes: file_wayplatform_connect_tachograph_card_v1_elementary_file_type_proto_depIdxs,
		EnumInfos:         file_wayplatform_connect_tachograph_card_v1_elementary_file_type_proto_enumTypes,
	}.Build()
	File_wayplatform_connect_tachograph_card_v1_elementary_file_type_proto = out.File
	file_wayplatform_connect_tachograph_card_v1_elementary_file_type_proto_goTypes = nil
	file_wayplatform_connect_tachograph_card_v1_elementary_file_type_proto_depIdxs = nil
}
