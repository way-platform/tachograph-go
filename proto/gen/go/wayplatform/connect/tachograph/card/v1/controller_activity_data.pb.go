// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wayplatform/connect/tachograph/card/v1/controller_activity_data.proto

package cardv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents control activity data from EF_Controller_Activity_Data.
//
// Corresponds to the `ControlCardControlActivityData` data type.
// See Data Dictionary, Section 2.51.
type ControllerActivityData struct {
	state                        protoimpl.MessageState            `protogen:"opaque.v1"`
	xxx_hidden_NewestRecordIndex int32                             `protobuf:"varint,1,opt,name=newest_record_index,json=newestRecordIndex"`
	xxx_hidden_Records           *[]*ControllerActivityData_Record `protobuf:"bytes,2,rep,name=records"`
	XXX_raceDetectHookData       protoimpl.RaceDetectHookData
	XXX_presence                 [1]uint32
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *ControllerActivityData) Reset() {
	*x = ControllerActivityData{}
	mi := &file_wayplatform_connect_tachograph_card_v1_controller_activity_data_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ControllerActivityData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControllerActivityData) ProtoMessage() {}

func (x *ControllerActivityData) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_card_v1_controller_activity_data_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ControllerActivityData) GetNewestRecordIndex() int32 {
	if x != nil {
		return x.xxx_hidden_NewestRecordIndex
	}
	return 0
}

func (x *ControllerActivityData) GetRecords() []*ControllerActivityData_Record {
	if x != nil {
		if x.xxx_hidden_Records != nil {
			return *x.xxx_hidden_Records
		}
	}
	return nil
}

func (x *ControllerActivityData) SetNewestRecordIndex(v int32) {
	x.xxx_hidden_NewestRecordIndex = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *ControllerActivityData) SetRecords(v []*ControllerActivityData_Record) {
	x.xxx_hidden_Records = &v
}

func (x *ControllerActivityData) HasNewestRecordIndex() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ControllerActivityData) ClearNewestRecordIndex() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_NewestRecordIndex = 0
}

type ControllerActivityData_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Index of the last updated record in the ring buffer.
	NewestRecordIndex *int32
	// The set of control activity records.
	Records []*ControllerActivityData_Record
}

func (b0 ControllerActivityData_builder) Build() *ControllerActivityData {
	m0 := &ControllerActivityData{}
	b, x := &b0, m0
	_, _ = b, x
	if b.NewestRecordIndex != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_NewestRecordIndex = *b.NewestRecordIndex
	}
	x.xxx_hidden_Records = &b.Records
	return m0
}

// Represents a single control activity record.
// See Data Dictionary, Section 2.51.
type ControllerActivityData_Record struct {
	state                                          protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ControlType                         []byte                 `protobuf:"bytes,1,opt,name=control_type,json=controlType"`
	xxx_hidden_ControlTime                         *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=control_time,json=controlTime"`
	xxx_hidden_ControlledCardNumber                *string                `protobuf:"bytes,3,opt,name=controlled_card_number,json=controlledCardNumber"`
	xxx_hidden_ControlledVehicleRegistrationNation *string                `protobuf:"bytes,4,opt,name=controlled_vehicle_registration_nation,json=controlledVehicleRegistrationNation"`
	xxx_hidden_ControlledVehicleRegistrationNumber *string                `protobuf:"bytes,5,opt,name=controlled_vehicle_registration_number,json=controlledVehicleRegistrationNumber"`
	xxx_hidden_ControlDownloadPeriodBegin          *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=control_download_period_begin,json=controlDownloadPeriodBegin"`
	xxx_hidden_ControlDownloadPeriodEnd            *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=control_download_period_end,json=controlDownloadPeriodEnd"`
	XXX_raceDetectHookData                         protoimpl.RaceDetectHookData
	XXX_presence                                   [1]uint32
	unknownFields                                  protoimpl.UnknownFields
	sizeCache                                      protoimpl.SizeCache
}

func (x *ControllerActivityData_Record) Reset() {
	*x = ControllerActivityData_Record{}
	mi := &file_wayplatform_connect_tachograph_card_v1_controller_activity_data_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ControllerActivityData_Record) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControllerActivityData_Record) ProtoMessage() {}

func (x *ControllerActivityData_Record) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_card_v1_controller_activity_data_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ControllerActivityData_Record) GetControlType() []byte {
	if x != nil {
		return x.xxx_hidden_ControlType
	}
	return nil
}

func (x *ControllerActivityData_Record) GetControlTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_ControlTime
	}
	return nil
}

func (x *ControllerActivityData_Record) GetControlledCardNumber() string {
	if x != nil {
		if x.xxx_hidden_ControlledCardNumber != nil {
			return *x.xxx_hidden_ControlledCardNumber
		}
		return ""
	}
	return ""
}

func (x *ControllerActivityData_Record) GetControlledVehicleRegistrationNation() string {
	if x != nil {
		if x.xxx_hidden_ControlledVehicleRegistrationNation != nil {
			return *x.xxx_hidden_ControlledVehicleRegistrationNation
		}
		return ""
	}
	return ""
}

func (x *ControllerActivityData_Record) GetControlledVehicleRegistrationNumber() string {
	if x != nil {
		if x.xxx_hidden_ControlledVehicleRegistrationNumber != nil {
			return *x.xxx_hidden_ControlledVehicleRegistrationNumber
		}
		return ""
	}
	return ""
}

func (x *ControllerActivityData_Record) GetControlDownloadPeriodBegin() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_ControlDownloadPeriodBegin
	}
	return nil
}

func (x *ControllerActivityData_Record) GetControlDownloadPeriodEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_ControlDownloadPeriodEnd
	}
	return nil
}

func (x *ControllerActivityData_Record) SetControlType(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_ControlType = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *ControllerActivityData_Record) SetControlTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_ControlTime = v
}

func (x *ControllerActivityData_Record) SetControlledCardNumber(v string) {
	x.xxx_hidden_ControlledCardNumber = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 7)
}

func (x *ControllerActivityData_Record) SetControlledVehicleRegistrationNation(v string) {
	x.xxx_hidden_ControlledVehicleRegistrationNation = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 7)
}

func (x *ControllerActivityData_Record) SetControlledVehicleRegistrationNumber(v string) {
	x.xxx_hidden_ControlledVehicleRegistrationNumber = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 7)
}

func (x *ControllerActivityData_Record) SetControlDownloadPeriodBegin(v *timestamppb.Timestamp) {
	x.xxx_hidden_ControlDownloadPeriodBegin = v
}

func (x *ControllerActivityData_Record) SetControlDownloadPeriodEnd(v *timestamppb.Timestamp) {
	x.xxx_hidden_ControlDownloadPeriodEnd = v
}

func (x *ControllerActivityData_Record) HasControlType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ControllerActivityData_Record) HasControlTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ControlTime != nil
}

func (x *ControllerActivityData_Record) HasControlledCardNumber() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ControllerActivityData_Record) HasControlledVehicleRegistrationNation() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ControllerActivityData_Record) HasControlledVehicleRegistrationNumber() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *ControllerActivityData_Record) HasControlDownloadPeriodBegin() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ControlDownloadPeriodBegin != nil
}

func (x *ControllerActivityData_Record) HasControlDownloadPeriodEnd() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ControlDownloadPeriodEnd != nil
}

func (x *ControllerActivityData_Record) ClearControlType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ControlType = nil
}

func (x *ControllerActivityData_Record) ClearControlTime() {
	x.xxx_hidden_ControlTime = nil
}

func (x *ControllerActivityData_Record) ClearControlledCardNumber() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ControlledCardNumber = nil
}

func (x *ControllerActivityData_Record) ClearControlledVehicleRegistrationNation() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_ControlledVehicleRegistrationNation = nil
}

func (x *ControllerActivityData_Record) ClearControlledVehicleRegistrationNumber() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_ControlledVehicleRegistrationNumber = nil
}

func (x *ControllerActivityData_Record) ClearControlDownloadPeriodBegin() {
	x.xxx_hidden_ControlDownloadPeriodBegin = nil
}

func (x *ControllerActivityData_Record) ClearControlDownloadPeriodEnd() {
	x.xxx_hidden_ControlDownloadPeriodEnd = nil
}

type ControllerActivityData_Record_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// See Data Dictionary, Section 2.53 for `ControlType`.
	ControlType []byte
	// Timestamp of the control activity. See DD Section 2.162 for `TimeReal`.
	ControlTime *timestamppb.Timestamp
	// Card number of the card that was controlled (if applicable).
	ControlledCardNumber *string
	// Nation of the vehicle's registration.
	ControlledVehicleRegistrationNation *string
	// Vehicle's registration number.
	ControlledVehicleRegistrationNumber *string
	// Start of the downloaded period from a VU (if applicable).
	ControlDownloadPeriodBegin *timestamppb.Timestamp
	// End of the downloaded period from a VU (if applicable).
	ControlDownloadPeriodEnd *timestamppb.Timestamp
}

func (b0 ControllerActivityData_Record_builder) Build() *ControllerActivityData_Record {
	m0 := &ControllerActivityData_Record{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ControlType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_ControlType = b.ControlType
	}
	x.xxx_hidden_ControlTime = b.ControlTime
	if b.ControlledCardNumber != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 7)
		x.xxx_hidden_ControlledCardNumber = b.ControlledCardNumber
	}
	if b.ControlledVehicleRegistrationNation != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 7)
		x.xxx_hidden_ControlledVehicleRegistrationNation = b.ControlledVehicleRegistrationNation
	}
	if b.ControlledVehicleRegistrationNumber != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 7)
		x.xxx_hidden_ControlledVehicleRegistrationNumber = b.ControlledVehicleRegistrationNumber
	}
	x.xxx_hidden_ControlDownloadPeriodBegin = b.ControlDownloadPeriodBegin
	x.xxx_hidden_ControlDownloadPeriodEnd = b.ControlDownloadPeriodEnd
	return m0
}

var File_wayplatform_connect_tachograph_card_v1_controller_activity_data_proto protoreflect.FileDescriptor

const file_wayplatform_connect_tachograph_card_v1_controller_activity_data_proto_rawDesc = "" +
	"\n" +
	"Ewayplatform/connect/tachograph/card/v1/controller_activity_data.proto\x12&wayplatform.connect.tachograph.card.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\xb0\x05\n" +
	"\x16ControllerActivityData\x12.\n" +
	"\x13newest_record_index\x18\x01 \x01(\x05R\x11newestRecordIndex\x12_\n" +
	"\arecords\x18\x02 \x03(\v2E.wayplatform.connect.tachograph.card.v1.ControllerActivityData.RecordR\arecords\x1a\x84\x04\n" +
	"\x06Record\x12!\n" +
	"\fcontrol_type\x18\x01 \x01(\fR\vcontrolType\x12=\n" +
	"\fcontrol_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\vcontrolTime\x124\n" +
	"\x16controlled_card_number\x18\x03 \x01(\tR\x14controlledCardNumber\x12S\n" +
	"&controlled_vehicle_registration_nation\x18\x04 \x01(\tR#controlledVehicleRegistrationNation\x12S\n" +
	"&controlled_vehicle_registration_number\x18\x05 \x01(\tR#controlledVehicleRegistrationNumber\x12]\n" +
	"\x1dcontrol_download_period_begin\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\x1acontrolDownloadPeriodBegin\x12Y\n" +
	"\x1bcontrol_download_period_end\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\x18controlDownloadPeriodEndB\xe8\x02\n" +
	"*com.wayplatform.connect.tachograph.card.v1B\x1bControllerActivityDataProtoP\x01Z`github.com/way-platform/tachograph-go/proto/gen/go/wayplatform/connect/tachograph/card/v1;cardv1\xa2\x02\x04WCTC\xaa\x02&Wayplatform.Connect.Tachograph.Card.V1\xca\x02&Wayplatform\\Connect\\Tachograph\\Card\\V1\xe2\x022Wayplatform\\Connect\\Tachograph\\Card\\V1\\GPBMetadata\xea\x02*Wayplatform::Connect::Tachograph::Card::V1b\beditionsp\xe8\a"

var file_wayplatform_connect_tachograph_card_v1_controller_activity_data_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_wayplatform_connect_tachograph_card_v1_controller_activity_data_proto_goTypes = []any{
	(*ControllerActivityData)(nil),        // 0: wayplatform.connect.tachograph.card.v1.ControllerActivityData
	(*ControllerActivityData_Record)(nil), // 1: wayplatform.connect.tachograph.card.v1.ControllerActivityData.Record
	(*timestamppb.Timestamp)(nil),         // 2: google.protobuf.Timestamp
}
var file_wayplatform_connect_tachograph_card_v1_controller_activity_data_proto_depIdxs = []int32{
	1, // 0: wayplatform.connect.tachograph.card.v1.ControllerActivityData.records:type_name -> wayplatform.connect.tachograph.card.v1.ControllerActivityData.Record
	2, // 1: wayplatform.connect.tachograph.card.v1.ControllerActivityData.Record.control_time:type_name -> google.protobuf.Timestamp
	2, // 2: wayplatform.connect.tachograph.card.v1.ControllerActivityData.Record.control_download_period_begin:type_name -> google.protobuf.Timestamp
	2, // 3: wayplatform.connect.tachograph.card.v1.ControllerActivityData.Record.control_download_period_end:type_name -> google.protobuf.Timestamp
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_wayplatform_connect_tachograph_card_v1_controller_activity_data_proto_init() }
func file_wayplatform_connect_tachograph_card_v1_controller_activity_data_proto_init() {
	if File_wayplatform_connect_tachograph_card_v1_controller_activity_data_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wayplatform_connect_tachograph_card_v1_controller_activity_data_proto_rawDesc), len(file_wayplatform_connect_tachograph_card_v1_controller_activity_data_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wayplatform_connect_tachograph_card_v1_controller_activity_data_proto_goTypes,
		DependencyIndexes: file_wayplatform_connect_tachograph_card_v1_controller_activity_data_proto_depIdxs,
		MessageInfos:      file_wayplatform_connect_tachograph_card_v1_controller_activity_data_proto_msgTypes,
	}.Build()
	File_wayplatform_connect_tachograph_card_v1_controller_activity_data_proto = out.File
	file_wayplatform_connect_tachograph_card_v1_controller_activity_data_proto_goTypes = nil
	file_wayplatform_connect_tachograph_card_v1_controller_activity_data_proto_depIdxs = nil
}
