// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wayplatform/connect/tachograph/card/v1/faults_data.proto

package cardv1

import (
	v1 "github.com/way-platform/tachograph-go/proto/gen/go/wayplatform/connect/tachograph/datadictionary/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents the content of the EF_Faults_Data file, which contains a log of
// faults related to the tachograph system.
//
// The file structure is specified in Appendix 2, Section 4.2.1.
//
//	EF Faults_Data
//	└─CardFaultData
//
// The data type `CardFaultData` is specified in the Data Dictionary, Section 2.21.
//
// ASN.1 Definition:
//
//	CardFaultData ::= SEQUENCE (SIZE(2)) OF
//	    cardFaultRecords SET SIZE(NoOfFaultsPerType) OF CardFaultRecord
type FaultsData struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Records     *[]*FaultsData_Record  `protobuf:"bytes,1,rep,name=records"`
	xxx_hidden_Signature   []byte                 `protobuf:"bytes,2,opt,name=signature"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *FaultsData) Reset() {
	*x = FaultsData{}
	mi := &file_wayplatform_connect_tachograph_card_v1_faults_data_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FaultsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FaultsData) ProtoMessage() {}

func (x *FaultsData) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_card_v1_faults_data_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *FaultsData) GetRecords() []*FaultsData_Record {
	if x != nil {
		if x.xxx_hidden_Records != nil {
			return *x.xxx_hidden_Records
		}
	}
	return nil
}

func (x *FaultsData) GetSignature() []byte {
	if x != nil {
		return x.xxx_hidden_Signature
	}
	return nil
}

func (x *FaultsData) SetRecords(v []*FaultsData_Record) {
	x.xxx_hidden_Records = &v
}

func (x *FaultsData) SetSignature(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Signature = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *FaultsData) HasSignature() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *FaultsData) ClearSignature() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Signature = nil
}

type FaultsData_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The set of fault records.
	// Corresponds to `cardFaultRecords`.
	Records []*FaultsData_Record
	// Digital signature for the EF_Faults_Data file content.
	//
	// See Data Dictionary, Section 2.149, `Signature`.
	// ASN.1 Definition:
	//
	//	Signature ::= OCTET STRING (SIZE(128 for Gen1))
	Signature []byte
}

func (b0 FaultsData_builder) Build() *FaultsData {
	m0 := &FaultsData{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Records = &b.Records
	if b.Signature != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Signature = b.Signature
	}
	return m0
}

// Represents a single fault record.
//
// The data type `CardFaultRecord` is specified in the Data Dictionary, Section 2.22.
//
// ASN.1 Definition:
//
//	CardFaultRecord ::= SEQUENCE {
//	    faultType EventFaultType,
//	    faultBeginTime TimeReal,
//	    faultEndTime TimeReal,
//	    faultVehicleRegistration VehicleRegistrationIdentification
//	}
type FaultsData_Record struct {
	state                               protoimpl.MessageState                `protogen:"opaque.v1"`
	xxx_hidden_Valid                    bool                                  `protobuf:"varint,1,opt,name=valid"`
	xxx_hidden_FaultType                v1.EventFaultType                     `protobuf:"varint,2,opt,name=fault_type,json=faultType,enum=wayplatform.connect.tachograph.datadictionary.v1.EventFaultType"`
	xxx_hidden_FaultBeginTime           *timestamppb.Timestamp                `protobuf:"bytes,4,opt,name=fault_begin_time,json=faultBeginTime"`
	xxx_hidden_FaultEndTime             *timestamppb.Timestamp                `protobuf:"bytes,5,opt,name=fault_end_time,json=faultEndTime"`
	xxx_hidden_FaultVehicleRegistration *v1.VehicleRegistrationIdentification `protobuf:"bytes,6,opt,name=fault_vehicle_registration,json=faultVehicleRegistration"`
	xxx_hidden_RawData                  []byte                                `protobuf:"bytes,7,opt,name=raw_data,json=rawData"`
	XXX_raceDetectHookData              protoimpl.RaceDetectHookData
	XXX_presence                        [1]uint32
	unknownFields                       protoimpl.UnknownFields
	sizeCache                           protoimpl.SizeCache
}

func (x *FaultsData_Record) Reset() {
	*x = FaultsData_Record{}
	mi := &file_wayplatform_connect_tachograph_card_v1_faults_data_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FaultsData_Record) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FaultsData_Record) ProtoMessage() {}

func (x *FaultsData_Record) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_card_v1_faults_data_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *FaultsData_Record) GetValid() bool {
	if x != nil {
		return x.xxx_hidden_Valid
	}
	return false
}

func (x *FaultsData_Record) GetFaultType() v1.EventFaultType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_FaultType
		}
	}
	return v1.EventFaultType(0)
}

func (x *FaultsData_Record) GetFaultBeginTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_FaultBeginTime
	}
	return nil
}

func (x *FaultsData_Record) GetFaultEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_FaultEndTime
	}
	return nil
}

func (x *FaultsData_Record) GetFaultVehicleRegistration() *v1.VehicleRegistrationIdentification {
	if x != nil {
		return x.xxx_hidden_FaultVehicleRegistration
	}
	return nil
}

func (x *FaultsData_Record) GetRawData() []byte {
	if x != nil {
		return x.xxx_hidden_RawData
	}
	return nil
}

func (x *FaultsData_Record) SetValid(v bool) {
	x.xxx_hidden_Valid = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *FaultsData_Record) SetFaultType(v v1.EventFaultType) {
	x.xxx_hidden_FaultType = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *FaultsData_Record) SetFaultBeginTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_FaultBeginTime = v
}

func (x *FaultsData_Record) SetFaultEndTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_FaultEndTime = v
}

func (x *FaultsData_Record) SetFaultVehicleRegistration(v *v1.VehicleRegistrationIdentification) {
	x.xxx_hidden_FaultVehicleRegistration = v
}

func (x *FaultsData_Record) SetRawData(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_RawData = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *FaultsData_Record) HasValid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *FaultsData_Record) HasFaultType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *FaultsData_Record) HasFaultBeginTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_FaultBeginTime != nil
}

func (x *FaultsData_Record) HasFaultEndTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_FaultEndTime != nil
}

func (x *FaultsData_Record) HasFaultVehicleRegistration() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_FaultVehicleRegistration != nil
}

func (x *FaultsData_Record) HasRawData() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *FaultsData_Record) ClearValid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Valid = false
}

func (x *FaultsData_Record) ClearFaultType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FaultType = v1.EventFaultType_EVENT_FAULT_TYPE_UNSPECIFIED
}

func (x *FaultsData_Record) ClearFaultBeginTime() {
	x.xxx_hidden_FaultBeginTime = nil
}

func (x *FaultsData_Record) ClearFaultEndTime() {
	x.xxx_hidden_FaultEndTime = nil
}

func (x *FaultsData_Record) ClearFaultVehicleRegistration() {
	x.xxx_hidden_FaultVehicleRegistration = nil
}

func (x *FaultsData_Record) ClearRawData() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_RawData = nil
}

type FaultsData_Record_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// If true, the fields below are populated with parsed, semantic data.
	// If false, the 'raw_data' field contains the original, unprocessed record
	// bytes.
	Valid *bool
	// The type of the fault.
	//
	// See Data Dictionary, Section 2.70, `EventFaultType`.
	// ASN.1 Definition:
	//
	//	EventFaultType ::= OCTET STRING (SIZE (1))
	FaultType *v1.EventFaultType
	// The date and time of the beginning of the fault.
	//
	// See Data Dictionary, Section 2.162, `TimeReal`.
	// ASN.1 Definition:
	//
	//	TimeReal ::= INTEGER (0..2^32-1)
	FaultBeginTime *timestamppb.Timestamp
	// The date and time of the end of the fault.
	//
	// See Data Dictionary, Section 2.162, `TimeReal`.
	// ASN.1 Definition:
	//
	//	TimeReal ::= INTEGER (0..2^32-1)
	FaultEndTime *timestamppb.Timestamp
	// The vehicle registration of the vehicle in which the fault happened.
	//
	// See Data Dictionary, Section 2.166, `VehicleRegistrationIdentification`.
	// ASN.1 Definition:
	//
	//	VehicleRegistrationIdentification ::= SEQUENCE { ... }
	FaultVehicleRegistration *v1.VehicleRegistrationIdentification
	// --- Field for a non-valid record (when valid = false) ---
	// Holds the raw 24 bytes of the original record.
	RawData []byte
}

func (b0 FaultsData_Record_builder) Build() *FaultsData_Record {
	m0 := &FaultsData_Record{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Valid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_Valid = *b.Valid
	}
	if b.FaultType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_FaultType = *b.FaultType
	}
	x.xxx_hidden_FaultBeginTime = b.FaultBeginTime
	x.xxx_hidden_FaultEndTime = b.FaultEndTime
	x.xxx_hidden_FaultVehicleRegistration = b.FaultVehicleRegistration
	if b.RawData != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_RawData = b.RawData
	}
	return m0
}

var File_wayplatform_connect_tachograph_card_v1_faults_data_proto protoreflect.FileDescriptor

const file_wayplatform_connect_tachograph_card_v1_faults_data_proto_rawDesc = "" +
	"\n" +
	"8wayplatform/connect/tachograph/card/v1/faults_data.proto\x12&wayplatform.connect.tachograph.card.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1aGwayplatform/connect/tachograph/datadictionary/v1/event_fault_type.proto\x1aZwayplatform/connect/tachograph/datadictionary/v1/vehicle_registration_identification.proto\"\xb8\x04\n" +
	"\n" +
	"FaultsData\x12S\n" +
	"\arecords\x18\x01 \x03(\v29.wayplatform.connect.tachograph.card.v1.FaultsData.RecordR\arecords\x12\x1c\n" +
	"\tsignature\x18\x02 \x01(\fR\tsignature\x1a\xb6\x03\n" +
	"\x06Record\x12\x14\n" +
	"\x05valid\x18\x01 \x01(\bR\x05valid\x12_\n" +
	"\n" +
	"fault_type\x18\x02 \x01(\x0e2@.wayplatform.connect.tachograph.datadictionary.v1.EventFaultTypeR\tfaultType\x12D\n" +
	"\x10fault_begin_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x0efaultBeginTime\x12@\n" +
	"\x0efault_end_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\ffaultEndTime\x12\x91\x01\n" +
	"\x1afault_vehicle_registration\x18\x06 \x01(\v2S.wayplatform.connect.tachograph.datadictionary.v1.VehicleRegistrationIdentificationR\x18faultVehicleRegistration\x12\x19\n" +
	"\braw_data\x18\a \x01(\fR\arawDataB\xdc\x02\n" +
	"*com.wayplatform.connect.tachograph.card.v1B\x0fFaultsDataProtoP\x01Z`github.com/way-platform/tachograph-go/proto/gen/go/wayplatform/connect/tachograph/card/v1;cardv1\xa2\x02\x04WCTC\xaa\x02&Wayplatform.Connect.Tachograph.Card.V1\xca\x02&Wayplatform\\Connect\\Tachograph\\Card\\V1\xe2\x022Wayplatform\\Connect\\Tachograph\\Card\\V1\\GPBMetadata\xea\x02*Wayplatform::Connect::Tachograph::Card::V1b\beditionsp\xe8\a"

var file_wayplatform_connect_tachograph_card_v1_faults_data_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_wayplatform_connect_tachograph_card_v1_faults_data_proto_goTypes = []any{
	(*FaultsData)(nil),                           // 0: wayplatform.connect.tachograph.card.v1.FaultsData
	(*FaultsData_Record)(nil),                    // 1: wayplatform.connect.tachograph.card.v1.FaultsData.Record
	(v1.EventFaultType)(0),                       // 2: wayplatform.connect.tachograph.datadictionary.v1.EventFaultType
	(*timestamppb.Timestamp)(nil),                // 3: google.protobuf.Timestamp
	(*v1.VehicleRegistrationIdentification)(nil), // 4: wayplatform.connect.tachograph.datadictionary.v1.VehicleRegistrationIdentification
}
var file_wayplatform_connect_tachograph_card_v1_faults_data_proto_depIdxs = []int32{
	1, // 0: wayplatform.connect.tachograph.card.v1.FaultsData.records:type_name -> wayplatform.connect.tachograph.card.v1.FaultsData.Record
	2, // 1: wayplatform.connect.tachograph.card.v1.FaultsData.Record.fault_type:type_name -> wayplatform.connect.tachograph.datadictionary.v1.EventFaultType
	3, // 2: wayplatform.connect.tachograph.card.v1.FaultsData.Record.fault_begin_time:type_name -> google.protobuf.Timestamp
	3, // 3: wayplatform.connect.tachograph.card.v1.FaultsData.Record.fault_end_time:type_name -> google.protobuf.Timestamp
	4, // 4: wayplatform.connect.tachograph.card.v1.FaultsData.Record.fault_vehicle_registration:type_name -> wayplatform.connect.tachograph.datadictionary.v1.VehicleRegistrationIdentification
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_wayplatform_connect_tachograph_card_v1_faults_data_proto_init() }
func file_wayplatform_connect_tachograph_card_v1_faults_data_proto_init() {
	if File_wayplatform_connect_tachograph_card_v1_faults_data_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wayplatform_connect_tachograph_card_v1_faults_data_proto_rawDesc), len(file_wayplatform_connect_tachograph_card_v1_faults_data_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wayplatform_connect_tachograph_card_v1_faults_data_proto_goTypes,
		DependencyIndexes: file_wayplatform_connect_tachograph_card_v1_faults_data_proto_depIdxs,
		MessageInfos:      file_wayplatform_connect_tachograph_card_v1_faults_data_proto_msgTypes,
	}.Build()
	File_wayplatform_connect_tachograph_card_v1_faults_data_proto = out.File
	file_wayplatform_connect_tachograph_card_v1_faults_data_proto_goTypes = nil
	file_wayplatform_connect_tachograph_card_v1_faults_data_proto_depIdxs = nil
}
