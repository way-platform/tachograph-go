// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wayplatform/connect/tachograph/card/v1/workshop_card_file.proto

package cardv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents the fully parsed content of a workshop card file.
//
// See regulation document Appendix 2, Section 4.3.
type WorkshopCardFile struct {
	state                                  protoimpl.MessageState                 `protogen:"opaque.v1"`
	xxx_hidden_Icc                         *IccIdentification                     `protobuf:"bytes,1,opt,name=icc"`
	xxx_hidden_Ic                          *ChipIdentification                    `protobuf:"bytes,2,opt,name=ic"`
	xxx_hidden_Identification              *CardIdentification                    `protobuf:"bytes,3,opt,name=identification"`
	xxx_hidden_ApplicationIdentification   *WorkshopCardApplicationIdentification `protobuf:"bytes,4,opt,name=application_identification,json=applicationIdentification"`
	xxx_hidden_HolderIdentification        *WorkshopCardHolderIdentification      `protobuf:"bytes,5,opt,name=holder_identification,json=holderIdentification"`
	xxx_hidden_Calibrations                *Calibrations                          `protobuf:"bytes,6,opt,name=calibrations"`
	xxx_hidden_SensorInstallationData      *SensorInstallationData                `protobuf:"bytes,7,opt,name=sensor_installation_data,json=sensorInstallationData"`
	xxx_hidden_CalibrationsSinceDownload   *NoOfCalibrationsSinceDownload         `protobuf:"bytes,8,opt,name=calibrations_since_download,json=calibrationsSinceDownload"`
	xxx_hidden_EventsData                  *EventData                             `protobuf:"bytes,9,opt,name=events_data,json=eventsData"`
	xxx_hidden_FaultsData                  *FaultData                             `protobuf:"bytes,10,opt,name=faults_data,json=faultsData"`
	xxx_hidden_DriverActivityData          *DriverActivity                        `protobuf:"bytes,11,opt,name=driver_activity_data,json=driverActivityData"`
	xxx_hidden_VehiclesUsed                *VehiclesUsed                          `protobuf:"bytes,12,opt,name=vehicles_used,json=vehiclesUsed"`
	xxx_hidden_Places                      *Places                                `protobuf:"bytes,13,opt,name=places"`
	xxx_hidden_CurrentUsage                *CurrentUsage                          `protobuf:"bytes,14,opt,name=current_usage,json=currentUsage"`
	xxx_hidden_ControlActivityData         *ControlActivityData                   `protobuf:"bytes,15,opt,name=control_activity_data,json=controlActivityData"`
	xxx_hidden_SpecificConditions          *SpecificConditions                    `protobuf:"bytes,16,opt,name=specific_conditions,json=specificConditions"`
	xxx_hidden_VehicleUnitsUsed            *VehicleUnitsUsed                      `protobuf:"bytes,17,opt,name=vehicle_units_used,json=vehicleUnitsUsed"`
	xxx_hidden_GnssPlaces                  *GnssPlaces                            `protobuf:"bytes,18,opt,name=gnss_places,json=gnssPlaces"`
	xxx_hidden_ApplicationIdentificationV2 *WorkshopApplicationIdentificationV2   `protobuf:"bytes,19,opt,name=application_identification_v2,json=applicationIdentificationV2"`
	xxx_hidden_PlacesAuthentication        *PlacesAuthentication                  `protobuf:"bytes,20,opt,name=places_authentication,json=placesAuthentication"`
	xxx_hidden_GnssPlacesAuthentication    *GnssPlacesAuthentication              `protobuf:"bytes,21,opt,name=gnss_places_authentication,json=gnssPlacesAuthentication"`
	xxx_hidden_BorderCrossings             *BorderCrossings                       `protobuf:"bytes,22,opt,name=border_crossings,json=borderCrossings"`
	xxx_hidden_LoadUnloadOperations        *LoadUnloadOperations                  `protobuf:"bytes,23,opt,name=load_unload_operations,json=loadUnloadOperations"`
	xxx_hidden_LoadTypeEntries             *LoadTypeEntries                       `protobuf:"bytes,24,opt,name=load_type_entries,json=loadTypeEntries"`
	xxx_hidden_CalibrationsAddData         *CalibrationsAddData                   `protobuf:"bytes,25,opt,name=calibrations_add_data,json=calibrationsAddData"`
	xxx_hidden_VuConfiguration             *VuConfiguration                       `protobuf:"bytes,26,opt,name=vu_configuration,json=vuConfiguration"`
	unknownFields                          protoimpl.UnknownFields
	sizeCache                              protoimpl.SizeCache
}

func (x *WorkshopCardFile) Reset() {
	*x = WorkshopCardFile{}
	mi := &file_wayplatform_connect_tachograph_card_v1_workshop_card_file_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkshopCardFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkshopCardFile) ProtoMessage() {}

func (x *WorkshopCardFile) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_card_v1_workshop_card_file_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *WorkshopCardFile) GetIcc() *IccIdentification {
	if x != nil {
		return x.xxx_hidden_Icc
	}
	return nil
}

func (x *WorkshopCardFile) GetIc() *ChipIdentification {
	if x != nil {
		return x.xxx_hidden_Ic
	}
	return nil
}

func (x *WorkshopCardFile) GetIdentification() *CardIdentification {
	if x != nil {
		return x.xxx_hidden_Identification
	}
	return nil
}

func (x *WorkshopCardFile) GetApplicationIdentification() *WorkshopCardApplicationIdentification {
	if x != nil {
		return x.xxx_hidden_ApplicationIdentification
	}
	return nil
}

func (x *WorkshopCardFile) GetHolderIdentification() *WorkshopCardHolderIdentification {
	if x != nil {
		return x.xxx_hidden_HolderIdentification
	}
	return nil
}

func (x *WorkshopCardFile) GetCalibrations() *Calibrations {
	if x != nil {
		return x.xxx_hidden_Calibrations
	}
	return nil
}

func (x *WorkshopCardFile) GetSensorInstallationData() *SensorInstallationData {
	if x != nil {
		return x.xxx_hidden_SensorInstallationData
	}
	return nil
}

func (x *WorkshopCardFile) GetCalibrationsSinceDownload() *NoOfCalibrationsSinceDownload {
	if x != nil {
		return x.xxx_hidden_CalibrationsSinceDownload
	}
	return nil
}

func (x *WorkshopCardFile) GetEventsData() *EventData {
	if x != nil {
		return x.xxx_hidden_EventsData
	}
	return nil
}

func (x *WorkshopCardFile) GetFaultsData() *FaultData {
	if x != nil {
		return x.xxx_hidden_FaultsData
	}
	return nil
}

func (x *WorkshopCardFile) GetDriverActivityData() *DriverActivity {
	if x != nil {
		return x.xxx_hidden_DriverActivityData
	}
	return nil
}

func (x *WorkshopCardFile) GetVehiclesUsed() *VehiclesUsed {
	if x != nil {
		return x.xxx_hidden_VehiclesUsed
	}
	return nil
}

func (x *WorkshopCardFile) GetPlaces() *Places {
	if x != nil {
		return x.xxx_hidden_Places
	}
	return nil
}

func (x *WorkshopCardFile) GetCurrentUsage() *CurrentUsage {
	if x != nil {
		return x.xxx_hidden_CurrentUsage
	}
	return nil
}

func (x *WorkshopCardFile) GetControlActivityData() *ControlActivityData {
	if x != nil {
		return x.xxx_hidden_ControlActivityData
	}
	return nil
}

func (x *WorkshopCardFile) GetSpecificConditions() *SpecificConditions {
	if x != nil {
		return x.xxx_hidden_SpecificConditions
	}
	return nil
}

func (x *WorkshopCardFile) GetVehicleUnitsUsed() *VehicleUnitsUsed {
	if x != nil {
		return x.xxx_hidden_VehicleUnitsUsed
	}
	return nil
}

func (x *WorkshopCardFile) GetGnssPlaces() *GnssPlaces {
	if x != nil {
		return x.xxx_hidden_GnssPlaces
	}
	return nil
}

func (x *WorkshopCardFile) GetApplicationIdentificationV2() *WorkshopApplicationIdentificationV2 {
	if x != nil {
		return x.xxx_hidden_ApplicationIdentificationV2
	}
	return nil
}

func (x *WorkshopCardFile) GetPlacesAuthentication() *PlacesAuthentication {
	if x != nil {
		return x.xxx_hidden_PlacesAuthentication
	}
	return nil
}

func (x *WorkshopCardFile) GetGnssPlacesAuthentication() *GnssPlacesAuthentication {
	if x != nil {
		return x.xxx_hidden_GnssPlacesAuthentication
	}
	return nil
}

func (x *WorkshopCardFile) GetBorderCrossings() *BorderCrossings {
	if x != nil {
		return x.xxx_hidden_BorderCrossings
	}
	return nil
}

func (x *WorkshopCardFile) GetLoadUnloadOperations() *LoadUnloadOperations {
	if x != nil {
		return x.xxx_hidden_LoadUnloadOperations
	}
	return nil
}

func (x *WorkshopCardFile) GetLoadTypeEntries() *LoadTypeEntries {
	if x != nil {
		return x.xxx_hidden_LoadTypeEntries
	}
	return nil
}

func (x *WorkshopCardFile) GetCalibrationsAddData() *CalibrationsAddData {
	if x != nil {
		return x.xxx_hidden_CalibrationsAddData
	}
	return nil
}

func (x *WorkshopCardFile) GetVuConfiguration() *VuConfiguration {
	if x != nil {
		return x.xxx_hidden_VuConfiguration
	}
	return nil
}

func (x *WorkshopCardFile) SetIcc(v *IccIdentification) {
	x.xxx_hidden_Icc = v
}

func (x *WorkshopCardFile) SetIc(v *ChipIdentification) {
	x.xxx_hidden_Ic = v
}

func (x *WorkshopCardFile) SetIdentification(v *CardIdentification) {
	x.xxx_hidden_Identification = v
}

func (x *WorkshopCardFile) SetApplicationIdentification(v *WorkshopCardApplicationIdentification) {
	x.xxx_hidden_ApplicationIdentification = v
}

func (x *WorkshopCardFile) SetHolderIdentification(v *WorkshopCardHolderIdentification) {
	x.xxx_hidden_HolderIdentification = v
}

func (x *WorkshopCardFile) SetCalibrations(v *Calibrations) {
	x.xxx_hidden_Calibrations = v
}

func (x *WorkshopCardFile) SetSensorInstallationData(v *SensorInstallationData) {
	x.xxx_hidden_SensorInstallationData = v
}

func (x *WorkshopCardFile) SetCalibrationsSinceDownload(v *NoOfCalibrationsSinceDownload) {
	x.xxx_hidden_CalibrationsSinceDownload = v
}

func (x *WorkshopCardFile) SetEventsData(v *EventData) {
	x.xxx_hidden_EventsData = v
}

func (x *WorkshopCardFile) SetFaultsData(v *FaultData) {
	x.xxx_hidden_FaultsData = v
}

func (x *WorkshopCardFile) SetDriverActivityData(v *DriverActivity) {
	x.xxx_hidden_DriverActivityData = v
}

func (x *WorkshopCardFile) SetVehiclesUsed(v *VehiclesUsed) {
	x.xxx_hidden_VehiclesUsed = v
}

func (x *WorkshopCardFile) SetPlaces(v *Places) {
	x.xxx_hidden_Places = v
}

func (x *WorkshopCardFile) SetCurrentUsage(v *CurrentUsage) {
	x.xxx_hidden_CurrentUsage = v
}

func (x *WorkshopCardFile) SetControlActivityData(v *ControlActivityData) {
	x.xxx_hidden_ControlActivityData = v
}

func (x *WorkshopCardFile) SetSpecificConditions(v *SpecificConditions) {
	x.xxx_hidden_SpecificConditions = v
}

func (x *WorkshopCardFile) SetVehicleUnitsUsed(v *VehicleUnitsUsed) {
	x.xxx_hidden_VehicleUnitsUsed = v
}

func (x *WorkshopCardFile) SetGnssPlaces(v *GnssPlaces) {
	x.xxx_hidden_GnssPlaces = v
}

func (x *WorkshopCardFile) SetApplicationIdentificationV2(v *WorkshopApplicationIdentificationV2) {
	x.xxx_hidden_ApplicationIdentificationV2 = v
}

func (x *WorkshopCardFile) SetPlacesAuthentication(v *PlacesAuthentication) {
	x.xxx_hidden_PlacesAuthentication = v
}

func (x *WorkshopCardFile) SetGnssPlacesAuthentication(v *GnssPlacesAuthentication) {
	x.xxx_hidden_GnssPlacesAuthentication = v
}

func (x *WorkshopCardFile) SetBorderCrossings(v *BorderCrossings) {
	x.xxx_hidden_BorderCrossings = v
}

func (x *WorkshopCardFile) SetLoadUnloadOperations(v *LoadUnloadOperations) {
	x.xxx_hidden_LoadUnloadOperations = v
}

func (x *WorkshopCardFile) SetLoadTypeEntries(v *LoadTypeEntries) {
	x.xxx_hidden_LoadTypeEntries = v
}

func (x *WorkshopCardFile) SetCalibrationsAddData(v *CalibrationsAddData) {
	x.xxx_hidden_CalibrationsAddData = v
}

func (x *WorkshopCardFile) SetVuConfiguration(v *VuConfiguration) {
	x.xxx_hidden_VuConfiguration = v
}

func (x *WorkshopCardFile) HasIcc() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Icc != nil
}

func (x *WorkshopCardFile) HasIc() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Ic != nil
}

func (x *WorkshopCardFile) HasIdentification() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Identification != nil
}

func (x *WorkshopCardFile) HasApplicationIdentification() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ApplicationIdentification != nil
}

func (x *WorkshopCardFile) HasHolderIdentification() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_HolderIdentification != nil
}

func (x *WorkshopCardFile) HasCalibrations() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Calibrations != nil
}

func (x *WorkshopCardFile) HasSensorInstallationData() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_SensorInstallationData != nil
}

func (x *WorkshopCardFile) HasCalibrationsSinceDownload() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CalibrationsSinceDownload != nil
}

func (x *WorkshopCardFile) HasEventsData() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_EventsData != nil
}

func (x *WorkshopCardFile) HasFaultsData() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_FaultsData != nil
}

func (x *WorkshopCardFile) HasDriverActivityData() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DriverActivityData != nil
}

func (x *WorkshopCardFile) HasVehiclesUsed() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_VehiclesUsed != nil
}

func (x *WorkshopCardFile) HasPlaces() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Places != nil
}

func (x *WorkshopCardFile) HasCurrentUsage() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CurrentUsage != nil
}

func (x *WorkshopCardFile) HasControlActivityData() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ControlActivityData != nil
}

func (x *WorkshopCardFile) HasSpecificConditions() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_SpecificConditions != nil
}

func (x *WorkshopCardFile) HasVehicleUnitsUsed() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_VehicleUnitsUsed != nil
}

func (x *WorkshopCardFile) HasGnssPlaces() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_GnssPlaces != nil
}

func (x *WorkshopCardFile) HasApplicationIdentificationV2() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ApplicationIdentificationV2 != nil
}

func (x *WorkshopCardFile) HasPlacesAuthentication() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_PlacesAuthentication != nil
}

func (x *WorkshopCardFile) HasGnssPlacesAuthentication() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_GnssPlacesAuthentication != nil
}

func (x *WorkshopCardFile) HasBorderCrossings() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_BorderCrossings != nil
}

func (x *WorkshopCardFile) HasLoadUnloadOperations() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_LoadUnloadOperations != nil
}

func (x *WorkshopCardFile) HasLoadTypeEntries() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_LoadTypeEntries != nil
}

func (x *WorkshopCardFile) HasCalibrationsAddData() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CalibrationsAddData != nil
}

func (x *WorkshopCardFile) HasVuConfiguration() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_VuConfiguration != nil
}

func (x *WorkshopCardFile) ClearIcc() {
	x.xxx_hidden_Icc = nil
}

func (x *WorkshopCardFile) ClearIc() {
	x.xxx_hidden_Ic = nil
}

func (x *WorkshopCardFile) ClearIdentification() {
	x.xxx_hidden_Identification = nil
}

func (x *WorkshopCardFile) ClearApplicationIdentification() {
	x.xxx_hidden_ApplicationIdentification = nil
}

func (x *WorkshopCardFile) ClearHolderIdentification() {
	x.xxx_hidden_HolderIdentification = nil
}

func (x *WorkshopCardFile) ClearCalibrations() {
	x.xxx_hidden_Calibrations = nil
}

func (x *WorkshopCardFile) ClearSensorInstallationData() {
	x.xxx_hidden_SensorInstallationData = nil
}

func (x *WorkshopCardFile) ClearCalibrationsSinceDownload() {
	x.xxx_hidden_CalibrationsSinceDownload = nil
}

func (x *WorkshopCardFile) ClearEventsData() {
	x.xxx_hidden_EventsData = nil
}

func (x *WorkshopCardFile) ClearFaultsData() {
	x.xxx_hidden_FaultsData = nil
}

func (x *WorkshopCardFile) ClearDriverActivityData() {
	x.xxx_hidden_DriverActivityData = nil
}

func (x *WorkshopCardFile) ClearVehiclesUsed() {
	x.xxx_hidden_VehiclesUsed = nil
}

func (x *WorkshopCardFile) ClearPlaces() {
	x.xxx_hidden_Places = nil
}

func (x *WorkshopCardFile) ClearCurrentUsage() {
	x.xxx_hidden_CurrentUsage = nil
}

func (x *WorkshopCardFile) ClearControlActivityData() {
	x.xxx_hidden_ControlActivityData = nil
}

func (x *WorkshopCardFile) ClearSpecificConditions() {
	x.xxx_hidden_SpecificConditions = nil
}

func (x *WorkshopCardFile) ClearVehicleUnitsUsed() {
	x.xxx_hidden_VehicleUnitsUsed = nil
}

func (x *WorkshopCardFile) ClearGnssPlaces() {
	x.xxx_hidden_GnssPlaces = nil
}

func (x *WorkshopCardFile) ClearApplicationIdentificationV2() {
	x.xxx_hidden_ApplicationIdentificationV2 = nil
}

func (x *WorkshopCardFile) ClearPlacesAuthentication() {
	x.xxx_hidden_PlacesAuthentication = nil
}

func (x *WorkshopCardFile) ClearGnssPlacesAuthentication() {
	x.xxx_hidden_GnssPlacesAuthentication = nil
}

func (x *WorkshopCardFile) ClearBorderCrossings() {
	x.xxx_hidden_BorderCrossings = nil
}

func (x *WorkshopCardFile) ClearLoadUnloadOperations() {
	x.xxx_hidden_LoadUnloadOperations = nil
}

func (x *WorkshopCardFile) ClearLoadTypeEntries() {
	x.xxx_hidden_LoadTypeEntries = nil
}

func (x *WorkshopCardFile) ClearCalibrationsAddData() {
	x.xxx_hidden_CalibrationsAddData = nil
}

func (x *WorkshopCardFile) ClearVuConfiguration() {
	x.xxx_hidden_VuConfiguration = nil
}

type WorkshopCardFile_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// --- Common Card Data ---
	Icc            *IccIdentification
	Ic             *ChipIdentification
	Identification *CardIdentification
	// --- Workshop Specific Data ---
	ApplicationIdentification *WorkshopCardApplicationIdentification
	HolderIdentification      *WorkshopCardHolderIdentification
	Calibrations              *Calibrations
	SensorInstallationData    *SensorInstallationData
	CalibrationsSinceDownload *NoOfCalibrationsSinceDownload
	// --- Driver-related Data (also on Workshop cards) ---
	EventsData          *EventData
	FaultsData          *FaultData
	DriverActivityData  *DriverActivity
	VehiclesUsed        *VehiclesUsed
	Places              *Places
	CurrentUsage        *CurrentUsage
	ControlActivityData *ControlActivityData
	SpecificConditions  *SpecificConditions
	// --- Gen2 Specific Fields ---
	VehicleUnitsUsed            *VehicleUnitsUsed
	GnssPlaces                  *GnssPlaces
	ApplicationIdentificationV2 *WorkshopApplicationIdentificationV2
	PlacesAuthentication        *PlacesAuthentication
	GnssPlacesAuthentication    *GnssPlacesAuthentication
	BorderCrossings             *BorderCrossings
	LoadUnloadOperations        *LoadUnloadOperations
	LoadTypeEntries             *LoadTypeEntries
	CalibrationsAddData         *CalibrationsAddData
	VuConfiguration             *VuConfiguration
}

func (b0 WorkshopCardFile_builder) Build() *WorkshopCardFile {
	m0 := &WorkshopCardFile{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Icc = b.Icc
	x.xxx_hidden_Ic = b.Ic
	x.xxx_hidden_Identification = b.Identification
	x.xxx_hidden_ApplicationIdentification = b.ApplicationIdentification
	x.xxx_hidden_HolderIdentification = b.HolderIdentification
	x.xxx_hidden_Calibrations = b.Calibrations
	x.xxx_hidden_SensorInstallationData = b.SensorInstallationData
	x.xxx_hidden_CalibrationsSinceDownload = b.CalibrationsSinceDownload
	x.xxx_hidden_EventsData = b.EventsData
	x.xxx_hidden_FaultsData = b.FaultsData
	x.xxx_hidden_DriverActivityData = b.DriverActivityData
	x.xxx_hidden_VehiclesUsed = b.VehiclesUsed
	x.xxx_hidden_Places = b.Places
	x.xxx_hidden_CurrentUsage = b.CurrentUsage
	x.xxx_hidden_ControlActivityData = b.ControlActivityData
	x.xxx_hidden_SpecificConditions = b.SpecificConditions
	x.xxx_hidden_VehicleUnitsUsed = b.VehicleUnitsUsed
	x.xxx_hidden_GnssPlaces = b.GnssPlaces
	x.xxx_hidden_ApplicationIdentificationV2 = b.ApplicationIdentificationV2
	x.xxx_hidden_PlacesAuthentication = b.PlacesAuthentication
	x.xxx_hidden_GnssPlacesAuthentication = b.GnssPlacesAuthentication
	x.xxx_hidden_BorderCrossings = b.BorderCrossings
	x.xxx_hidden_LoadUnloadOperations = b.LoadUnloadOperations
	x.xxx_hidden_LoadTypeEntries = b.LoadTypeEntries
	x.xxx_hidden_CalibrationsAddData = b.CalibrationsAddData
	x.xxx_hidden_VuConfiguration = b.VuConfiguration
	return m0
}

var File_wayplatform_connect_tachograph_card_v1_workshop_card_file_proto protoreflect.FileDescriptor

const file_wayplatform_connect_tachograph_card_v1_workshop_card_file_proto_rawDesc = "" +
	"\n" +
	"?wayplatform/connect/tachograph/card/v1/workshop_card_file.proto\x12&wayplatform.connect.tachograph.card.v1\x1aJwayplatform/connect/tachograph/card/v1/application_identification_v2.proto\x1a=wayplatform/connect/tachograph/card/v1/border_crossings.proto\x1a9wayplatform/connect/tachograph/card/v1/calibrations.proto\x1aBwayplatform/connect/tachograph/card/v1/calibrations_add_data.proto\x1aDwayplatform/connect/tachograph/card/v1/card_icc_identification.proto\x1a@wayplatform/connect/tachograph/card/v1/card_identification.proto\x1a@wayplatform/connect/tachograph/card/v1/chip_identification.proto\x1aBwayplatform/connect/tachograph/card/v1/control_activity_data.proto\x1a:wayplatform/connect/tachograph/card/v1/current_usage.proto\x1a<wayplatform/connect/tachograph/card/v1/driver_activity.proto\x1a7wayplatform/connect/tachograph/card/v1/event_data.proto\x1a7wayplatform/connect/tachograph/card/v1/fault_data.proto\x1a8wayplatform/connect/tachograph/card/v1/gnss_places.proto\x1aGwayplatform/connect/tachograph/card/v1/gnss_places_authentication.proto\x1a>wayplatform/connect/tachograph/card/v1/load_type_entries.proto\x1aCwayplatform/connect/tachograph/card/v1/load_unload_operations.proto\x1aNwayplatform/connect/tachograph/card/v1/no_of_calibrations_since_download.proto\x1a3wayplatform/connect/tachograph/card/v1/places.proto\x1aBwayplatform/connect/tachograph/card/v1/places_authentication.proto\x1aEwayplatform/connect/tachograph/card/v1/sensor_installation_data.proto\x1a@wayplatform/connect/tachograph/card/v1/specific_conditions.proto\x1a?wayplatform/connect/tachograph/card/v1/vehicle_units_used.proto\x1a:wayplatform/connect/tachograph/card/v1/vehicles_used.proto\x1a=wayplatform/connect/tachograph/card/v1/vu_configuration.proto\x1aPwayplatform/connect/tachograph/card/v1/workshop_application_identification.proto\x1aSwayplatform/connect/tachograph/card/v1/workshop_application_identification_v2.proto\x1aPwayplatform/connect/tachograph/card/v1/workshop_card_holder_identification.proto\"\xbb\x15\n" +
	"\x10WorkshopCardFile\x12K\n" +
	"\x03icc\x18\x01 \x01(\v29.wayplatform.connect.tachograph.card.v1.IccIdentificationR\x03icc\x12J\n" +
	"\x02ic\x18\x02 \x01(\v2:.wayplatform.connect.tachograph.card.v1.ChipIdentificationR\x02ic\x12b\n" +
	"\x0eidentification\x18\x03 \x01(\v2:.wayplatform.connect.tachograph.card.v1.CardIdentificationR\x0eidentification\x12\x8c\x01\n" +
	"\x1aapplication_identification\x18\x04 \x01(\v2M.wayplatform.connect.tachograph.card.v1.WorkshopCardApplicationIdentificationR\x19applicationIdentification\x12}\n" +
	"\x15holder_identification\x18\x05 \x01(\v2H.wayplatform.connect.tachograph.card.v1.WorkshopCardHolderIdentificationR\x14holderIdentification\x12X\n" +
	"\fcalibrations\x18\x06 \x01(\v24.wayplatform.connect.tachograph.card.v1.CalibrationsR\fcalibrations\x12x\n" +
	"\x18sensor_installation_data\x18\a \x01(\v2>.wayplatform.connect.tachograph.card.v1.SensorInstallationDataR\x16sensorInstallationData\x12\x85\x01\n" +
	"\x1bcalibrations_since_download\x18\b \x01(\v2E.wayplatform.connect.tachograph.card.v1.NoOfCalibrationsSinceDownloadR\x19calibrationsSinceDownload\x12R\n" +
	"\vevents_data\x18\t \x01(\v21.wayplatform.connect.tachograph.card.v1.EventDataR\n" +
	"eventsData\x12R\n" +
	"\vfaults_data\x18\n" +
	" \x01(\v21.wayplatform.connect.tachograph.card.v1.FaultDataR\n" +
	"faultsData\x12h\n" +
	"\x14driver_activity_data\x18\v \x01(\v26.wayplatform.connect.tachograph.card.v1.DriverActivityR\x12driverActivityData\x12Y\n" +
	"\rvehicles_used\x18\f \x01(\v24.wayplatform.connect.tachograph.card.v1.VehiclesUsedR\fvehiclesUsed\x12F\n" +
	"\x06places\x18\r \x01(\v2..wayplatform.connect.tachograph.card.v1.PlacesR\x06places\x12Y\n" +
	"\rcurrent_usage\x18\x0e \x01(\v24.wayplatform.connect.tachograph.card.v1.CurrentUsageR\fcurrentUsage\x12o\n" +
	"\x15control_activity_data\x18\x0f \x01(\v2;.wayplatform.connect.tachograph.card.v1.ControlActivityDataR\x13controlActivityData\x12k\n" +
	"\x13specific_conditions\x18\x10 \x01(\v2:.wayplatform.connect.tachograph.card.v1.SpecificConditionsR\x12specificConditions\x12f\n" +
	"\x12vehicle_units_used\x18\x11 \x01(\v28.wayplatform.connect.tachograph.card.v1.VehicleUnitsUsedR\x10vehicleUnitsUsed\x12S\n" +
	"\vgnss_places\x18\x12 \x01(\v22.wayplatform.connect.tachograph.card.v1.GnssPlacesR\n" +
	"gnssPlaces\x12\x8f\x01\n" +
	"\x1dapplication_identification_v2\x18\x13 \x01(\v2K.wayplatform.connect.tachograph.card.v1.WorkshopApplicationIdentificationV2R\x1bapplicationIdentificationV2\x12q\n" +
	"\x15places_authentication\x18\x14 \x01(\v2<.wayplatform.connect.tachograph.card.v1.PlacesAuthenticationR\x14placesAuthentication\x12~\n" +
	"\x1agnss_places_authentication\x18\x15 \x01(\v2@.wayplatform.connect.tachograph.card.v1.GnssPlacesAuthenticationR\x18gnssPlacesAuthentication\x12b\n" +
	"\x10border_crossings\x18\x16 \x01(\v27.wayplatform.connect.tachograph.card.v1.BorderCrossingsR\x0fborderCrossings\x12r\n" +
	"\x16load_unload_operations\x18\x17 \x01(\v2<.wayplatform.connect.tachograph.card.v1.LoadUnloadOperationsR\x14loadUnloadOperations\x12c\n" +
	"\x11load_type_entries\x18\x18 \x01(\v27.wayplatform.connect.tachograph.card.v1.LoadTypeEntriesR\x0floadTypeEntries\x12o\n" +
	"\x15calibrations_add_data\x18\x19 \x01(\v2;.wayplatform.connect.tachograph.card.v1.CalibrationsAddDataR\x13calibrationsAddData\x12b\n" +
	"\x10vu_configuration\x18\x1a \x01(\v27.wayplatform.connect.tachograph.card.v1.VuConfigurationR\x0fvuConfigurationB\xe2\x02\n" +
	"*com.wayplatform.connect.tachograph.card.v1B\x15WorkshopCardFileProtoP\x01Z`github.com/way-platform/tachograph-go/proto/gen/go/wayplatform/connect/tachograph/card/v1;cardv1\xa2\x02\x04WCTC\xaa\x02&Wayplatform.Connect.Tachograph.Card.V1\xca\x02&Wayplatform\\Connect\\Tachograph\\Card\\V1\xe2\x022Wayplatform\\Connect\\Tachograph\\Card\\V1\\GPBMetadata\xea\x02*Wayplatform::Connect::Tachograph::Card::V1b\beditionsp\xe8\a"

var file_wayplatform_connect_tachograph_card_v1_workshop_card_file_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_wayplatform_connect_tachograph_card_v1_workshop_card_file_proto_goTypes = []any{
	(*WorkshopCardFile)(nil),                      // 0: wayplatform.connect.tachograph.card.v1.WorkshopCardFile
	(*IccIdentification)(nil),                     // 1: wayplatform.connect.tachograph.card.v1.IccIdentification
	(*ChipIdentification)(nil),                    // 2: wayplatform.connect.tachograph.card.v1.ChipIdentification
	(*CardIdentification)(nil),                    // 3: wayplatform.connect.tachograph.card.v1.CardIdentification
	(*WorkshopCardApplicationIdentification)(nil), // 4: wayplatform.connect.tachograph.card.v1.WorkshopCardApplicationIdentification
	(*WorkshopCardHolderIdentification)(nil),      // 5: wayplatform.connect.tachograph.card.v1.WorkshopCardHolderIdentification
	(*Calibrations)(nil),                          // 6: wayplatform.connect.tachograph.card.v1.Calibrations
	(*SensorInstallationData)(nil),                // 7: wayplatform.connect.tachograph.card.v1.SensorInstallationData
	(*NoOfCalibrationsSinceDownload)(nil),         // 8: wayplatform.connect.tachograph.card.v1.NoOfCalibrationsSinceDownload
	(*EventData)(nil),                             // 9: wayplatform.connect.tachograph.card.v1.EventData
	(*FaultData)(nil),                             // 10: wayplatform.connect.tachograph.card.v1.FaultData
	(*DriverActivity)(nil),                        // 11: wayplatform.connect.tachograph.card.v1.DriverActivity
	(*VehiclesUsed)(nil),                          // 12: wayplatform.connect.tachograph.card.v1.VehiclesUsed
	(*Places)(nil),                                // 13: wayplatform.connect.tachograph.card.v1.Places
	(*CurrentUsage)(nil),                          // 14: wayplatform.connect.tachograph.card.v1.CurrentUsage
	(*ControlActivityData)(nil),                   // 15: wayplatform.connect.tachograph.card.v1.ControlActivityData
	(*SpecificConditions)(nil),                    // 16: wayplatform.connect.tachograph.card.v1.SpecificConditions
	(*VehicleUnitsUsed)(nil),                      // 17: wayplatform.connect.tachograph.card.v1.VehicleUnitsUsed
	(*GnssPlaces)(nil),                            // 18: wayplatform.connect.tachograph.card.v1.GnssPlaces
	(*WorkshopApplicationIdentificationV2)(nil),   // 19: wayplatform.connect.tachograph.card.v1.WorkshopApplicationIdentificationV2
	(*PlacesAuthentication)(nil),                  // 20: wayplatform.connect.tachograph.card.v1.PlacesAuthentication
	(*GnssPlacesAuthentication)(nil),              // 21: wayplatform.connect.tachograph.card.v1.GnssPlacesAuthentication
	(*BorderCrossings)(nil),                       // 22: wayplatform.connect.tachograph.card.v1.BorderCrossings
	(*LoadUnloadOperations)(nil),                  // 23: wayplatform.connect.tachograph.card.v1.LoadUnloadOperations
	(*LoadTypeEntries)(nil),                       // 24: wayplatform.connect.tachograph.card.v1.LoadTypeEntries
	(*CalibrationsAddData)(nil),                   // 25: wayplatform.connect.tachograph.card.v1.CalibrationsAddData
	(*VuConfiguration)(nil),                       // 26: wayplatform.connect.tachograph.card.v1.VuConfiguration
}
var file_wayplatform_connect_tachograph_card_v1_workshop_card_file_proto_depIdxs = []int32{
	1,  // 0: wayplatform.connect.tachograph.card.v1.WorkshopCardFile.icc:type_name -> wayplatform.connect.tachograph.card.v1.IccIdentification
	2,  // 1: wayplatform.connect.tachograph.card.v1.WorkshopCardFile.ic:type_name -> wayplatform.connect.tachograph.card.v1.ChipIdentification
	3,  // 2: wayplatform.connect.tachograph.card.v1.WorkshopCardFile.identification:type_name -> wayplatform.connect.tachograph.card.v1.CardIdentification
	4,  // 3: wayplatform.connect.tachograph.card.v1.WorkshopCardFile.application_identification:type_name -> wayplatform.connect.tachograph.card.v1.WorkshopCardApplicationIdentification
	5,  // 4: wayplatform.connect.tachograph.card.v1.WorkshopCardFile.holder_identification:type_name -> wayplatform.connect.tachograph.card.v1.WorkshopCardHolderIdentification
	6,  // 5: wayplatform.connect.tachograph.card.v1.WorkshopCardFile.calibrations:type_name -> wayplatform.connect.tachograph.card.v1.Calibrations
	7,  // 6: wayplatform.connect.tachograph.card.v1.WorkshopCardFile.sensor_installation_data:type_name -> wayplatform.connect.tachograph.card.v1.SensorInstallationData
	8,  // 7: wayplatform.connect.tachograph.card.v1.WorkshopCardFile.calibrations_since_download:type_name -> wayplatform.connect.tachograph.card.v1.NoOfCalibrationsSinceDownload
	9,  // 8: wayplatform.connect.tachograph.card.v1.WorkshopCardFile.events_data:type_name -> wayplatform.connect.tachograph.card.v1.EventData
	10, // 9: wayplatform.connect.tachograph.card.v1.WorkshopCardFile.faults_data:type_name -> wayplatform.connect.tachograph.card.v1.FaultData
	11, // 10: wayplatform.connect.tachograph.card.v1.WorkshopCardFile.driver_activity_data:type_name -> wayplatform.connect.tachograph.card.v1.DriverActivity
	12, // 11: wayplatform.connect.tachograph.card.v1.WorkshopCardFile.vehicles_used:type_name -> wayplatform.connect.tachograph.card.v1.VehiclesUsed
	13, // 12: wayplatform.connect.tachograph.card.v1.WorkshopCardFile.places:type_name -> wayplatform.connect.tachograph.card.v1.Places
	14, // 13: wayplatform.connect.tachograph.card.v1.WorkshopCardFile.current_usage:type_name -> wayplatform.connect.tachograph.card.v1.CurrentUsage
	15, // 14: wayplatform.connect.tachograph.card.v1.WorkshopCardFile.control_activity_data:type_name -> wayplatform.connect.tachograph.card.v1.ControlActivityData
	16, // 15: wayplatform.connect.tachograph.card.v1.WorkshopCardFile.specific_conditions:type_name -> wayplatform.connect.tachograph.card.v1.SpecificConditions
	17, // 16: wayplatform.connect.tachograph.card.v1.WorkshopCardFile.vehicle_units_used:type_name -> wayplatform.connect.tachograph.card.v1.VehicleUnitsUsed
	18, // 17: wayplatform.connect.tachograph.card.v1.WorkshopCardFile.gnss_places:type_name -> wayplatform.connect.tachograph.card.v1.GnssPlaces
	19, // 18: wayplatform.connect.tachograph.card.v1.WorkshopCardFile.application_identification_v2:type_name -> wayplatform.connect.tachograph.card.v1.WorkshopApplicationIdentificationV2
	20, // 19: wayplatform.connect.tachograph.card.v1.WorkshopCardFile.places_authentication:type_name -> wayplatform.connect.tachograph.card.v1.PlacesAuthentication
	21, // 20: wayplatform.connect.tachograph.card.v1.WorkshopCardFile.gnss_places_authentication:type_name -> wayplatform.connect.tachograph.card.v1.GnssPlacesAuthentication
	22, // 21: wayplatform.connect.tachograph.card.v1.WorkshopCardFile.border_crossings:type_name -> wayplatform.connect.tachograph.card.v1.BorderCrossings
	23, // 22: wayplatform.connect.tachograph.card.v1.WorkshopCardFile.load_unload_operations:type_name -> wayplatform.connect.tachograph.card.v1.LoadUnloadOperations
	24, // 23: wayplatform.connect.tachograph.card.v1.WorkshopCardFile.load_type_entries:type_name -> wayplatform.connect.tachograph.card.v1.LoadTypeEntries
	25, // 24: wayplatform.connect.tachograph.card.v1.WorkshopCardFile.calibrations_add_data:type_name -> wayplatform.connect.tachograph.card.v1.CalibrationsAddData
	26, // 25: wayplatform.connect.tachograph.card.v1.WorkshopCardFile.vu_configuration:type_name -> wayplatform.connect.tachograph.card.v1.VuConfiguration
	26, // [26:26] is the sub-list for method output_type
	26, // [26:26] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_wayplatform_connect_tachograph_card_v1_workshop_card_file_proto_init() }
func file_wayplatform_connect_tachograph_card_v1_workshop_card_file_proto_init() {
	if File_wayplatform_connect_tachograph_card_v1_workshop_card_file_proto != nil {
		return
	}
	file_wayplatform_connect_tachograph_card_v1_application_identification_v2_proto_init()
	file_wayplatform_connect_tachograph_card_v1_border_crossings_proto_init()
	file_wayplatform_connect_tachograph_card_v1_calibrations_proto_init()
	file_wayplatform_connect_tachograph_card_v1_calibrations_add_data_proto_init()
	file_wayplatform_connect_tachograph_card_v1_card_icc_identification_proto_init()
	file_wayplatform_connect_tachograph_card_v1_card_identification_proto_init()
	file_wayplatform_connect_tachograph_card_v1_chip_identification_proto_init()
	file_wayplatform_connect_tachograph_card_v1_control_activity_data_proto_init()
	file_wayplatform_connect_tachograph_card_v1_current_usage_proto_init()
	file_wayplatform_connect_tachograph_card_v1_driver_activity_proto_init()
	file_wayplatform_connect_tachograph_card_v1_event_data_proto_init()
	file_wayplatform_connect_tachograph_card_v1_fault_data_proto_init()
	file_wayplatform_connect_tachograph_card_v1_gnss_places_proto_init()
	file_wayplatform_connect_tachograph_card_v1_gnss_places_authentication_proto_init()
	file_wayplatform_connect_tachograph_card_v1_load_type_entries_proto_init()
	file_wayplatform_connect_tachograph_card_v1_load_unload_operations_proto_init()
	file_wayplatform_connect_tachograph_card_v1_no_of_calibrations_since_download_proto_init()
	file_wayplatform_connect_tachograph_card_v1_places_proto_init()
	file_wayplatform_connect_tachograph_card_v1_places_authentication_proto_init()
	file_wayplatform_connect_tachograph_card_v1_sensor_installation_data_proto_init()
	file_wayplatform_connect_tachograph_card_v1_specific_conditions_proto_init()
	file_wayplatform_connect_tachograph_card_v1_vehicle_units_used_proto_init()
	file_wayplatform_connect_tachograph_card_v1_vehicles_used_proto_init()
	file_wayplatform_connect_tachograph_card_v1_vu_configuration_proto_init()
	file_wayplatform_connect_tachograph_card_v1_workshop_application_identification_proto_init()
	file_wayplatform_connect_tachograph_card_v1_workshop_application_identification_v2_proto_init()
	file_wayplatform_connect_tachograph_card_v1_workshop_card_holder_identification_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wayplatform_connect_tachograph_card_v1_workshop_card_file_proto_rawDesc), len(file_wayplatform_connect_tachograph_card_v1_workshop_card_file_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wayplatform_connect_tachograph_card_v1_workshop_card_file_proto_goTypes,
		DependencyIndexes: file_wayplatform_connect_tachograph_card_v1_workshop_card_file_proto_depIdxs,
		MessageInfos:      file_wayplatform_connect_tachograph_card_v1_workshop_card_file_proto_msgTypes,
	}.Build()
	File_wayplatform_connect_tachograph_card_v1_workshop_card_file_proto = out.File
	file_wayplatform_connect_tachograph_card_v1_workshop_card_file_proto_goTypes = nil
	file_wayplatform_connect_tachograph_card_v1_workshop_card_file_proto_depIdxs = nil
}
