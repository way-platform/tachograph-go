// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wayplatform/connect/tachograph/card/v1/driver_activity.proto

package cardv1

import (
	v1 "github.com/way-platform/tachograph-go/proto/gen/go/wayplatform/connect/tachograph/datadictionary/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents driver activity data from a tachograph card.
//
// Corresponds to the `CardDriverActivity` data type.
// See Data Dictionary, Section 2.17.
type DriverActivity struct {
	state                           protoimpl.MessageState         `protogen:"opaque.v1"`
	xxx_hidden_Valid                bool                           `protobuf:"varint,1,opt,name=valid"`
	xxx_hidden_OldestDayRecordIndex int32                          `protobuf:"varint,2,opt,name=oldest_day_record_index,json=oldestDayRecordIndex"`
	xxx_hidden_NewestDayRecordIndex int32                          `protobuf:"varint,3,opt,name=newest_day_record_index,json=newestDayRecordIndex"`
	xxx_hidden_DailyRecords         *[]*DriverActivity_DailyRecord `protobuf:"bytes,4,rep,name=daily_records,json=dailyRecords"`
	xxx_hidden_RawData              []byte                         `protobuf:"bytes,5,opt,name=raw_data,json=rawData"`
	xxx_hidden_Signature            []byte                         `protobuf:"bytes,6,opt,name=signature"`
	XXX_raceDetectHookData          protoimpl.RaceDetectHookData
	XXX_presence                    [1]uint32
	unknownFields                   protoimpl.UnknownFields
	sizeCache                       protoimpl.SizeCache
}

func (x *DriverActivity) Reset() {
	*x = DriverActivity{}
	mi := &file_wayplatform_connect_tachograph_card_v1_driver_activity_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriverActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverActivity) ProtoMessage() {}

func (x *DriverActivity) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_card_v1_driver_activity_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DriverActivity) GetValid() bool {
	if x != nil {
		return x.xxx_hidden_Valid
	}
	return false
}

func (x *DriverActivity) GetOldestDayRecordIndex() int32 {
	if x != nil {
		return x.xxx_hidden_OldestDayRecordIndex
	}
	return 0
}

func (x *DriverActivity) GetNewestDayRecordIndex() int32 {
	if x != nil {
		return x.xxx_hidden_NewestDayRecordIndex
	}
	return 0
}

func (x *DriverActivity) GetDailyRecords() []*DriverActivity_DailyRecord {
	if x != nil {
		if x.xxx_hidden_DailyRecords != nil {
			return *x.xxx_hidden_DailyRecords
		}
	}
	return nil
}

func (x *DriverActivity) GetRawData() []byte {
	if x != nil {
		return x.xxx_hidden_RawData
	}
	return nil
}

func (x *DriverActivity) GetSignature() []byte {
	if x != nil {
		return x.xxx_hidden_Signature
	}
	return nil
}

func (x *DriverActivity) SetValid(v bool) {
	x.xxx_hidden_Valid = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *DriverActivity) SetOldestDayRecordIndex(v int32) {
	x.xxx_hidden_OldestDayRecordIndex = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *DriverActivity) SetNewestDayRecordIndex(v int32) {
	x.xxx_hidden_NewestDayRecordIndex = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *DriverActivity) SetDailyRecords(v []*DriverActivity_DailyRecord) {
	x.xxx_hidden_DailyRecords = &v
}

func (x *DriverActivity) SetRawData(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_RawData = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *DriverActivity) SetSignature(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Signature = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *DriverActivity) HasValid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DriverActivity) HasOldestDayRecordIndex() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DriverActivity) HasNewestDayRecordIndex() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *DriverActivity) HasRawData() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *DriverActivity) HasSignature() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *DriverActivity) ClearValid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Valid = false
}

func (x *DriverActivity) ClearOldestDayRecordIndex() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_OldestDayRecordIndex = 0
}

func (x *DriverActivity) ClearNewestDayRecordIndex() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_NewestDayRecordIndex = 0
}

func (x *DriverActivity) ClearRawData() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_RawData = nil
}

func (x *DriverActivity) ClearSignature() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Signature = nil
}

type DriverActivity_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// If true, the fields below are populated with parsed, semantic data.
	// If false, the 'raw_data' field contains the original, unprocessed ring buffer
	// bytes for perfect roundtrip accuracy.
	Valid *bool
	// See Data Dictionary, Section 2.17, `activityPointerOldestDayRecord`.
	OldestDayRecordIndex *int32
	// See Data Dictionary, Section 2.17, `activityPointerNewestRecord`.
	NewestDayRecordIndex *int32
	// See Data Dictionary, Section 2.17, `activityDailyRecords`.
	DailyRecords []*DriverActivity_DailyRecord
	// --- Field for raw data preservation (when valid = false) ---
	// Holds the raw ring buffer bytes (after the 4-byte header) for perfect roundtrip.
	RawData []byte
	// Digital signature for the EF_Driver_Activity_Data file content.
	Signature []byte
}

func (b0 DriverActivity_builder) Build() *DriverActivity {
	m0 := &DriverActivity{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Valid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_Valid = *b.Valid
	}
	if b.OldestDayRecordIndex != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_OldestDayRecordIndex = *b.OldestDayRecordIndex
	}
	if b.NewestDayRecordIndex != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_NewestDayRecordIndex = *b.NewestDayRecordIndex
	}
	x.xxx_hidden_DailyRecords = &b.DailyRecords
	if b.RawData != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_RawData = b.RawData
	}
	if b.Signature != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_Signature = b.Signature
	}
	return m0
}

// Represents a record of driver activity for a single day.
//
// Corresponds to the `CardActivityDailyRecord` data type.
// See Data Dictionary, Section 2.9.
type DriverActivity_DailyRecord struct {
	state                                   protoimpl.MessageState                        `protogen:"opaque.v1"`
	xxx_hidden_ActivityPreviousRecordLength int32                                         `protobuf:"varint,1,opt,name=activity_previous_record_length,json=activityPreviousRecordLength"`
	xxx_hidden_ActivityRecordLength         int32                                         `protobuf:"varint,2,opt,name=activity_record_length,json=activityRecordLength"`
	xxx_hidden_ActivityRecordDate           *timestamppb.Timestamp                        `protobuf:"bytes,3,opt,name=activity_record_date,json=activityRecordDate"`
	xxx_hidden_ActivityDailyPresenceCounter int32                                         `protobuf:"varint,4,opt,name=activity_daily_presence_counter,json=activityDailyPresenceCounter"`
	xxx_hidden_ActivityDayDistance          int32                                         `protobuf:"varint,5,opt,name=activity_day_distance,json=activityDayDistance"`
	xxx_hidden_ActivityChangeInfo           *[]*DriverActivity_DailyRecord_ActivityChange `protobuf:"bytes,6,rep,name=activity_change_info,json=activityChangeInfo"`
	XXX_raceDetectHookData                  protoimpl.RaceDetectHookData
	XXX_presence                            [1]uint32
	unknownFields                           protoimpl.UnknownFields
	sizeCache                               protoimpl.SizeCache
}

func (x *DriverActivity_DailyRecord) Reset() {
	*x = DriverActivity_DailyRecord{}
	mi := &file_wayplatform_connect_tachograph_card_v1_driver_activity_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriverActivity_DailyRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverActivity_DailyRecord) ProtoMessage() {}

func (x *DriverActivity_DailyRecord) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_card_v1_driver_activity_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DriverActivity_DailyRecord) GetActivityPreviousRecordLength() int32 {
	if x != nil {
		return x.xxx_hidden_ActivityPreviousRecordLength
	}
	return 0
}

func (x *DriverActivity_DailyRecord) GetActivityRecordLength() int32 {
	if x != nil {
		return x.xxx_hidden_ActivityRecordLength
	}
	return 0
}

func (x *DriverActivity_DailyRecord) GetActivityRecordDate() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_ActivityRecordDate
	}
	return nil
}

func (x *DriverActivity_DailyRecord) GetActivityDailyPresenceCounter() int32 {
	if x != nil {
		return x.xxx_hidden_ActivityDailyPresenceCounter
	}
	return 0
}

func (x *DriverActivity_DailyRecord) GetActivityDayDistance() int32 {
	if x != nil {
		return x.xxx_hidden_ActivityDayDistance
	}
	return 0
}

func (x *DriverActivity_DailyRecord) GetActivityChangeInfo() []*DriverActivity_DailyRecord_ActivityChange {
	if x != nil {
		if x.xxx_hidden_ActivityChangeInfo != nil {
			return *x.xxx_hidden_ActivityChangeInfo
		}
	}
	return nil
}

func (x *DriverActivity_DailyRecord) SetActivityPreviousRecordLength(v int32) {
	x.xxx_hidden_ActivityPreviousRecordLength = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *DriverActivity_DailyRecord) SetActivityRecordLength(v int32) {
	x.xxx_hidden_ActivityRecordLength = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *DriverActivity_DailyRecord) SetActivityRecordDate(v *timestamppb.Timestamp) {
	x.xxx_hidden_ActivityRecordDate = v
}

func (x *DriverActivity_DailyRecord) SetActivityDailyPresenceCounter(v int32) {
	x.xxx_hidden_ActivityDailyPresenceCounter = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *DriverActivity_DailyRecord) SetActivityDayDistance(v int32) {
	x.xxx_hidden_ActivityDayDistance = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *DriverActivity_DailyRecord) SetActivityChangeInfo(v []*DriverActivity_DailyRecord_ActivityChange) {
	x.xxx_hidden_ActivityChangeInfo = &v
}

func (x *DriverActivity_DailyRecord) HasActivityPreviousRecordLength() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DriverActivity_DailyRecord) HasActivityRecordLength() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DriverActivity_DailyRecord) HasActivityRecordDate() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ActivityRecordDate != nil
}

func (x *DriverActivity_DailyRecord) HasActivityDailyPresenceCounter() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *DriverActivity_DailyRecord) HasActivityDayDistance() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *DriverActivity_DailyRecord) ClearActivityPreviousRecordLength() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ActivityPreviousRecordLength = 0
}

func (x *DriverActivity_DailyRecord) ClearActivityRecordLength() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ActivityRecordLength = 0
}

func (x *DriverActivity_DailyRecord) ClearActivityRecordDate() {
	x.xxx_hidden_ActivityRecordDate = nil
}

func (x *DriverActivity_DailyRecord) ClearActivityDailyPresenceCounter() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_ActivityDailyPresenceCounter = 0
}

func (x *DriverActivity_DailyRecord) ClearActivityDayDistance() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_ActivityDayDistance = 0
}

type DriverActivity_DailyRecord_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// See Data Dictionary, Section 2.9, `activityPreviousRecordLength`.
	ActivityPreviousRecordLength *int32
	// See Data Dictionary, Section 2.9, `activityRecordLength`.
	ActivityRecordLength *int32
	// See Data Dictionary, Section 2.9, `activityRecordDate`.
	ActivityRecordDate *timestamppb.Timestamp
	// See Data Dictionary, Section 2.9, `activityDailyPresenceCounter`.
	ActivityDailyPresenceCounter *int32
	// See Data Dictionary, Section 2.9, `activityDayDistance`.
	ActivityDayDistance *int32
	// See Data Dictionary, Section 2.9, `activityChangeInfo`.
	ActivityChangeInfo []*DriverActivity_DailyRecord_ActivityChange
}

func (b0 DriverActivity_DailyRecord_builder) Build() *DriverActivity_DailyRecord {
	m0 := &DriverActivity_DailyRecord{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ActivityPreviousRecordLength != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_ActivityPreviousRecordLength = *b.ActivityPreviousRecordLength
	}
	if b.ActivityRecordLength != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_ActivityRecordLength = *b.ActivityRecordLength
	}
	x.xxx_hidden_ActivityRecordDate = b.ActivityRecordDate
	if b.ActivityDailyPresenceCounter != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_ActivityDailyPresenceCounter = *b.ActivityDailyPresenceCounter
	}
	if b.ActivityDayDistance != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_ActivityDayDistance = *b.ActivityDayDistance
	}
	x.xxx_hidden_ActivityChangeInfo = &b.ActivityChangeInfo
	return m0
}

// Represents a change in driver activity, driving status, or card status.
//
// Corresponds to the `ActivityChangeInfo` data type.
// See Data Dictionary, Section 2.1.
type DriverActivity_DailyRecord_ActivityChange struct {
	state                                protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Slot                      v1.CardSlotNumber      `protobuf:"varint,1,opt,name=slot,enum=wayplatform.connect.tachograph.datadictionary.v1.CardSlotNumber"`
	xxx_hidden_UnrecognizedSlot          int32                  `protobuf:"varint,2,opt,name=unrecognized_slot,json=unrecognizedSlot"`
	xxx_hidden_DrivingStatus             v1.DrivingStatus       `protobuf:"varint,3,opt,name=driving_status,json=drivingStatus,enum=wayplatform.connect.tachograph.datadictionary.v1.DrivingStatus"`
	xxx_hidden_UnrecognizedDrivingStatus int32                  `protobuf:"varint,4,opt,name=unrecognized_driving_status,json=unrecognizedDrivingStatus"`
	xxx_hidden_CardStatus                v1.CardStatus          `protobuf:"varint,5,opt,name=card_status,json=cardStatus,enum=wayplatform.connect.tachograph.datadictionary.v1.CardStatus"`
	xxx_hidden_UnrecognizedCardStatus    int32                  `protobuf:"varint,6,opt,name=unrecognized_card_status,json=unrecognizedCardStatus"`
	xxx_hidden_Activity                  v1.DriverActivityValue `protobuf:"varint,7,opt,name=activity,enum=wayplatform.connect.tachograph.datadictionary.v1.DriverActivityValue"`
	xxx_hidden_UnrecognizedActivity      int32                  `protobuf:"varint,8,opt,name=unrecognized_activity,json=unrecognizedActivity"`
	xxx_hidden_TimeOfChangeMinutes       int32                  `protobuf:"varint,9,opt,name=time_of_change_minutes,json=timeOfChangeMinutes"`
	XXX_raceDetectHookData               protoimpl.RaceDetectHookData
	XXX_presence                         [1]uint32
	unknownFields                        protoimpl.UnknownFields
	sizeCache                            protoimpl.SizeCache
}

func (x *DriverActivity_DailyRecord_ActivityChange) Reset() {
	*x = DriverActivity_DailyRecord_ActivityChange{}
	mi := &file_wayplatform_connect_tachograph_card_v1_driver_activity_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriverActivity_DailyRecord_ActivityChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverActivity_DailyRecord_ActivityChange) ProtoMessage() {}

func (x *DriverActivity_DailyRecord_ActivityChange) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_card_v1_driver_activity_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DriverActivity_DailyRecord_ActivityChange) GetSlot() v1.CardSlotNumber {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_Slot
		}
	}
	return v1.CardSlotNumber(0)
}

func (x *DriverActivity_DailyRecord_ActivityChange) GetUnrecognizedSlot() int32 {
	if x != nil {
		return x.xxx_hidden_UnrecognizedSlot
	}
	return 0
}

func (x *DriverActivity_DailyRecord_ActivityChange) GetDrivingStatus() v1.DrivingStatus {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 2) {
			return x.xxx_hidden_DrivingStatus
		}
	}
	return v1.DrivingStatus(0)
}

func (x *DriverActivity_DailyRecord_ActivityChange) GetUnrecognizedDrivingStatus() int32 {
	if x != nil {
		return x.xxx_hidden_UnrecognizedDrivingStatus
	}
	return 0
}

func (x *DriverActivity_DailyRecord_ActivityChange) GetCardStatus() v1.CardStatus {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 4) {
			return x.xxx_hidden_CardStatus
		}
	}
	return v1.CardStatus(0)
}

func (x *DriverActivity_DailyRecord_ActivityChange) GetUnrecognizedCardStatus() int32 {
	if x != nil {
		return x.xxx_hidden_UnrecognizedCardStatus
	}
	return 0
}

func (x *DriverActivity_DailyRecord_ActivityChange) GetActivity() v1.DriverActivityValue {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 6) {
			return x.xxx_hidden_Activity
		}
	}
	return v1.DriverActivityValue(0)
}

func (x *DriverActivity_DailyRecord_ActivityChange) GetUnrecognizedActivity() int32 {
	if x != nil {
		return x.xxx_hidden_UnrecognizedActivity
	}
	return 0
}

func (x *DriverActivity_DailyRecord_ActivityChange) GetTimeOfChangeMinutes() int32 {
	if x != nil {
		return x.xxx_hidden_TimeOfChangeMinutes
	}
	return 0
}

func (x *DriverActivity_DailyRecord_ActivityChange) SetSlot(v v1.CardSlotNumber) {
	x.xxx_hidden_Slot = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 9)
}

func (x *DriverActivity_DailyRecord_ActivityChange) SetUnrecognizedSlot(v int32) {
	x.xxx_hidden_UnrecognizedSlot = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 9)
}

func (x *DriverActivity_DailyRecord_ActivityChange) SetDrivingStatus(v v1.DrivingStatus) {
	x.xxx_hidden_DrivingStatus = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 9)
}

func (x *DriverActivity_DailyRecord_ActivityChange) SetUnrecognizedDrivingStatus(v int32) {
	x.xxx_hidden_UnrecognizedDrivingStatus = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 9)
}

func (x *DriverActivity_DailyRecord_ActivityChange) SetCardStatus(v v1.CardStatus) {
	x.xxx_hidden_CardStatus = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 9)
}

func (x *DriverActivity_DailyRecord_ActivityChange) SetUnrecognizedCardStatus(v int32) {
	x.xxx_hidden_UnrecognizedCardStatus = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 9)
}

func (x *DriverActivity_DailyRecord_ActivityChange) SetActivity(v v1.DriverActivityValue) {
	x.xxx_hidden_Activity = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 9)
}

func (x *DriverActivity_DailyRecord_ActivityChange) SetUnrecognizedActivity(v int32) {
	x.xxx_hidden_UnrecognizedActivity = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 9)
}

func (x *DriverActivity_DailyRecord_ActivityChange) SetTimeOfChangeMinutes(v int32) {
	x.xxx_hidden_TimeOfChangeMinutes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 9)
}

func (x *DriverActivity_DailyRecord_ActivityChange) HasSlot() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DriverActivity_DailyRecord_ActivityChange) HasUnrecognizedSlot() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DriverActivity_DailyRecord_ActivityChange) HasDrivingStatus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *DriverActivity_DailyRecord_ActivityChange) HasUnrecognizedDrivingStatus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *DriverActivity_DailyRecord_ActivityChange) HasCardStatus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *DriverActivity_DailyRecord_ActivityChange) HasUnrecognizedCardStatus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *DriverActivity_DailyRecord_ActivityChange) HasActivity() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *DriverActivity_DailyRecord_ActivityChange) HasUnrecognizedActivity() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *DriverActivity_DailyRecord_ActivityChange) HasTimeOfChangeMinutes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *DriverActivity_DailyRecord_ActivityChange) ClearSlot() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Slot = v1.CardSlotNumber_CARD_SLOT_NUMBER_UNSPECIFIED
}

func (x *DriverActivity_DailyRecord_ActivityChange) ClearUnrecognizedSlot() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_UnrecognizedSlot = 0
}

func (x *DriverActivity_DailyRecord_ActivityChange) ClearDrivingStatus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_DrivingStatus = v1.DrivingStatus_DRIVING_STATUS_UNSPECIFIED
}

func (x *DriverActivity_DailyRecord_ActivityChange) ClearUnrecognizedDrivingStatus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_UnrecognizedDrivingStatus = 0
}

func (x *DriverActivity_DailyRecord_ActivityChange) ClearCardStatus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_CardStatus = v1.CardStatus_CARD_STATUS_UNSPECIFIED
}

func (x *DriverActivity_DailyRecord_ActivityChange) ClearUnrecognizedCardStatus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_UnrecognizedCardStatus = 0
}

func (x *DriverActivity_DailyRecord_ActivityChange) ClearActivity() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_Activity = v1.DriverActivityValue_DRIVER_ACTIVITY_UNSPECIFIED
}

func (x *DriverActivity_DailyRecord_ActivityChange) ClearUnrecognizedActivity() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_UnrecognizedActivity = 0
}

func (x *DriverActivity_DailyRecord_ActivityChange) ClearTimeOfChangeMinutes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_TimeOfChangeMinutes = 0
}

type DriverActivity_DailyRecord_ActivityChange_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Slot of the driver/co-driver.
	Slot *v1.CardSlotNumber
	// Populated only when slot is CARD_SLOT_NUMBER_UNRECOGNIZED.
	UnrecognizedSlot *int32
	// Driving status (single or crew).
	DrivingStatus *v1.DrivingStatus
	// Populated only when driving_status is DRIVING_STATUS_UNRECOGNIZED.
	UnrecognizedDrivingStatus *int32
	// Card status (inserted or not inserted).
	CardStatus *v1.CardStatus
	// Populated only when card_status is CARD_STATUS_UNRECOGNIZED.
	UnrecognizedCardStatus *int32
	// Driver's activity (break/rest, availability, work, driving).
	Activity *v1.DriverActivityValue
	// Populated only when activity is DRIVER_ACTIVITY_UNRECOGNIZED.
	UnrecognizedActivity *int32
	// Time of the change in minutes since 00:00.
	TimeOfChangeMinutes *int32
}

func (b0 DriverActivity_DailyRecord_ActivityChange_builder) Build() *DriverActivity_DailyRecord_ActivityChange {
	m0 := &DriverActivity_DailyRecord_ActivityChange{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Slot != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 9)
		x.xxx_hidden_Slot = *b.Slot
	}
	if b.UnrecognizedSlot != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 9)
		x.xxx_hidden_UnrecognizedSlot = *b.UnrecognizedSlot
	}
	if b.DrivingStatus != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 9)
		x.xxx_hidden_DrivingStatus = *b.DrivingStatus
	}
	if b.UnrecognizedDrivingStatus != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 9)
		x.xxx_hidden_UnrecognizedDrivingStatus = *b.UnrecognizedDrivingStatus
	}
	if b.CardStatus != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 9)
		x.xxx_hidden_CardStatus = *b.CardStatus
	}
	if b.UnrecognizedCardStatus != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 9)
		x.xxx_hidden_UnrecognizedCardStatus = *b.UnrecognizedCardStatus
	}
	if b.Activity != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 9)
		x.xxx_hidden_Activity = *b.Activity
	}
	if b.UnrecognizedActivity != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 9)
		x.xxx_hidden_UnrecognizedActivity = *b.UnrecognizedActivity
	}
	if b.TimeOfChangeMinutes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 9)
		x.xxx_hidden_TimeOfChangeMinutes = *b.TimeOfChangeMinutes
	}
	return m0
}

var File_wayplatform_connect_tachograph_card_v1_driver_activity_proto protoreflect.FileDescriptor

const file_wayplatform_connect_tachograph_card_v1_driver_activity_proto_rawDesc = "" +
	"\n" +
	"<wayplatform/connect/tachograph/card/v1/driver_activity.proto\x12&wayplatform.connect.tachograph.card.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1aGwayplatform/connect/tachograph/datadictionary/v1/card_slot_number.proto\x1aBwayplatform/connect/tachograph/datadictionary/v1/card_status.proto\x1aLwayplatform/connect/tachograph/datadictionary/v1/driver_activity_value.proto\x1aEwayplatform/connect/tachograph/datadictionary/v1/driving_status.proto\"\xb6\v\n" +
	"\x0eDriverActivity\x12\x14\n" +
	"\x05valid\x18\x01 \x01(\bR\x05valid\x125\n" +
	"\x17oldest_day_record_index\x18\x02 \x01(\x05R\x14oldestDayRecordIndex\x125\n" +
	"\x17newest_day_record_index\x18\x03 \x01(\x05R\x14newestDayRecordIndex\x12g\n" +
	"\rdaily_records\x18\x04 \x03(\v2B.wayplatform.connect.tachograph.card.v1.DriverActivity.DailyRecordR\fdailyRecords\x12\x19\n" +
	"\braw_data\x18\x05 \x01(\fR\arawData\x12\x1c\n" +
	"\tsignature\x18\x06 \x01(\fR\tsignature\x1a\xfd\b\n" +
	"\vDailyRecord\x12E\n" +
	"\x1factivity_previous_record_length\x18\x01 \x01(\x05R\x1cactivityPreviousRecordLength\x124\n" +
	"\x16activity_record_length\x18\x02 \x01(\x05R\x14activityRecordLength\x12L\n" +
	"\x14activity_record_date\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x12activityRecordDate\x12E\n" +
	"\x1factivity_daily_presence_counter\x18\x04 \x01(\x05R\x1cactivityDailyPresenceCounter\x122\n" +
	"\x15activity_day_distance\x18\x05 \x01(\x05R\x13activityDayDistance\x12\x83\x01\n" +
	"\x14activity_change_info\x18\x06 \x03(\v2Q.wayplatform.connect.tachograph.card.v1.DriverActivity.DailyRecord.ActivityChangeR\x12activityChangeInfo\x1a\xa1\x05\n" +
	"\x0eActivityChange\x12T\n" +
	"\x04slot\x18\x01 \x01(\x0e2@.wayplatform.connect.tachograph.datadictionary.v1.CardSlotNumberR\x04slot\x12+\n" +
	"\x11unrecognized_slot\x18\x02 \x01(\x05R\x10unrecognizedSlot\x12f\n" +
	"\x0edriving_status\x18\x03 \x01(\x0e2?.wayplatform.connect.tachograph.datadictionary.v1.DrivingStatusR\rdrivingStatus\x12>\n" +
	"\x1bunrecognized_driving_status\x18\x04 \x01(\x05R\x19unrecognizedDrivingStatus\x12]\n" +
	"\vcard_status\x18\x05 \x01(\x0e2<.wayplatform.connect.tachograph.datadictionary.v1.CardStatusR\n" +
	"cardStatus\x128\n" +
	"\x18unrecognized_card_status\x18\x06 \x01(\x05R\x16unrecognizedCardStatus\x12a\n" +
	"\bactivity\x18\a \x01(\x0e2E.wayplatform.connect.tachograph.datadictionary.v1.DriverActivityValueR\bactivity\x123\n" +
	"\x15unrecognized_activity\x18\b \x01(\x05R\x14unrecognizedActivity\x123\n" +
	"\x16time_of_change_minutes\x18\t \x01(\x05R\x13timeOfChangeMinutesB\xe0\x02\n" +
	"*com.wayplatform.connect.tachograph.card.v1B\x13DriverActivityProtoP\x01Z`github.com/way-platform/tachograph-go/proto/gen/go/wayplatform/connect/tachograph/card/v1;cardv1\xa2\x02\x04WCTC\xaa\x02&Wayplatform.Connect.Tachograph.Card.V1\xca\x02&Wayplatform\\Connect\\Tachograph\\Card\\V1\xe2\x022Wayplatform\\Connect\\Tachograph\\Card\\V1\\GPBMetadata\xea\x02*Wayplatform::Connect::Tachograph::Card::V1b\beditionsp\xe8\a"

var file_wayplatform_connect_tachograph_card_v1_driver_activity_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_wayplatform_connect_tachograph_card_v1_driver_activity_proto_goTypes = []any{
	(*DriverActivity)(nil),                            // 0: wayplatform.connect.tachograph.card.v1.DriverActivity
	(*DriverActivity_DailyRecord)(nil),                // 1: wayplatform.connect.tachograph.card.v1.DriverActivity.DailyRecord
	(*DriverActivity_DailyRecord_ActivityChange)(nil), // 2: wayplatform.connect.tachograph.card.v1.DriverActivity.DailyRecord.ActivityChange
	(*timestamppb.Timestamp)(nil),                     // 3: google.protobuf.Timestamp
	(v1.CardSlotNumber)(0),                            // 4: wayplatform.connect.tachograph.datadictionary.v1.CardSlotNumber
	(v1.DrivingStatus)(0),                             // 5: wayplatform.connect.tachograph.datadictionary.v1.DrivingStatus
	(v1.CardStatus)(0),                                // 6: wayplatform.connect.tachograph.datadictionary.v1.CardStatus
	(v1.DriverActivityValue)(0),                       // 7: wayplatform.connect.tachograph.datadictionary.v1.DriverActivityValue
}
var file_wayplatform_connect_tachograph_card_v1_driver_activity_proto_depIdxs = []int32{
	1, // 0: wayplatform.connect.tachograph.card.v1.DriverActivity.daily_records:type_name -> wayplatform.connect.tachograph.card.v1.DriverActivity.DailyRecord
	3, // 1: wayplatform.connect.tachograph.card.v1.DriverActivity.DailyRecord.activity_record_date:type_name -> google.protobuf.Timestamp
	2, // 2: wayplatform.connect.tachograph.card.v1.DriverActivity.DailyRecord.activity_change_info:type_name -> wayplatform.connect.tachograph.card.v1.DriverActivity.DailyRecord.ActivityChange
	4, // 3: wayplatform.connect.tachograph.card.v1.DriverActivity.DailyRecord.ActivityChange.slot:type_name -> wayplatform.connect.tachograph.datadictionary.v1.CardSlotNumber
	5, // 4: wayplatform.connect.tachograph.card.v1.DriverActivity.DailyRecord.ActivityChange.driving_status:type_name -> wayplatform.connect.tachograph.datadictionary.v1.DrivingStatus
	6, // 5: wayplatform.connect.tachograph.card.v1.DriverActivity.DailyRecord.ActivityChange.card_status:type_name -> wayplatform.connect.tachograph.datadictionary.v1.CardStatus
	7, // 6: wayplatform.connect.tachograph.card.v1.DriverActivity.DailyRecord.ActivityChange.activity:type_name -> wayplatform.connect.tachograph.datadictionary.v1.DriverActivityValue
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_wayplatform_connect_tachograph_card_v1_driver_activity_proto_init() }
func file_wayplatform_connect_tachograph_card_v1_driver_activity_proto_init() {
	if File_wayplatform_connect_tachograph_card_v1_driver_activity_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wayplatform_connect_tachograph_card_v1_driver_activity_proto_rawDesc), len(file_wayplatform_connect_tachograph_card_v1_driver_activity_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wayplatform_connect_tachograph_card_v1_driver_activity_proto_goTypes,
		DependencyIndexes: file_wayplatform_connect_tachograph_card_v1_driver_activity_proto_depIdxs,
		MessageInfos:      file_wayplatform_connect_tachograph_card_v1_driver_activity_proto_msgTypes,
	}.Build()
	File_wayplatform_connect_tachograph_card_v1_driver_activity_proto = out.File
	file_wayplatform_connect_tachograph_card_v1_driver_activity_proto_goTypes = nil
	file_wayplatform_connect_tachograph_card_v1_driver_activity_proto_depIdxs = nil
}
