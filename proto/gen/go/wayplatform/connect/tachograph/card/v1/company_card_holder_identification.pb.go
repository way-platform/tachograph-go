// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wayplatform/connect/tachograph/card/v1/company_card_holder_identification.proto

package cardv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents the identification of the company card holder.
//
// Corresponds to the `CompanyCardHolderIdentification` data type.
// See Data Dictionary, Section 2.49.
type CompanyCardHolderIdentification struct {
	state                                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_CompanyName                 *string                `protobuf:"bytes,1,opt,name=company_name,json=companyName"`
	xxx_hidden_CompanyAddress              *string                `protobuf:"bytes,2,opt,name=company_address,json=companyAddress"`
	xxx_hidden_CardHolderPreferredLanguage *string                `protobuf:"bytes,3,opt,name=card_holder_preferred_language,json=cardHolderPreferredLanguage"`
	XXX_raceDetectHookData                 protoimpl.RaceDetectHookData
	XXX_presence                           [1]uint32
	unknownFields                          protoimpl.UnknownFields
	sizeCache                              protoimpl.SizeCache
}

func (x *CompanyCardHolderIdentification) Reset() {
	*x = CompanyCardHolderIdentification{}
	mi := &file_wayplatform_connect_tachograph_card_v1_company_card_holder_identification_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompanyCardHolderIdentification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyCardHolderIdentification) ProtoMessage() {}

func (x *CompanyCardHolderIdentification) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_card_v1_company_card_holder_identification_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CompanyCardHolderIdentification) GetCompanyName() string {
	if x != nil {
		if x.xxx_hidden_CompanyName != nil {
			return *x.xxx_hidden_CompanyName
		}
		return ""
	}
	return ""
}

func (x *CompanyCardHolderIdentification) GetCompanyAddress() string {
	if x != nil {
		if x.xxx_hidden_CompanyAddress != nil {
			return *x.xxx_hidden_CompanyAddress
		}
		return ""
	}
	return ""
}

func (x *CompanyCardHolderIdentification) GetCardHolderPreferredLanguage() string {
	if x != nil {
		if x.xxx_hidden_CardHolderPreferredLanguage != nil {
			return *x.xxx_hidden_CardHolderPreferredLanguage
		}
		return ""
	}
	return ""
}

func (x *CompanyCardHolderIdentification) SetCompanyName(v string) {
	x.xxx_hidden_CompanyName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *CompanyCardHolderIdentification) SetCompanyAddress(v string) {
	x.xxx_hidden_CompanyAddress = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *CompanyCardHolderIdentification) SetCardHolderPreferredLanguage(v string) {
	x.xxx_hidden_CardHolderPreferredLanguage = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *CompanyCardHolderIdentification) HasCompanyName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CompanyCardHolderIdentification) HasCompanyAddress() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CompanyCardHolderIdentification) HasCardHolderPreferredLanguage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *CompanyCardHolderIdentification) ClearCompanyName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_CompanyName = nil
}

func (x *CompanyCardHolderIdentification) ClearCompanyAddress() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_CompanyAddress = nil
}

func (x *CompanyCardHolderIdentification) ClearCardHolderPreferredLanguage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_CardHolderPreferredLanguage = nil
}

type CompanyCardHolderIdentification_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// See Data Dictionary, Section 2.49, `companyName`.
	CompanyName *string
	// See Data Dictionary, Section 2.49, `companyAddress`.
	CompanyAddress *string
	// See Data Dictionary, Section 2.49, `cardHolderPreferredLanguage`.
	CardHolderPreferredLanguage *string
}

func (b0 CompanyCardHolderIdentification_builder) Build() *CompanyCardHolderIdentification {
	m0 := &CompanyCardHolderIdentification{}
	b, x := &b0, m0
	_, _ = b, x
	if b.CompanyName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_CompanyName = b.CompanyName
	}
	if b.CompanyAddress != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_CompanyAddress = b.CompanyAddress
	}
	if b.CardHolderPreferredLanguage != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_CardHolderPreferredLanguage = b.CardHolderPreferredLanguage
	}
	return m0
}

var File_wayplatform_connect_tachograph_card_v1_company_card_holder_identification_proto protoreflect.FileDescriptor

const file_wayplatform_connect_tachograph_card_v1_company_card_holder_identification_proto_rawDesc = "" +
	"\n" +
	"Owayplatform/connect/tachograph/card/v1/company_card_holder_identification.proto\x12&wayplatform.connect.tachograph.card.v1\"\xb2\x01\n" +
	"\x1fCompanyCardHolderIdentification\x12!\n" +
	"\fcompany_name\x18\x01 \x01(\tR\vcompanyName\x12'\n" +
	"\x0fcompany_address\x18\x02 \x01(\tR\x0ecompanyAddress\x12C\n" +
	"\x1ecard_holder_preferred_language\x18\x03 \x01(\tR\x1bcardHolderPreferredLanguageB\xf1\x02\n" +
	"*com.wayplatform.connect.tachograph.card.v1B$CompanyCardHolderIdentificationProtoP\x01Z`github.com/way-platform/tachograph-go/proto/gen/go/wayplatform/connect/tachograph/card/v1;cardv1\xa2\x02\x04WCTC\xaa\x02&Wayplatform.Connect.Tachograph.Card.V1\xca\x02&Wayplatform\\Connect\\Tachograph\\Card\\V1\xe2\x022Wayplatform\\Connect\\Tachograph\\Card\\V1\\GPBMetadata\xea\x02*Wayplatform::Connect::Tachograph::Card::V1b\beditionsp\xe8\a"

var file_wayplatform_connect_tachograph_card_v1_company_card_holder_identification_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_wayplatform_connect_tachograph_card_v1_company_card_holder_identification_proto_goTypes = []any{
	(*CompanyCardHolderIdentification)(nil), // 0: wayplatform.connect.tachograph.card.v1.CompanyCardHolderIdentification
}
var file_wayplatform_connect_tachograph_card_v1_company_card_holder_identification_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() {
	file_wayplatform_connect_tachograph_card_v1_company_card_holder_identification_proto_init()
}
func file_wayplatform_connect_tachograph_card_v1_company_card_holder_identification_proto_init() {
	if File_wayplatform_connect_tachograph_card_v1_company_card_holder_identification_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wayplatform_connect_tachograph_card_v1_company_card_holder_identification_proto_rawDesc), len(file_wayplatform_connect_tachograph_card_v1_company_card_holder_identification_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wayplatform_connect_tachograph_card_v1_company_card_holder_identification_proto_goTypes,
		DependencyIndexes: file_wayplatform_connect_tachograph_card_v1_company_card_holder_identification_proto_depIdxs,
		MessageInfos:      file_wayplatform_connect_tachograph_card_v1_company_card_holder_identification_proto_msgTypes,
	}.Build()
	File_wayplatform_connect_tachograph_card_v1_company_card_holder_identification_proto = out.File
	file_wayplatform_connect_tachograph_card_v1_company_card_holder_identification_proto_goTypes = nil
	file_wayplatform_connect_tachograph_card_v1_company_card_holder_identification_proto_depIdxs = nil
}
