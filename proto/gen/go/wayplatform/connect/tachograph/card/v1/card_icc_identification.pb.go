// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wayplatform/connect/tachograph/card/v1/card_icc_identification.proto

package cardv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents Integrated Circuit Card identification data.
//
// Corresponds to the `CardIccIdentification` data type from EF_ICC.
// See Data Dictionary, Section 2.23.
type IccIdentification struct {
	state                               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ClockStop                int32                  `protobuf:"varint,1,opt,name=clock_stop,json=clockStop"`
	xxx_hidden_CardExtendedSerialNumber *string                `protobuf:"bytes,2,opt,name=card_extended_serial_number,json=cardExtendedSerialNumber"`
	xxx_hidden_CardApprovalNumber       *string                `protobuf:"bytes,3,opt,name=card_approval_number,json=cardApprovalNumber"`
	xxx_hidden_CardPersonaliserId       int32                  `protobuf:"varint,4,opt,name=card_personaliser_id,json=cardPersonaliserId"`
	xxx_hidden_EmbedderIcAssemblerId    []byte                 `protobuf:"bytes,5,opt,name=embedder_ic_assembler_id,json=embedderIcAssemblerId"`
	xxx_hidden_IcIdentifier             []byte                 `protobuf:"bytes,6,opt,name=ic_identifier,json=icIdentifier"`
	XXX_raceDetectHookData              protoimpl.RaceDetectHookData
	XXX_presence                        [1]uint32
	unknownFields                       protoimpl.UnknownFields
	sizeCache                           protoimpl.SizeCache
}

func (x *IccIdentification) Reset() {
	*x = IccIdentification{}
	mi := &file_wayplatform_connect_tachograph_card_v1_card_icc_identification_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IccIdentification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IccIdentification) ProtoMessage() {}

func (x *IccIdentification) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_card_v1_card_icc_identification_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *IccIdentification) GetClockStop() int32 {
	if x != nil {
		return x.xxx_hidden_ClockStop
	}
	return 0
}

func (x *IccIdentification) GetCardExtendedSerialNumber() string {
	if x != nil {
		if x.xxx_hidden_CardExtendedSerialNumber != nil {
			return *x.xxx_hidden_CardExtendedSerialNumber
		}
		return ""
	}
	return ""
}

func (x *IccIdentification) GetCardApprovalNumber() string {
	if x != nil {
		if x.xxx_hidden_CardApprovalNumber != nil {
			return *x.xxx_hidden_CardApprovalNumber
		}
		return ""
	}
	return ""
}

func (x *IccIdentification) GetCardPersonaliserId() int32 {
	if x != nil {
		return x.xxx_hidden_CardPersonaliserId
	}
	return 0
}

func (x *IccIdentification) GetEmbedderIcAssemblerId() []byte {
	if x != nil {
		return x.xxx_hidden_EmbedderIcAssemblerId
	}
	return nil
}

func (x *IccIdentification) GetIcIdentifier() []byte {
	if x != nil {
		return x.xxx_hidden_IcIdentifier
	}
	return nil
}

func (x *IccIdentification) SetClockStop(v int32) {
	x.xxx_hidden_ClockStop = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *IccIdentification) SetCardExtendedSerialNumber(v string) {
	x.xxx_hidden_CardExtendedSerialNumber = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *IccIdentification) SetCardApprovalNumber(v string) {
	x.xxx_hidden_CardApprovalNumber = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *IccIdentification) SetCardPersonaliserId(v int32) {
	x.xxx_hidden_CardPersonaliserId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *IccIdentification) SetEmbedderIcAssemblerId(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_EmbedderIcAssemblerId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *IccIdentification) SetIcIdentifier(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_IcIdentifier = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *IccIdentification) HasClockStop() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *IccIdentification) HasCardExtendedSerialNumber() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *IccIdentification) HasCardApprovalNumber() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *IccIdentification) HasCardPersonaliserId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *IccIdentification) HasEmbedderIcAssemblerId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *IccIdentification) HasIcIdentifier() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *IccIdentification) ClearClockStop() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ClockStop = 0
}

func (x *IccIdentification) ClearCardExtendedSerialNumber() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_CardExtendedSerialNumber = nil
}

func (x *IccIdentification) ClearCardApprovalNumber() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_CardApprovalNumber = nil
}

func (x *IccIdentification) ClearCardPersonaliserId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_CardPersonaliserId = 0
}

func (x *IccIdentification) ClearEmbedderIcAssemblerId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_EmbedderIcAssemblerId = nil
}

func (x *IccIdentification) ClearIcIdentifier() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_IcIdentifier = nil
}

type IccIdentification_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// See Data Dictionary, Section 2.23, `clockStop`.
	ClockStop *int32
	// See Data Dictionary, Section 2.23, `cardExtendedSerialNumber`.
	CardExtendedSerialNumber *string
	// See Data Dictionary, Section 2.23, `cardApprovalNumber`.
	CardApprovalNumber *string
	// See Data Dictionary, Section 2.23, `cardPersonaliserID`.
	CardPersonaliserId *int32
	// See Data Dictionary, Section 2.23, `embedderIcAssemblerId`.
	EmbedderIcAssemblerId []byte
	// See Data Dictionary, Section 2.23, `icIdentifier`.
	IcIdentifier []byte
}

func (b0 IccIdentification_builder) Build() *IccIdentification {
	m0 := &IccIdentification{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ClockStop != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_ClockStop = *b.ClockStop
	}
	if b.CardExtendedSerialNumber != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_CardExtendedSerialNumber = b.CardExtendedSerialNumber
	}
	if b.CardApprovalNumber != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_CardApprovalNumber = b.CardApprovalNumber
	}
	if b.CardPersonaliserId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_CardPersonaliserId = *b.CardPersonaliserId
	}
	if b.EmbedderIcAssemblerId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_EmbedderIcAssemblerId = b.EmbedderIcAssemblerId
	}
	if b.IcIdentifier != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_IcIdentifier = b.IcIdentifier
	}
	return m0
}

var File_wayplatform_connect_tachograph_card_v1_card_icc_identification_proto protoreflect.FileDescriptor

const file_wayplatform_connect_tachograph_card_v1_card_icc_identification_proto_rawDesc = "" +
	"\n" +
	"Dwayplatform/connect/tachograph/card/v1/card_icc_identification.proto\x12&wayplatform.connect.tachograph.card.v1\"\xb3\x02\n" +
	"\x11IccIdentification\x12\x1d\n" +
	"\n" +
	"clock_stop\x18\x01 \x01(\x05R\tclockStop\x12=\n" +
	"\x1bcard_extended_serial_number\x18\x02 \x01(\tR\x18cardExtendedSerialNumber\x120\n" +
	"\x14card_approval_number\x18\x03 \x01(\tR\x12cardApprovalNumber\x120\n" +
	"\x14card_personaliser_id\x18\x04 \x01(\x05R\x12cardPersonaliserId\x127\n" +
	"\x18embedder_ic_assembler_id\x18\x05 \x01(\fR\x15embedderIcAssemblerId\x12#\n" +
	"\ric_identifier\x18\x06 \x01(\fR\ficIdentifierB\xe7\x02\n" +
	"*com.wayplatform.connect.tachograph.card.v1B\x1aCardIccIdentificationProtoP\x01Z`github.com/way-platform/tachograph-go/proto/gen/go/wayplatform/connect/tachograph/card/v1;cardv1\xa2\x02\x04WCTC\xaa\x02&Wayplatform.Connect.Tachograph.Card.V1\xca\x02&Wayplatform\\Connect\\Tachograph\\Card\\V1\xe2\x022Wayplatform\\Connect\\Tachograph\\Card\\V1\\GPBMetadata\xea\x02*Wayplatform::Connect::Tachograph::Card::V1b\beditionsp\xe8\a"

var file_wayplatform_connect_tachograph_card_v1_card_icc_identification_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_wayplatform_connect_tachograph_card_v1_card_icc_identification_proto_goTypes = []any{
	(*IccIdentification)(nil), // 0: wayplatform.connect.tachograph.card.v1.IccIdentification
}
var file_wayplatform_connect_tachograph_card_v1_card_icc_identification_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_wayplatform_connect_tachograph_card_v1_card_icc_identification_proto_init() }
func file_wayplatform_connect_tachograph_card_v1_card_icc_identification_proto_init() {
	if File_wayplatform_connect_tachograph_card_v1_card_icc_identification_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wayplatform_connect_tachograph_card_v1_card_icc_identification_proto_rawDesc), len(file_wayplatform_connect_tachograph_card_v1_card_icc_identification_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wayplatform_connect_tachograph_card_v1_card_icc_identification_proto_goTypes,
		DependencyIndexes: file_wayplatform_connect_tachograph_card_v1_card_icc_identification_proto_depIdxs,
		MessageInfos:      file_wayplatform_connect_tachograph_card_v1_card_icc_identification_proto_msgTypes,
	}.Build()
	File_wayplatform_connect_tachograph_card_v1_card_icc_identification_proto = out.File
	file_wayplatform_connect_tachograph_card_v1_card_icc_identification_proto_goTypes = nil
	file_wayplatform_connect_tachograph_card_v1_card_icc_identification_proto_depIdxs = nil
}
