// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wayplatform/connect/tachograph/card/v1/card_ma_certificate.proto

package cardv1

import (
	v1 "github.com/way-platform/tachograph-go/proto/gen/go/wayplatform/connect/tachograph/security/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Data from EF CardMA_Certificate (File ID 'C100h').
//
// This certificate is used for mutual authentication in Generation 2 tachograph
// cards, replacing the Gen1 Card_Certificate. It uses ECC-based cryptography
// and ranges from 204-341 bytes depending on the elliptic curve.
//
// See Data Dictionary, Section 2.25 (CardMACertificate).
// See File Structure, Section 4.2.2 (TCS_152, TCS_154).
//
// ASN.1 Definition (Gen2):
//
//	Certificate ::= OCTET STRING (SIZE(204..341))
//
// Note: This EF is not signed (see Section 3.3, DDP_037).
type CardMaCertificate struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_EccCertificate *v1.EccCertificate     `protobuf:"bytes,1,opt,name=ecc_certificate,json=eccCertificate"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *CardMaCertificate) Reset() {
	*x = CardMaCertificate{}
	mi := &file_wayplatform_connect_tachograph_card_v1_card_ma_certificate_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CardMaCertificate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardMaCertificate) ProtoMessage() {}

func (x *CardMaCertificate) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_card_v1_card_ma_certificate_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CardMaCertificate) GetEccCertificate() *v1.EccCertificate {
	if x != nil {
		return x.xxx_hidden_EccCertificate
	}
	return nil
}

func (x *CardMaCertificate) SetEccCertificate(v *v1.EccCertificate) {
	x.xxx_hidden_EccCertificate = v
}

func (x *CardMaCertificate) HasEccCertificate() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_EccCertificate != nil
}

func (x *CardMaCertificate) ClearEccCertificate() {
	x.xxx_hidden_EccCertificate = nil
}

type CardMaCertificate_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// ECC certificate containing the card's public key for mutual authentication.
	EccCertificate *v1.EccCertificate
}

func (b0 CardMaCertificate_builder) Build() *CardMaCertificate {
	m0 := &CardMaCertificate{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_EccCertificate = b.EccCertificate
	return m0
}

var File_wayplatform_connect_tachograph_card_v1_card_ma_certificate_proto protoreflect.FileDescriptor

const file_wayplatform_connect_tachograph_card_v1_card_ma_certificate_proto_rawDesc = "" +
	"\n" +
	"@wayplatform/connect/tachograph/card/v1/card_ma_certificate.proto\x12&wayplatform.connect.tachograph.card.v1\x1a@wayplatform/connect/tachograph/security/v1/ecc_certificate.proto\"x\n" +
	"\x11CardMaCertificate\x12c\n" +
	"\x0fecc_certificate\x18\x01 \x01(\v2:.wayplatform.connect.tachograph.security.v1.EccCertificateR\x0eeccCertificateB\xe3\x02\n" +
	"*com.wayplatform.connect.tachograph.card.v1B\x16CardMaCertificateProtoP\x01Z`github.com/way-platform/tachograph-go/proto/gen/go/wayplatform/connect/tachograph/card/v1;cardv1\xa2\x02\x04WCTC\xaa\x02&Wayplatform.Connect.Tachograph.Card.V1\xca\x02&Wayplatform\\Connect\\Tachograph\\Card\\V1\xe2\x022Wayplatform\\Connect\\Tachograph\\Card\\V1\\GPBMetadata\xea\x02*Wayplatform::Connect::Tachograph::Card::V1b\beditionsp\xe8\a"

var file_wayplatform_connect_tachograph_card_v1_card_ma_certificate_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_wayplatform_connect_tachograph_card_v1_card_ma_certificate_proto_goTypes = []any{
	(*CardMaCertificate)(nil), // 0: wayplatform.connect.tachograph.card.v1.CardMaCertificate
	(*v1.EccCertificate)(nil), // 1: wayplatform.connect.tachograph.security.v1.EccCertificate
}
var file_wayplatform_connect_tachograph_card_v1_card_ma_certificate_proto_depIdxs = []int32{
	1, // 0: wayplatform.connect.tachograph.card.v1.CardMaCertificate.ecc_certificate:type_name -> wayplatform.connect.tachograph.security.v1.EccCertificate
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_wayplatform_connect_tachograph_card_v1_card_ma_certificate_proto_init() }
func file_wayplatform_connect_tachograph_card_v1_card_ma_certificate_proto_init() {
	if File_wayplatform_connect_tachograph_card_v1_card_ma_certificate_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wayplatform_connect_tachograph_card_v1_card_ma_certificate_proto_rawDesc), len(file_wayplatform_connect_tachograph_card_v1_card_ma_certificate_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wayplatform_connect_tachograph_card_v1_card_ma_certificate_proto_goTypes,
		DependencyIndexes: file_wayplatform_connect_tachograph_card_v1_card_ma_certificate_proto_depIdxs,
		MessageInfos:      file_wayplatform_connect_tachograph_card_v1_card_ma_certificate_proto_msgTypes,
	}.Build()
	File_wayplatform_connect_tachograph_card_v1_card_ma_certificate_proto = out.File
	file_wayplatform_connect_tachograph_card_v1_card_ma_certificate_proto_goTypes = nil
	file_wayplatform_connect_tachograph_card_v1_card_ma_certificate_proto_depIdxs = nil
}
