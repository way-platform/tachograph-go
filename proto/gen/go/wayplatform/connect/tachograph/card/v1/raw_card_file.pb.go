// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wayplatform/connect/tachograph/card/v1/raw_card_file.proto

package cardv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents the low-level structure of a downloaded card file, containing a
// sequence of raw Tag-Length-Value (TLV) records. This is the result of the
// first parsing pass and is used as input for the second pass, which interprets
// the `value` bytes into semantic messages.
//
// This message is part of the internal data model and does not correspond to a
// specific data type in the Data Dictionary.
type RawCardFile struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Records *[]*RawCardFile_Record `protobuf:"bytes,1,rep,name=records"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *RawCardFile) Reset() {
	*x = RawCardFile{}
	mi := &file_wayplatform_connect_tachograph_card_v1_raw_card_file_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RawCardFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawCardFile) ProtoMessage() {}

func (x *RawCardFile) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_card_v1_raw_card_file_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RawCardFile) GetRecords() []*RawCardFile_Record {
	if x != nil {
		if x.xxx_hidden_Records != nil {
			return *x.xxx_hidden_Records
		}
	}
	return nil
}

func (x *RawCardFile) SetRecords(v []*RawCardFile_Record) {
	x.xxx_hidden_Records = &v
}

type RawCardFile_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The sequence of TLV records from the downloaded file.
	Records []*RawCardFile_Record
}

func (b0 RawCardFile_builder) Build() *RawCardFile {
	m0 := &RawCardFile{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Records = &b.Records
	return m0
}

// A TLV record of the raw card file.
type RawCardFile_Record struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Tag         int32                  `protobuf:"varint,1,opt,name=tag"`
	xxx_hidden_File        ElementaryFileType     `protobuf:"varint,2,opt,name=file,enum=wayplatform.connect.tachograph.card.v1.ElementaryFileType"`
	xxx_hidden_Generation  ApplicationGeneration  `protobuf:"varint,3,opt,name=generation,enum=wayplatform.connect.tachograph.card.v1.ApplicationGeneration"`
	xxx_hidden_ContentType ContentType            `protobuf:"varint,4,opt,name=content_type,json=contentType,enum=wayplatform.connect.tachograph.card.v1.ContentType"`
	xxx_hidden_Length      int32                  `protobuf:"varint,5,opt,name=length"`
	xxx_hidden_Value       []byte                 `protobuf:"bytes,6,opt,name=value"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *RawCardFile_Record) Reset() {
	*x = RawCardFile_Record{}
	mi := &file_wayplatform_connect_tachograph_card_v1_raw_card_file_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RawCardFile_Record) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawCardFile_Record) ProtoMessage() {}

func (x *RawCardFile_Record) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_card_v1_raw_card_file_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RawCardFile_Record) GetTag() int32 {
	if x != nil {
		return x.xxx_hidden_Tag
	}
	return 0
}

func (x *RawCardFile_Record) GetFile() ElementaryFileType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_File
		}
	}
	return ElementaryFileType_ELEMENTARY_FILE_UNSPECIFIED
}

func (x *RawCardFile_Record) GetGeneration() ApplicationGeneration {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 2) {
			return x.xxx_hidden_Generation
		}
	}
	return ApplicationGeneration_APPLICATION_GENERATION_UNSPECIFIED
}

func (x *RawCardFile_Record) GetContentType() ContentType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 3) {
			return x.xxx_hidden_ContentType
		}
	}
	return ContentType_CONTENT_TYPE_UNSPECIFIED
}

func (x *RawCardFile_Record) GetLength() int32 {
	if x != nil {
		return x.xxx_hidden_Length
	}
	return 0
}

func (x *RawCardFile_Record) GetValue() []byte {
	if x != nil {
		return x.xxx_hidden_Value
	}
	return nil
}

func (x *RawCardFile_Record) SetTag(v int32) {
	x.xxx_hidden_Tag = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *RawCardFile_Record) SetFile(v ElementaryFileType) {
	x.xxx_hidden_File = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *RawCardFile_Record) SetGeneration(v ApplicationGeneration) {
	x.xxx_hidden_Generation = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *RawCardFile_Record) SetContentType(v ContentType) {
	x.xxx_hidden_ContentType = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *RawCardFile_Record) SetLength(v int32) {
	x.xxx_hidden_Length = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *RawCardFile_Record) SetValue(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Value = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *RawCardFile_Record) HasTag() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *RawCardFile_Record) HasFile() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *RawCardFile_Record) HasGeneration() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *RawCardFile_Record) HasContentType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *RawCardFile_Record) HasLength() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *RawCardFile_Record) HasValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *RawCardFile_Record) ClearTag() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Tag = 0
}

func (x *RawCardFile_Record) ClearFile() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_File = ElementaryFileType_ELEMENTARY_FILE_UNSPECIFIED
}

func (x *RawCardFile_Record) ClearGeneration() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Generation = ApplicationGeneration_APPLICATION_GENERATION_UNSPECIFIED
}

func (x *RawCardFile_Record) ClearContentType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_ContentType = ContentType_CONTENT_TYPE_UNSPECIFIED
}

func (x *RawCardFile_Record) ClearLength() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Length = 0
}

func (x *RawCardFile_Record) ClearValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Value = nil
}

type RawCardFile_Record_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The tag of the TLV record, identifying the data type.
	Tag *int32
	// The elementary file type, inferred from the tag.
	File *ElementaryFileType
	// The application generation (Gen1 or Gen2), inferred from the tag.
	Generation *ApplicationGeneration
	// The content type of the value (data or signature), inferred from the tag.
	ContentType *ContentType
	// The length of the record's value in bytes.
	Length *int32
	// The raw byte value of the record.
	Value []byte
}

func (b0 RawCardFile_Record_builder) Build() *RawCardFile_Record {
	m0 := &RawCardFile_Record{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Tag != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_Tag = *b.Tag
	}
	if b.File != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_File = *b.File
	}
	if b.Generation != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_Generation = *b.Generation
	}
	if b.ContentType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_ContentType = *b.ContentType
	}
	if b.Length != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_Length = *b.Length
	}
	if b.Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_Value = b.Value
	}
	return m0
}

var File_wayplatform_connect_tachograph_card_v1_raw_card_file_proto protoreflect.FileDescriptor

const file_wayplatform_connect_tachograph_card_v1_raw_card_file_proto_rawDesc = "" +
	"\n" +
	":wayplatform/connect/tachograph/card/v1/raw_card_file.proto\x12&wayplatform.connect.tachograph.card.v1\x1aCwayplatform/connect/tachograph/card/v1/application_generation.proto\x1a9wayplatform/connect/tachograph/card/v1/content_type.proto\x1aAwayplatform/connect/tachograph/card/v1/elementary_file_type.proto\"\xb5\x03\n" +
	"\vRawCardFile\x12T\n" +
	"\arecords\x18\x01 \x03(\v2:.wayplatform.connect.tachograph.card.v1.RawCardFile.RecordR\arecords\x1a\xcf\x02\n" +
	"\x06Record\x12\x10\n" +
	"\x03tag\x18\x01 \x01(\x05R\x03tag\x12N\n" +
	"\x04file\x18\x02 \x01(\x0e2:.wayplatform.connect.tachograph.card.v1.ElementaryFileTypeR\x04file\x12]\n" +
	"\n" +
	"generation\x18\x03 \x01(\x0e2=.wayplatform.connect.tachograph.card.v1.ApplicationGenerationR\n" +
	"generation\x12V\n" +
	"\fcontent_type\x18\x04 \x01(\x0e23.wayplatform.connect.tachograph.card.v1.ContentTypeR\vcontentType\x12\x16\n" +
	"\x06length\x18\x05 \x01(\x05R\x06length\x12\x14\n" +
	"\x05value\x18\x06 \x01(\fR\x05valueB\xdd\x02\n" +
	"*com.wayplatform.connect.tachograph.card.v1B\x10RawCardFileProtoP\x01Z`github.com/way-platform/tachograph-go/proto/gen/go/wayplatform/connect/tachograph/card/v1;cardv1\xa2\x02\x04WCTC\xaa\x02&Wayplatform.Connect.Tachograph.Card.V1\xca\x02&Wayplatform\\Connect\\Tachograph\\Card\\V1\xe2\x022Wayplatform\\Connect\\Tachograph\\Card\\V1\\GPBMetadata\xea\x02*Wayplatform::Connect::Tachograph::Card::V1b\beditionsp\xe8\a"

var file_wayplatform_connect_tachograph_card_v1_raw_card_file_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_wayplatform_connect_tachograph_card_v1_raw_card_file_proto_goTypes = []any{
	(*RawCardFile)(nil),        // 0: wayplatform.connect.tachograph.card.v1.RawCardFile
	(*RawCardFile_Record)(nil), // 1: wayplatform.connect.tachograph.card.v1.RawCardFile.Record
	(ElementaryFileType)(0),    // 2: wayplatform.connect.tachograph.card.v1.ElementaryFileType
	(ApplicationGeneration)(0), // 3: wayplatform.connect.tachograph.card.v1.ApplicationGeneration
	(ContentType)(0),           // 4: wayplatform.connect.tachograph.card.v1.ContentType
}
var file_wayplatform_connect_tachograph_card_v1_raw_card_file_proto_depIdxs = []int32{
	1, // 0: wayplatform.connect.tachograph.card.v1.RawCardFile.records:type_name -> wayplatform.connect.tachograph.card.v1.RawCardFile.Record
	2, // 1: wayplatform.connect.tachograph.card.v1.RawCardFile.Record.file:type_name -> wayplatform.connect.tachograph.card.v1.ElementaryFileType
	3, // 2: wayplatform.connect.tachograph.card.v1.RawCardFile.Record.generation:type_name -> wayplatform.connect.tachograph.card.v1.ApplicationGeneration
	4, // 3: wayplatform.connect.tachograph.card.v1.RawCardFile.Record.content_type:type_name -> wayplatform.connect.tachograph.card.v1.ContentType
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_wayplatform_connect_tachograph_card_v1_raw_card_file_proto_init() }
func file_wayplatform_connect_tachograph_card_v1_raw_card_file_proto_init() {
	if File_wayplatform_connect_tachograph_card_v1_raw_card_file_proto != nil {
		return
	}
	file_wayplatform_connect_tachograph_card_v1_application_generation_proto_init()
	file_wayplatform_connect_tachograph_card_v1_content_type_proto_init()
	file_wayplatform_connect_tachograph_card_v1_elementary_file_type_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wayplatform_connect_tachograph_card_v1_raw_card_file_proto_rawDesc), len(file_wayplatform_connect_tachograph_card_v1_raw_card_file_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wayplatform_connect_tachograph_card_v1_raw_card_file_proto_goTypes,
		DependencyIndexes: file_wayplatform_connect_tachograph_card_v1_raw_card_file_proto_depIdxs,
		MessageInfos:      file_wayplatform_connect_tachograph_card_v1_raw_card_file_proto_msgTypes,
	}.Build()
	File_wayplatform_connect_tachograph_card_v1_raw_card_file_proto = out.File
	file_wayplatform_connect_tachograph_card_v1_raw_card_file_proto_goTypes = nil
	file_wayplatform_connect_tachograph_card_v1_raw_card_file_proto_depIdxs = nil
}
