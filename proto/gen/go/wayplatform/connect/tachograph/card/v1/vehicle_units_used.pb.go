// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wayplatform/connect/tachograph/card/v1/vehicle_units_used.proto

package cardv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents the content of the EF_VehicleUnits_Used file, which contains data
// about the vehicle units used by the card holder.
//
// The file structure is specified in Appendix 2, Section 4.2.2.
//
//	EF VehicleUnits_Used
//	└─CardVehicleUnitsUsed
//
// The data type `CardVehicleUnitsUsed` is specified in the Data Dictionary, Section 2.40.
//
// ASN.1 Definition:
//
//	CardVehicleUnitsUsed ::= SEQUENCE {
//	    vehicleUnitPointerNewestRecord INTEGER(0..NoOfCardVehicleUnitRecords-1),
//	    cardVehicleUnitRecords SET SIZE(NoOfCardVehicleUnitRecords) OF CardVehicleUnitRecord
//	}
type VehicleUnitsUsed struct {
	state                                     protoimpl.MessageState      `protogen:"opaque.v1"`
	xxx_hidden_VehicleUnitPointerNewestRecord int32                       `protobuf:"varint,1,opt,name=vehicle_unit_pointer_newest_record,json=vehicleUnitPointerNewestRecord"`
	xxx_hidden_Records                        *[]*VehicleUnitsUsed_Record `protobuf:"bytes,2,rep,name=records"`
	xxx_hidden_Signature                      []byte                      `protobuf:"bytes,3,opt,name=signature"`
	XXX_raceDetectHookData                    protoimpl.RaceDetectHookData
	XXX_presence                              [1]uint32
	unknownFields                             protoimpl.UnknownFields
	sizeCache                                 protoimpl.SizeCache
}

func (x *VehicleUnitsUsed) Reset() {
	*x = VehicleUnitsUsed{}
	mi := &file_wayplatform_connect_tachograph_card_v1_vehicle_units_used_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VehicleUnitsUsed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleUnitsUsed) ProtoMessage() {}

func (x *VehicleUnitsUsed) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_card_v1_vehicle_units_used_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VehicleUnitsUsed) GetVehicleUnitPointerNewestRecord() int32 {
	if x != nil {
		return x.xxx_hidden_VehicleUnitPointerNewestRecord
	}
	return 0
}

func (x *VehicleUnitsUsed) GetRecords() []*VehicleUnitsUsed_Record {
	if x != nil {
		if x.xxx_hidden_Records != nil {
			return *x.xxx_hidden_Records
		}
	}
	return nil
}

func (x *VehicleUnitsUsed) GetSignature() []byte {
	if x != nil {
		return x.xxx_hidden_Signature
	}
	return nil
}

func (x *VehicleUnitsUsed) SetVehicleUnitPointerNewestRecord(v int32) {
	x.xxx_hidden_VehicleUnitPointerNewestRecord = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *VehicleUnitsUsed) SetRecords(v []*VehicleUnitsUsed_Record) {
	x.xxx_hidden_Records = &v
}

func (x *VehicleUnitsUsed) SetSignature(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Signature = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *VehicleUnitsUsed) HasVehicleUnitPointerNewestRecord() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *VehicleUnitsUsed) HasSignature() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *VehicleUnitsUsed) ClearVehicleUnitPointerNewestRecord() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_VehicleUnitPointerNewestRecord = 0
}

func (x *VehicleUnitsUsed) ClearSignature() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Signature = nil
}

type VehicleUnitsUsed_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Index of the last updated vehicle unit record.
	// Corresponds to `vehicleUnitPointerNewestRecord`.
	//
	// See Data Dictionary, Section 2.40.
	// ASN.1 Definition:
	//
	//	INTEGER(0..NoOfCardVehicleUnitRecords-1)
	VehicleUnitPointerNewestRecord *int32
	// The set of records for vehicle units used.
	// Corresponds to `cardVehicleUnitRecords`.
	Records []*VehicleUnitsUsed_Record
	// Digital signature for the EF_VehicleUnits_Used file content.
	//
	// See Data Dictionary, Section 2.149, `Signature`.
	// ASN.1 Definition:
	//
	//	Signature ::= OCTET STRING (SIZE(128 for Gen1))
	Signature []byte
}

func (b0 VehicleUnitsUsed_builder) Build() *VehicleUnitsUsed {
	m0 := &VehicleUnitsUsed{}
	b, x := &b0, m0
	_, _ = b, x
	if b.VehicleUnitPointerNewestRecord != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_VehicleUnitPointerNewestRecord = *b.VehicleUnitPointerNewestRecord
	}
	x.xxx_hidden_Records = &b.Records
	if b.Signature != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Signature = b.Signature
	}
	return m0
}

// Represents a record for a single vehicle unit that was used.
//
// The data type `CardVehicleUnitRecord` is specified in the Data Dictionary, Section 2.39.
//
// ASN.1 Definition:
//
//	CardVehicleUnitRecord ::= SEQUENCE {
//	    timeStamp TimeReal,
//	    manufacturerCode ManufacturerCode,
//	    deviceID OCTET STRING(SIZE(1)),
//	    vuSoftwareVersion VuSoftwareVersion
//	}
type VehicleUnitsUsed_Record struct {
	state                        protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Timestamp         *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp"`
	xxx_hidden_ManufacturerCode  int32                  `protobuf:"varint,2,opt,name=manufacturer_code,json=manufacturerCode"`
	xxx_hidden_DeviceId          int32                  `protobuf:"varint,3,opt,name=device_id,json=deviceId"`
	xxx_hidden_VuSoftwareVersion []byte                 `protobuf:"bytes,4,opt,name=vu_software_version,json=vuSoftwareVersion"`
	XXX_raceDetectHookData       protoimpl.RaceDetectHookData
	XXX_presence                 [1]uint32
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *VehicleUnitsUsed_Record) Reset() {
	*x = VehicleUnitsUsed_Record{}
	mi := &file_wayplatform_connect_tachograph_card_v1_vehicle_units_used_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VehicleUnitsUsed_Record) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleUnitsUsed_Record) ProtoMessage() {}

func (x *VehicleUnitsUsed_Record) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_card_v1_vehicle_units_used_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VehicleUnitsUsed_Record) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_Timestamp
	}
	return nil
}

func (x *VehicleUnitsUsed_Record) GetManufacturerCode() int32 {
	if x != nil {
		return x.xxx_hidden_ManufacturerCode
	}
	return 0
}

func (x *VehicleUnitsUsed_Record) GetDeviceId() int32 {
	if x != nil {
		return x.xxx_hidden_DeviceId
	}
	return 0
}

func (x *VehicleUnitsUsed_Record) GetVuSoftwareVersion() []byte {
	if x != nil {
		return x.xxx_hidden_VuSoftwareVersion
	}
	return nil
}

func (x *VehicleUnitsUsed_Record) SetTimestamp(v *timestamppb.Timestamp) {
	x.xxx_hidden_Timestamp = v
}

func (x *VehicleUnitsUsed_Record) SetManufacturerCode(v int32) {
	x.xxx_hidden_ManufacturerCode = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *VehicleUnitsUsed_Record) SetDeviceId(v int32) {
	x.xxx_hidden_DeviceId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *VehicleUnitsUsed_Record) SetVuSoftwareVersion(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_VuSoftwareVersion = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *VehicleUnitsUsed_Record) HasTimestamp() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Timestamp != nil
}

func (x *VehicleUnitsUsed_Record) HasManufacturerCode() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *VehicleUnitsUsed_Record) HasDeviceId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *VehicleUnitsUsed_Record) HasVuSoftwareVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *VehicleUnitsUsed_Record) ClearTimestamp() {
	x.xxx_hidden_Timestamp = nil
}

func (x *VehicleUnitsUsed_Record) ClearManufacturerCode() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ManufacturerCode = 0
}

func (x *VehicleUnitsUsed_Record) ClearDeviceId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_DeviceId = 0
}

func (x *VehicleUnitsUsed_Record) ClearVuSoftwareVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_VuSoftwareVersion = nil
}

type VehicleUnitsUsed_Record_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The beginning of the period of use of the vehicle unit.
	//
	// See Data Dictionary, Section 2.162, `TimeReal`.
	// ASN.1 Definition:
	//
	//	TimeReal ::= INTEGER (0..2^32-1)
	Timestamp *timestamppb.Timestamp
	// The code of the manufacturer of the Vehicle Unit.
	//
	// See Data Dictionary, Section 2.94, `ManufacturerCode`.
	// ASN.1 Definition:
	//
	//	ManufacturerCode ::= INTEGER(0..255)
	ManufacturerCode *int32
	// The manufacturer-specific identifier for the Vehicle Unit type.
	//
	// See Data Dictionary, Section 2.39, `deviceID`.
	// ASN.1 Definition:
	//
	//	OCTET STRING(SIZE(1))
	DeviceId *int32
	// The software version of the Vehicle Unit.
	//
	// See Data Dictionary, Section 2.226, `VuSoftwareVersion`.
	// ASN.1 Definition:
	//
	//	VuSoftwareVersion ::= OCTET STRING (SIZE(4))
	VuSoftwareVersion []byte
}

func (b0 VehicleUnitsUsed_Record_builder) Build() *VehicleUnitsUsed_Record {
	m0 := &VehicleUnitsUsed_Record{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Timestamp = b.Timestamp
	if b.ManufacturerCode != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_ManufacturerCode = *b.ManufacturerCode
	}
	if b.DeviceId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_DeviceId = *b.DeviceId
	}
	if b.VuSoftwareVersion != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_VuSoftwareVersion = b.VuSoftwareVersion
	}
	return m0
}

var File_wayplatform_connect_tachograph_card_v1_vehicle_units_used_proto protoreflect.FileDescriptor

const file_wayplatform_connect_tachograph_card_v1_vehicle_units_used_proto_rawDesc = "" +
	"\n" +
	"?wayplatform/connect/tachograph/card/v1/vehicle_units_used.proto\x12&wayplatform.connect.tachograph.card.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\x96\x03\n" +
	"\x10VehicleUnitsUsed\x12J\n" +
	"\"vehicle_unit_pointer_newest_record\x18\x01 \x01(\x05R\x1evehicleUnitPointerNewestRecord\x12Y\n" +
	"\arecords\x18\x02 \x03(\v2?.wayplatform.connect.tachograph.card.v1.VehicleUnitsUsed.RecordR\arecords\x12\x1c\n" +
	"\tsignature\x18\x03 \x01(\fR\tsignature\x1a\xbc\x01\n" +
	"\x06Record\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12+\n" +
	"\x11manufacturer_code\x18\x02 \x01(\x05R\x10manufacturerCode\x12\x1b\n" +
	"\tdevice_id\x18\x03 \x01(\x05R\bdeviceId\x12.\n" +
	"\x13vu_software_version\x18\x04 \x01(\fR\x11vuSoftwareVersionB\xe2\x02\n" +
	"*com.wayplatform.connect.tachograph.card.v1B\x15VehicleUnitsUsedProtoP\x01Z`github.com/way-platform/tachograph-go/proto/gen/go/wayplatform/connect/tachograph/card/v1;cardv1\xa2\x02\x04WCTC\xaa\x02&Wayplatform.Connect.Tachograph.Card.V1\xca\x02&Wayplatform\\Connect\\Tachograph\\Card\\V1\xe2\x022Wayplatform\\Connect\\Tachograph\\Card\\V1\\GPBMetadata\xea\x02*Wayplatform::Connect::Tachograph::Card::V1b\beditionsp\xe8\a"

var file_wayplatform_connect_tachograph_card_v1_vehicle_units_used_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_wayplatform_connect_tachograph_card_v1_vehicle_units_used_proto_goTypes = []any{
	(*VehicleUnitsUsed)(nil),        // 0: wayplatform.connect.tachograph.card.v1.VehicleUnitsUsed
	(*VehicleUnitsUsed_Record)(nil), // 1: wayplatform.connect.tachograph.card.v1.VehicleUnitsUsed.Record
	(*timestamppb.Timestamp)(nil),   // 2: google.protobuf.Timestamp
}
var file_wayplatform_connect_tachograph_card_v1_vehicle_units_used_proto_depIdxs = []int32{
	1, // 0: wayplatform.connect.tachograph.card.v1.VehicleUnitsUsed.records:type_name -> wayplatform.connect.tachograph.card.v1.VehicleUnitsUsed.Record
	2, // 1: wayplatform.connect.tachograph.card.v1.VehicleUnitsUsed.Record.timestamp:type_name -> google.protobuf.Timestamp
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_wayplatform_connect_tachograph_card_v1_vehicle_units_used_proto_init() }
func file_wayplatform_connect_tachograph_card_v1_vehicle_units_used_proto_init() {
	if File_wayplatform_connect_tachograph_card_v1_vehicle_units_used_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wayplatform_connect_tachograph_card_v1_vehicle_units_used_proto_rawDesc), len(file_wayplatform_connect_tachograph_card_v1_vehicle_units_used_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wayplatform_connect_tachograph_card_v1_vehicle_units_used_proto_goTypes,
		DependencyIndexes: file_wayplatform_connect_tachograph_card_v1_vehicle_units_used_proto_depIdxs,
		MessageInfos:      file_wayplatform_connect_tachograph_card_v1_vehicle_units_used_proto_msgTypes,
	}.Build()
	File_wayplatform_connect_tachograph_card_v1_vehicle_units_used_proto = out.File
	file_wayplatform_connect_tachograph_card_v1_vehicle_units_used_proto_goTypes = nil
	file_wayplatform_connect_tachograph_card_v1_vehicle_units_used_proto_depIdxs = nil
}
