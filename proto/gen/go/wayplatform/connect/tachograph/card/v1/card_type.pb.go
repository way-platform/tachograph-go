// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wayplatform/connect/tachograph/card/v1/card_type.proto

package cardv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CardType represents the type of a tachograph card, which determines its specific
// file layout and data access rights as defined in the EU regulations.
//
// See Data Dictionary, Section 2.67, `EquipmentType`.
//
// ASN.1 Specification:
//
//	EquipmentType ::= INTEGER (0..255)
type CardType int32

const (
	// Unspecified card type.
	CardType_CARD_TYPE_UNSPECIFIED CardType = 0
	// A driver card.
	// Corresponds to EquipmentType value 1.
	//
	// See Appendix 2, TCS_150 (Gen1) and TCS_154 (Gen2).
	//
	// Gen1 File Structure (DF_TACHOGRAPH):
	// -------------------------------------------------------------------------------------
	// | File Name                       | FID    | Structure   | Size      | Read AC         | Update AC       |
	// |---------------------------------|--------|-------------|-----------|-----------------|-----------------|
	// | EF Application_Identification   | 0501h  | Transparent | 10 bytes  | ALW             | NEV             |
	// | EF Card_Certificate             | C108h  | Transparent | 194 bytes | ALW             | NEV             |
	// | EF CA_Certificate               | C100h  | Transparent | 194 bytes | ALW             | NEV             |
	// | EF Identification               | 0520h  | Transparent | 143 bytes | SM-R-ENC-MAC-G1 | SM-C-MAC-G1     |
	// | EF Card_Download                | 050Eh  | Transparent | 4 bytes   | SM-R-ENC-MAC-G1 | SM-C-MAC-G1     |
	// | EF Driving_Licence_Info         | 0522h  | Transparent | 91 bytes  | SM-R-ENC-MAC-G1 | SM-C-MAC-G1     |
	// | EF Events_Data                  | 0502h  | Transparent | 864 bytes | SM-R-ENC-MAC-G1 | SM-C-MAC-G1     |
	// | EF Faults_Data                  | 0503h  | Transparent | 576 bytes | SM-R-ENC-MAC-G1 | SM-C-MAC-G1     |
	// | EF Driver_Activity_Data         | 0504h  | Transparent | 5548 bytes| SM-R-ENC-MAC-G1 | SM-C-MAC-G1     |
	// | EF Vehicles_Used                | 0505h  | Transparent | 1764 bytes| SM-R-ENC-MAC-G1 | SM-C-MAC-G1     |
	// | EF Places                       | 0506h  | Transparent | 462 bytes | SM-R-ENC-MAC-G1 | SM-C-MAC-G1     |
	// | EF Current_Usage                | 0507h  | Transparent | 19 bytes  | SM-R-ENC-MAC-G1 | SM-C-MAC-G1     |
	// | EF Control_Activity_Data        | 0508h  | Transparent | 46 bytes  | SM-R-ENC-MAC-G1 | SM-C-MAC-G1     |
	// | EF Specific_Conditions          | 0521h  | Transparent | 56 bytes  | SM-R-ENC-MAC-G1 | SM-C-MAC-G1     |
	// -------------------------------------------------------------------------------------
	CardType_DRIVER_CARD CardType = 1
	// A workshop card.
	// Corresponds to EquipmentType value 2.
	CardType_WORKSHOP_CARD CardType = 2
	// A control card.
	// Corresponds to EquipmentType value 3.
	CardType_CONTROL_CARD CardType = 3
	// A company card.
	// Corresponds to EquipmentType value 4.
	CardType_COMPANY_CARD CardType = 4
	// A simulated smart card for an external GNSS facility.
	// The numeric value corresponds to EquipmentType 5 (Manufacturing Card),
	// but it is used to represent a GNSS facility (EquipmentType 8).
	CardType_GNSS_SIMULATED_CARD CardType = 5
)

// Enum value maps for CardType.
var (
	CardType_name = map[int32]string{
		0: "CARD_TYPE_UNSPECIFIED",
		1: "DRIVER_CARD",
		2: "WORKSHOP_CARD",
		3: "CONTROL_CARD",
		4: "COMPANY_CARD",
		5: "GNSS_SIMULATED_CARD",
	}
	CardType_value = map[string]int32{
		"CARD_TYPE_UNSPECIFIED": 0,
		"DRIVER_CARD":           1,
		"WORKSHOP_CARD":         2,
		"CONTROL_CARD":          3,
		"COMPANY_CARD":          4,
		"GNSS_SIMULATED_CARD":   5,
	}
)

func (x CardType) Enum() *CardType {
	p := new(CardType)
	*p = x
	return p
}

func (x CardType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CardType) Descriptor() protoreflect.EnumDescriptor {
	return file_wayplatform_connect_tachograph_card_v1_card_type_proto_enumTypes[0].Descriptor()
}

func (CardType) Type() protoreflect.EnumType {
	return &file_wayplatform_connect_tachograph_card_v1_card_type_proto_enumTypes[0]
}

func (x CardType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

var File_wayplatform_connect_tachograph_card_v1_card_type_proto protoreflect.FileDescriptor

const file_wayplatform_connect_tachograph_card_v1_card_type_proto_rawDesc = "" +
	"\n" +
	"6wayplatform/connect/tachograph/card/v1/card_type.proto\x12&wayplatform.connect.tachograph.card.v1\x1a;wayplatform/connect/tachograph/card/v1/file_structure.proto*\xde\b\n" +
	"\bCardType\x12\x19\n" +
	"\x15CARD_TYPE_UNSPECIFIED\x10\x00\x12\xc6\x02\n" +
	"\vDRIVER_CARD\x10\x01\x1a\xb4\x02\xf2\xc7\x18\xaf\x02\b\x01\"\x04\b\x03\x10\x01\"\x04\b\x03\x10\x02\"\x04\b\x03\x10!\"\x06\b\x03\x10\x04(\x01\"\x06\b\x03\x10\x05(\x01\"X\b\x02\x18\x01\"\x04\b\x03\x10\x06\"\x04\b\x03\x10\"\"\x04\b\x03\x10%\"\x04\b\x03\x10\x14\"\x04\b\x03\x10\x13\"\x04\b\x03\x10\x15\"\x04\b\x03\x10\a\"\x04\b\x03\x10\b\"\x04\b\x03\x10\t\"\x04\b\x03\x10\n" +
	"\"\x04\b\x03\x10\v\"\x04\b\x03\x10\f\"\x04\b\x03\x10\r\"\x04\b\x03\x10\x16\"\xae\x01\b\x02\x18\x02\"\x04\b\x03\x10\x06\"\x04\b\x03\x10\"\"\x04\b\x03\x10$\"\x04\b\x03\x10%\"\x04\b\x03\x10&\"\x04\b\x03\x10\x14\"\x04\b\x03\x10\x13\"\x04\b\x03\x10\x15\"\x04\b\x03\x10\a\"\x04\b\x03\x10\b\"\x04\b\x03\x10\t\"\x04\b\x03\x10\n" +
	"\"\x04\b\x03\x10\v\"\x04\b\x03\x10\f\"\x04\b\x03\x10\r\"\x04\b\x03\x10\x16\"\x04\b\x03\x10\x17\"\x04\b\x03\x10\x12\"\x04\b\x03\x10\x18\"\x06\b\x03\x10\x19(\x01\"\x06\b\x03\x10\x1a(\x01\"\x06\b\x03\x10\x1b(\x01\"\x06\b\x03\x10\x1c(\x01\"\x06\b\x03\x10\x1d(\x01\"\x06\b\x03\x10\x1e(\x01\"\x06\b\x03\x10 (\x01\x12\xdc\x02\n" +
	"\rWORKSHOP_CARD\x10\x02\x1a\xc8\x02\xf2\xc7\x18\xc3\x02\b\x01\"\x04\b\x03\x10\x01\"\x04\b\x03\x10\x02\"\x04\b\x03\x10!\"\x06\b\x03\x10\x04(\x01\"\x06\b\x03\x10\x05(\x01\"^\b\x02\x18\x01\"\x04\b\x03\x10\x06\"\x04\b\x03\x10\"\"\x04\b\x03\x10%\"\x04\b\x03\x10\x14\"\x04\b\x03\x10\x0e\"\x04\b\x03\x10\x0f\"\x04\b\x03\x10\x10\"\x04\b\x03\x10\a\"\x04\b\x03\x10\b\"\x04\b\x03\x10\t\"\x04\b\x03\x10\n" +
	"\"\x04\b\x03\x10\v\"\x04\b\x03\x10\f\"\x04\b\x03\x10\r\"\x04\b\x03\x10\x16\"\xbc\x01\b\x02\x18\x02\"\x04\b\x03\x10\x06\"\x04\b\x03\x10\"\"\x04\b\x03\x10$\"\x04\b\x03\x10%\"\x04\b\x03\x10&\"\x04\b\x03\x10\x14\"\x04\b\x03\x10\x0e\"\x04\b\x03\x10\x0f\"\x04\b\x03\x10\x10\"\x04\b\x03\x10\a\"\x04\b\x03\x10\b\"\x04\b\x03\x10\t\"\x04\b\x03\x10\n" +
	"\"\x04\b\x03\x10\v\"\x04\b\x03\x10\f\"\x04\b\x03\x10\r\"\x04\b\x03\x10\x16\"\x04\b\x03\x10\x17\"\x04\b\x03\x10\x12\"\x04\b\x03\x10\x18\"\x06\b\x03\x10\x19(\x01\"\x06\b\x03\x10\x1a(\x01\"\x06\b\x03\x10\x1b(\x01\"\x06\b\x03\x10\x1c(\x01\"\x06\b\x03\x10\x1d(\x01\"\x06\b\x03\x10\x1e(\x01\"\x06\b\x03\x10\x1f(\x01\"\x06\b\x03\x10 (\x01\x12\xa0\x01\n" +
	"\fCONTROL_CARD\x10\x03\x1a\x8d\x01\xf2\xc7\x18\x88\x01\b\x01\"\x04\b\x03\x10\x01\"\x04\b\x03\x10\x02\"\x04\b\x03\x10!\"\x06\b\x03\x10\x04(\x01\"\x06\b\x03\x10\x05(\x01\"\"\b\x02\x18\x01\"\x04\b\x03\x10\x06\"\x04\b\x03\x10\"\"\x04\b\x03\x10%\"\x04\b\x03\x10\x14\"\x04\b\x03\x10\x11\">\b\x02\x18\x02\"\x04\b\x03\x10\x06\"\x04\b\x03\x10\"\"\x04\b\x03\x10$\"\x04\b\x03\x10%\"\x04\b\x03\x10&\"\x04\b\x03\x10\x14\"\x04\b\x03\x10\x11\"\x06\b\x03\x10\x19(\x01\"\x06\b\x03\x10 (\x01\x12\xa0\x01\n" +
	"\fCOMPANY_CARD\x10\x04\x1a\x8d\x01\xf2\xc7\x18\x88\x01\b\x01\"\x04\b\x03\x10\x01\"\x04\b\x03\x10\x02\"\x04\b\x03\x10!\"\x06\b\x03\x10\x04(\x01\"\x06\b\x03\x10\x05(\x01\"\"\b\x02\x18\x01\"\x04\b\x03\x10\x06\"\x04\b\x03\x10\"\"\x04\b\x03\x10%\"\x04\b\x03\x10\x14\"\x04\b\x03\x10\x12\">\b\x02\x18\x02\"\x04\b\x03\x10\x06\"\x04\b\x03\x10\"\"\x04\b\x03\x10$\"\x04\b\x03\x10%\"\x04\b\x03\x10&\"\x04\b\x03\x10\x14\"\x04\b\x03\x10\x12\"\x06\b\x03\x10\x19(\x01\"\x06\b\x03\x10 (\x01\x12I\n" +
	"\x13GNSS_SIMULATED_CARD\x10\x05\x1a0\xf2\xc7\x18,\b\x01\"\x04\b\x03\x10\x01\"\"\b\x02\x18\x03\"\x04\b\x03\x10\"\"\x04\b\x03\x10%\"\x04\b\x03\x10&\"\x04\b\x03\x10'\"\x04\b\x03\x10(B\xda\x02\n" +
	"*com.wayplatform.connect.tachograph.card.v1B\rCardTypeProtoP\x01Z`github.com/way-platform/tachograph-go/proto/gen/go/wayplatform/connect/tachograph/card/v1;cardv1\xa2\x02\x04WCTC\xaa\x02&Wayplatform.Connect.Tachograph.Card.V1\xca\x02&Wayplatform\\Connect\\Tachograph\\Card\\V1\xe2\x022Wayplatform\\Connect\\Tachograph\\Card\\V1\\GPBMetadata\xea\x02*Wayplatform::Connect::Tachograph::Card::V1b\beditionsp\xe8\a"

var file_wayplatform_connect_tachograph_card_v1_card_type_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_wayplatform_connect_tachograph_card_v1_card_type_proto_goTypes = []any{
	(CardType)(0), // 0: wayplatform.connect.tachograph.card.v1.CardType
}
var file_wayplatform_connect_tachograph_card_v1_card_type_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_wayplatform_connect_tachograph_card_v1_card_type_proto_init() }
func file_wayplatform_connect_tachograph_card_v1_card_type_proto_init() {
	if File_wayplatform_connect_tachograph_card_v1_card_type_proto != nil {
		return
	}
	file_wayplatform_connect_tachograph_card_v1_file_structure_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wayplatform_connect_tachograph_card_v1_card_type_proto_rawDesc), len(file_wayplatform_connect_tachograph_card_v1_card_type_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wayplatform_connect_tachograph_card_v1_card_type_proto_goTypes,
		DependencyIndexes: file_wayplatform_connect_tachograph_card_v1_card_type_proto_depIdxs,
		EnumInfos:         file_wayplatform_connect_tachograph_card_v1_card_type_proto_enumTypes,
	}.Build()
	File_wayplatform_connect_tachograph_card_v1_card_type_proto = out.File
	file_wayplatform_connect_tachograph_card_v1_card_type_proto_goTypes = nil
	file_wayplatform_connect_tachograph_card_v1_card_type_proto_depIdxs = nil
}
