// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wayplatform/connect/tachograph/card/v1/card_type.proto

package cardv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CardType represents the type of a tachograph card, which determines its specific
// file layout and data access rights as defined in the EU regulations.
type CardType int32

const (
	// Unspecified card type.
	CardType_CARD_TYPE_UNSPECIFIED CardType = 0
	// A driver card.
	CardType_DRIVER_CARD CardType = 1
	// A workshop card.
	CardType_WORKSHOP_CARD CardType = 2
	// A control card.
	CardType_CONTROL_CARD CardType = 3
	// A company card.
	CardType_COMPANY_CARD CardType = 4
	// A simulated smart card for an external GNSS facility.
	CardType_GNSS_SIMULATED_CARD CardType = 5
)

// Enum value maps for CardType.
var (
	CardType_name = map[int32]string{
		0: "CARD_TYPE_UNSPECIFIED",
		1: "DRIVER_CARD",
		2: "WORKSHOP_CARD",
		3: "CONTROL_CARD",
		4: "COMPANY_CARD",
		5: "GNSS_SIMULATED_CARD",
	}
	CardType_value = map[string]int32{
		"CARD_TYPE_UNSPECIFIED": 0,
		"DRIVER_CARD":           1,
		"WORKSHOP_CARD":         2,
		"CONTROL_CARD":          3,
		"COMPANY_CARD":          4,
		"GNSS_SIMULATED_CARD":   5,
	}
)

func (x CardType) Enum() *CardType {
	p := new(CardType)
	*p = x
	return p
}

func (x CardType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CardType) Descriptor() protoreflect.EnumDescriptor {
	return file_wayplatform_connect_tachograph_card_v1_card_type_proto_enumTypes[0].Descriptor()
}

func (CardType) Type() protoreflect.EnumType {
	return &file_wayplatform_connect_tachograph_card_v1_card_type_proto_enumTypes[0]
}

func (x CardType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

var File_wayplatform_connect_tachograph_card_v1_card_type_proto protoreflect.FileDescriptor

const file_wayplatform_connect_tachograph_card_v1_card_type_proto_rawDesc = "" +
	"\n" +
	"6wayplatform/connect/tachograph/card/v1/card_type.proto\x12&wayplatform.connect.tachograph.card.v1\x1a;wayplatform/connect/tachograph/card/v1/file_structure.proto*\xa0\x0e\n" +
	"\bCardType\x12\x19\n" +
	"\x15CARD_TYPE_UNSPECIFIED\x10\x00\x12\xb1\x04\n" +
	"\vDRIVER_CARD\x10\x01\x1a\x9f\x04\xf2\xc7\x18\x9a\x04\b\x01\"\b\b\x03\x10\x018\x01@\x02\"\b\b\x03\x10\x028\x01@\x02\"\n" +
	"\b\x03\x10!0\x1e8\x01@\x02\"\f\b\x03\x10\x04(\x010\x1d8\x01@\x02\"\f\b\x03\x10\x05(\x010\x1c8\x01@\x02\"\x94\x01\b\x02\x18\x01\"\b\b\x03\x10\x068\x04@\x02\"\b\b\x03\x10\"8\x04@\x02\"\b\b\x03\x10$8\x04@\x02\"\b\b\x03\x10\x148\x04@\x02\"\b\b\x03\x10\x138\x04@\x03\"\b\b\x03\x10\x158\x04@\x02\"\b\b\x03\x10\a8\x04@\x05\"\b\b\x03\x10\b8\x04@\x05\"\b\b\x03\x10\t8\x04@\x05\"\b\b\x03\x10\n" +
	"8\x04@\x05\"\b\b\x03\x10\v8\x04@\x05\"\b\b\x03\x10\f8\x04@\x05\"\b\b\x03\x10\r8\x04@\x05\"\b\b\x03\x10\x168\x04@\x058\x04@\x02\"\xc2\x02\b\x02\x18\x02\"\n" +
	"\b\x03\x10\x060\x018\x03@\x02\"\n" +
	"\b\x03\x10\"0\x028\x03@\x02\"\n" +
	"\b\x03\x10#0\x038\x03@\x02\"\n" +
	"\b\x03\x10$0\x048\x03@\x02\"\n" +
	"\b\x03\x10%0\x058\x03@\x02\"\n" +
	"\b\x03\x10\x140\x068\x03@\x02\"\n" +
	"\b\x03\x10\x130\a8\x03@\x03\"\n" +
	"\b\x03\x10\x150\n" +
	"8\x03@\x02\"\n" +
	"\b\x03\x10\a0\f8\x03@\n" +
	"\"\n" +
	"\b\x03\x10\b0\r8\x03@\n" +
	"\"\n" +
	"\b\x03\x10\t0\x0e8\x03@\n" +
	"\"\n" +
	"\b\x03\x10\n" +
	"0\x0f8\x03@\n" +
	"\"\n" +
	"\b\x03\x10\v0\x108\x03@\n" +
	"\"\n" +
	"\b\x03\x10\f0\x118\x03@\n" +
	"\"\n" +
	"\b\x03\x10\r0\x128\x03@\n" +
	"\"\n" +
	"\b\x03\x10\x160\x138\x03@\n" +
	"\"\n" +
	"\b\x03\x10\x170\x148\x03@\n" +
	"\"\n" +
	"\b\x03\x10\x180\x158\x03@\n" +
	"\"\f\b\x03\x10\x19(\x010\x168\x03@\x02\"\f\b\x03\x10\x1a(\x010\x178\x03@\n" +
	"\"\f\b\x03\x10\x1b(\x010\x188\x03@\n" +
	"\"\f\b\x03\x10\x1c(\x010\x198\x03@\n" +
	"\"\f\b\x03\x10\x1d(\x010\x1a8\x03@\n" +
	"\"\f\b\x03\x10\x1e(\x010\x1b8\x03@\n" +
	"\"\f\b\x03\x10 (\x010\x1e8\a@\n" +
	"8\x03@\x02\x12\xd7\x04\n" +
	"\rWORKSHOP_CARD\x10\x02\x1a\xc3\x04\xf2\xc7\x18\xbe\x04\b\x01\"\b\b\x03\x10\x018\x01@\x02\"\b\b\x03\x10\x028\x01@\x02\"\n" +
	"\b\x03\x10!0\x1e8\x01@\x02\"\f\b\x03\x10\x04(\x010\x1d8\x01@\x02\"\f\b\x03\x10\x05(\x010\x1c8\x01@\x02\"\x9e\x01\b\x02\x18\x01\"\b\b\x03\x10\x068\x04@\x02\"\b\b\x03\x10\"8\x04@\x02\"\b\b\x03\x10$8\x04@\x02\"\b\b\x03\x10\x148\x04@\x02\"\b\b\x03\x10\x0e8\x04@\x03\"\b\b\x03\x10\x0f8\x04@\x05\"\b\b\x03\x10\x108\x06@\x02\"\b\b\x03\x10\a8\x04@\x05\"\b\b\x03\x10\b8\x04@\x05\"\b\b\x03\x10\t8\x04@\x05\"\b\b\x03\x10\n" +
	"8\x04@\x05\"\b\b\x03\x10\v8\x04@\x05\"\b\b\x03\x10\f8\x04@\x05\"\b\b\x03\x10\r8\x04@\x05\"\b\b\x03\x10\x168\x04@\x058\x04@\x02\"\xdc\x02\b\x02\x18\x02\"\n" +
	"\b\x03\x10\x060\x018\x03@\x02\"\n" +
	"\b\x03\x10\"0\x028\x03@\x02\"\n" +
	"\b\x03\x10#0\x038\x03@\x02\"\n" +
	"\b\x03\x10$0\x048\x03@\x02\"\n" +
	"\b\x03\x10%0\x058\x03@\x02\"\n" +
	"\b\x03\x10\x140\x068\x03@\x02\"\n" +
	"\b\x03\x10\x0e0\a8\x03@\x03\"\n" +
	"\b\x03\x10\x0f0\n" +
	"8\x03@\n" +
	"\"\n" +
	"\b\x03\x10\x100\v8\a@\x02\"\n" +
	"\b\x03\x10\a0\f8\x03@\n" +
	"\"\n" +
	"\b\x03\x10\b0\r8\x03@\n" +
	"\"\n" +
	"\b\x03\x10\t0\x0e8\x03@\n" +
	"\"\n" +
	"\b\x03\x10\n" +
	"0\x0f8\x03@\n" +
	"\"\n" +
	"\b\x03\x10\v0\x108\x03@\n" +
	"\"\n" +
	"\b\x03\x10\f0\x118\x03@\n" +
	"\"\n" +
	"\b\x03\x10\r0\x128\x03@\n" +
	"\"\n" +
	"\b\x03\x10\x160\x138\x03@\n" +
	"\"\n" +
	"\b\x03\x10\x170\x148\x03@\n" +
	"\"\n" +
	"\b\x03\x10\x180\x158\x03@\n" +
	"\"\f\b\x03\x10\x19(\x010\x168\x03@\x02\"\f\b\x03\x10\x1a(\x010\x178\x03@\n" +
	"\"\f\b\x03\x10\x1b(\x010\x188\x03@\n" +
	"\"\f\b\x03\x10\x1c(\x010\x198\x03@\n" +
	"\"\f\b\x03\x10\x1d(\x010\x1a8\x03@\n" +
	"\"\f\b\x03\x10\x1e(\x010\x1b8\x03@\n" +
	"\"\f\b\x03\x10\x1f(\x010\x1c8\x03@\n" +
	"\"\f\b\x03\x10 (\x010\x1e8\a@\n" +
	"8\x03@\x02\x12\x80\x02\n" +
	"\fCONTROL_CARD\x10\x03\x1a\xed\x01\xf2\xc7\x18\xe8\x01\b\x01\"\b\b\x03\x10\x018\x01@\x02\"\b\b\x03\x10\x028\x01@\x02\"\n" +
	"\b\x03\x10!0\x1e8\x01@\x02\"\f\b\x03\x10\x04(\x010\x1d8\x01@\x02\"\f\b\x03\x10\x05(\x010\x1c8\x01@\x02\":\b\x02\x18\x01\"\b\b\x03\x10\x068\x04@\x02\"\b\b\x03\x10\"8\x04@\x02\"\b\b\x03\x10$8\x04@\x02\"\b\b\x03\x10\x148\b@\x02\"\b\b\x03\x10\x118\x04@\x058\x04@\x02\"l\b\x02\x18\x02\"\n" +
	"\b\x03\x10\x060\x018\x03@\x02\"\n" +
	"\b\x03\x10\"0\x028\x03@\x02\"\n" +
	"\b\x03\x10$0\x048\x03@\x02\"\n" +
	"\b\x03\x10%0\x058\x03@\x02\"\n" +
	"\b\x03\x10\x140\x068\x03@\x02\"\n" +
	"\b\x03\x10\x110\x0e8\x03@\n" +
	"\"\f\b\x03\x10\x19(\x010\x168\x03@\x02\"\f\b\x03\x10 (\x010\x1e8\a@\n" +
	"8\x03@\x02\x12\x80\x02\n" +
	"\fCOMPANY_CARD\x10\x04\x1a\xed\x01\xf2\xc7\x18\xe8\x01\b\x01\"\b\b\x03\x10\x018\x01@\x02\"\b\b\x03\x10\x028\x01@\x02\"\n" +
	"\b\x03\x10!0\x1e8\x01@\x02\"\f\b\x03\x10\x04(\x010\x1d8\x01@\x02\"\f\b\x03\x10\x05(\x010\x1c8\x01@\x02\":\b\x02\x18\x01\"\b\b\x03\x10\x068\x04@\x02\"\b\b\x03\x10\"8\x04@\x02\"\b\b\x03\x10$8\x04@\x02\"\b\b\x03\x10\x148\b@\x02\"\b\b\x03\x10\x128\x04@\x058\x04@\x02\"l\b\x02\x18\x02\"\n" +
	"\b\x03\x10\x060\x018\x03@\x02\"\n" +
	"\b\x03\x10\"0\x028\x03@\x02\"\n" +
	"\b\x03\x10$0\x048\x03@\x02\"\n" +
	"\b\x03\x10%0\x058\x03@\x02\"\n" +
	"\b\x03\x10\x140\x068\x03@\x02\"\n" +
	"\b\x03\x10\x120\x0e8\x03@\n" +
	"\"\f\b\x03\x10\x19(\x010\x168\x03@\x02\"\f\b\x03\x10 (\x010\x1e8\a@\n" +
	"8\x03@\x02\x12e\n" +
	"\x13GNSS_SIMULATED_CARD\x10\x05\x1aL\xf2\xc7\x18H\b\x01\"\b\b\x03\x10\x018\x01@\x02\":\b\x02\x18\x03\"\b\b\x03\x10\"8\x01@\x02\"\b\b\x03\x10$8\x01@\x02\"\b\b\x03\x10%8\x01@\x02\"\b\b\x03\x10&8\n" +
	"@\x02\"\b\b\x03\x10'8\n" +
	"@\n" +
	"8\x01@\x02B\xda\x02\n" +
	"*com.wayplatform.connect.tachograph.card.v1B\rCardTypeProtoP\x01Z`github.com/way-platform/tachograph-go/proto/gen/go/wayplatform/connect/tachograph/card/v1;cardv1\xa2\x02\x04WCTC\xaa\x02&Wayplatform.Connect.Tachograph.Card.V1\xca\x02&Wayplatform\\Connect\\Tachograph\\Card\\V1\xe2\x022Wayplatform\\Connect\\Tachograph\\Card\\V1\\GPBMetadata\xea\x02*Wayplatform::Connect::Tachograph::Card::V1b\beditionsp\xe8\a"

var file_wayplatform_connect_tachograph_card_v1_card_type_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_wayplatform_connect_tachograph_card_v1_card_type_proto_goTypes = []any{
	(CardType)(0), // 0: wayplatform.connect.tachograph.card.v1.CardType
}
var file_wayplatform_connect_tachograph_card_v1_card_type_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_wayplatform_connect_tachograph_card_v1_card_type_proto_init() }
func file_wayplatform_connect_tachograph_card_v1_card_type_proto_init() {
	if File_wayplatform_connect_tachograph_card_v1_card_type_proto != nil {
		return
	}
	file_wayplatform_connect_tachograph_card_v1_file_structure_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wayplatform_connect_tachograph_card_v1_card_type_proto_rawDesc), len(file_wayplatform_connect_tachograph_card_v1_card_type_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wayplatform_connect_tachograph_card_v1_card_type_proto_goTypes,
		DependencyIndexes: file_wayplatform_connect_tachograph_card_v1_card_type_proto_depIdxs,
		EnumInfos:         file_wayplatform_connect_tachograph_card_v1_card_type_proto_enumTypes,
	}.Build()
	File_wayplatform_connect_tachograph_card_v1_card_type_proto = out.File
	file_wayplatform_connect_tachograph_card_v1_card_type_proto_goTypes = nil
	file_wayplatform_connect_tachograph_card_v1_card_type_proto_depIdxs = nil
}
