// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wayplatform/connect/tachograph/card/v1/icc.proto

package cardv1

import (
	v1 "github.com/way-platform/tachograph-go/proto/gen/go/wayplatform/connect/tachograph/dd/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents the content of the EF_ICC file, which contains identification data
// for the Integrated Circuit Card.
//
// The file structure is specified in Appendix 2, Section 4.1.
//
//	EF ICC
//	└─CardIccIdentification
//
// The data type `CardIccIdentification` is specified in the Data Dictionary, Section 2.23.
//
// ASN.1 Definition:
//
//	CardIccIdentification ::= SEQUENCE {
//	    clockStop OCTET STRING (SIZE(1)),
//	    cardExtendedSerialNumber ExtendedSerialNumber,
//	    cardApprovalNumber CardApprovalNumber,
//	    cardPersonaliserID ManufacturerCode,
//	    embedderIcAssemblerId EmbedderIcAssemblerId,
//	    icIdentifier OCTET STRING (SIZE(2))
//	}
type Icc struct {
	state                               protoimpl.MessageState     `protogen:"opaque.v1"`
	xxx_hidden_ClockStop                v1.ClockStopMode           `protobuf:"varint,1,opt,name=clock_stop,json=clockStop,enum=wayplatform.connect.tachograph.dd.v1.ClockStopMode"`
	xxx_hidden_CardExtendedSerialNumber *v1.ExtendedSerialNumber   `protobuf:"bytes,2,opt,name=card_extended_serial_number,json=cardExtendedSerialNumber"`
	xxx_hidden_CardApprovalNumber       *v1.Ia5StringValue         `protobuf:"bytes,3,opt,name=card_approval_number,json=cardApprovalNumber"`
	xxx_hidden_CardPersonaliserId       int32                      `protobuf:"varint,4,opt,name=card_personaliser_id,json=cardPersonaliserId"`
	xxx_hidden_EmbedderIcAssemblerId    *Icc_EmbedderIcAssemblerId `protobuf:"bytes,5,opt,name=embedder_ic_assembler_id,json=embedderIcAssemblerId"`
	xxx_hidden_IcIdentifier             []byte                     `protobuf:"bytes,6,opt,name=ic_identifier,json=icIdentifier"`
	XXX_raceDetectHookData              protoimpl.RaceDetectHookData
	XXX_presence                        [1]uint32
	unknownFields                       protoimpl.UnknownFields
	sizeCache                           protoimpl.SizeCache
}

func (x *Icc) Reset() {
	*x = Icc{}
	mi := &file_wayplatform_connect_tachograph_card_v1_icc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Icc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Icc) ProtoMessage() {}

func (x *Icc) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_card_v1_icc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Icc) GetClockStop() v1.ClockStopMode {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_ClockStop
		}
	}
	return v1.ClockStopMode(0)
}

func (x *Icc) GetCardExtendedSerialNumber() *v1.ExtendedSerialNumber {
	if x != nil {
		return x.xxx_hidden_CardExtendedSerialNumber
	}
	return nil
}

func (x *Icc) GetCardApprovalNumber() *v1.Ia5StringValue {
	if x != nil {
		return x.xxx_hidden_CardApprovalNumber
	}
	return nil
}

func (x *Icc) GetCardPersonaliserId() int32 {
	if x != nil {
		return x.xxx_hidden_CardPersonaliserId
	}
	return 0
}

func (x *Icc) GetEmbedderIcAssemblerId() *Icc_EmbedderIcAssemblerId {
	if x != nil {
		return x.xxx_hidden_EmbedderIcAssemblerId
	}
	return nil
}

func (x *Icc) GetIcIdentifier() []byte {
	if x != nil {
		return x.xxx_hidden_IcIdentifier
	}
	return nil
}

func (x *Icc) SetClockStop(v v1.ClockStopMode) {
	x.xxx_hidden_ClockStop = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *Icc) SetCardExtendedSerialNumber(v *v1.ExtendedSerialNumber) {
	x.xxx_hidden_CardExtendedSerialNumber = v
}

func (x *Icc) SetCardApprovalNumber(v *v1.Ia5StringValue) {
	x.xxx_hidden_CardApprovalNumber = v
}

func (x *Icc) SetCardPersonaliserId(v int32) {
	x.xxx_hidden_CardPersonaliserId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *Icc) SetEmbedderIcAssemblerId(v *Icc_EmbedderIcAssemblerId) {
	x.xxx_hidden_EmbedderIcAssemblerId = v
}

func (x *Icc) SetIcIdentifier(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_IcIdentifier = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *Icc) HasClockStop() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Icc) HasCardExtendedSerialNumber() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CardExtendedSerialNumber != nil
}

func (x *Icc) HasCardApprovalNumber() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CardApprovalNumber != nil
}

func (x *Icc) HasCardPersonaliserId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Icc) HasEmbedderIcAssemblerId() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_EmbedderIcAssemblerId != nil
}

func (x *Icc) HasIcIdentifier() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *Icc) ClearClockStop() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ClockStop = v1.ClockStopMode_CLOCK_STOP_MODE_UNSPECIFIED
}

func (x *Icc) ClearCardExtendedSerialNumber() {
	x.xxx_hidden_CardExtendedSerialNumber = nil
}

func (x *Icc) ClearCardApprovalNumber() {
	x.xxx_hidden_CardApprovalNumber = nil
}

func (x *Icc) ClearCardPersonaliserId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_CardPersonaliserId = 0
}

func (x *Icc) ClearEmbedderIcAssemblerId() {
	x.xxx_hidden_EmbedderIcAssemblerId = nil
}

func (x *Icc) ClearIcIdentifier() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_IcIdentifier = nil
}

type Icc_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The Clockstop mode.
	//
	// See Data Dictionary, Section 2.23, `clockStop`.
	// ASN.1 Definition:
	//
	//	OCTET STRING (SIZE(1))
	ClockStop *v1.ClockStopMode
	// The unique serial number of the IC card.
	//
	// See Data Dictionary, Section 2.72, `ExtendedSerialNumber`.
	CardExtendedSerialNumber *v1.ExtendedSerialNumber
	// The type approval number of the card.
	//
	// See Data Dictionary, Section 2.11, `CardApprovalNumber`.
	// ASN.1 Definition:
	//
	//	CardApprovalNumber ::= IA5String (SIZE (8))
	CardApprovalNumber *v1.Ia5StringValue
	// The ID of the card personaliser.
	//
	// See Data Dictionary, Section 2.94, `ManufacturerCode`.
	// ASN.1 Definition:
	//
	//	ManufacturerCode ::= INTEGER(0..255)
	CardPersonaliserId *int32
	// Information about the IC embedder and assembler.
	//
	// See Data Dictionary, Section 2.65, `EmbedderIcAssemblerId`.
	EmbedderIcAssemblerId *Icc_EmbedderIcAssemblerId
	// The Identifier of the IC on the card and its manufacturer.
	//
	// See Data Dictionary, Section 2.23, `icIdentifier`.
	// ASN.1 Definition:
	//
	//	OCTET STRING (SIZE(2))
	IcIdentifier []byte
}

func (b0 Icc_builder) Build() *Icc {
	m0 := &Icc{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ClockStop != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_ClockStop = *b.ClockStop
	}
	x.xxx_hidden_CardExtendedSerialNumber = b.CardExtendedSerialNumber
	x.xxx_hidden_CardApprovalNumber = b.CardApprovalNumber
	if b.CardPersonaliserId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_CardPersonaliserId = *b.CardPersonaliserId
	}
	x.xxx_hidden_EmbedderIcAssemblerId = b.EmbedderIcAssemblerId
	if b.IcIdentifier != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_IcIdentifier = b.IcIdentifier
	}
	return m0
}

// Represents information about the IC embedder.
//
// The data type `EmbedderIcAssemblerId` is specified in the Data Dictionary, Section 2.65.
//
// ASN.1 Definition:
//
//	EmbedderIcAssemblerId ::= SEQUENCE {
//	    countryCode IA5String(SIZE(2)),
//	    moduleEmbedder IA5String(SIZE(2)),
//	    manufacturerInformation INTEGER(0..255)
//	}
type Icc_EmbedderIcAssemblerId struct {
	state                              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_CountryCode             *v1.Ia5StringValue     `protobuf:"bytes,1,opt,name=country_code,json=countryCode"`
	xxx_hidden_ModuleEmbedder          *v1.Ia5StringValue     `protobuf:"bytes,2,opt,name=module_embedder,json=moduleEmbedder"`
	xxx_hidden_ManufacturerInformation int32                  `protobuf:"varint,3,opt,name=manufacturer_information,json=manufacturerInformation"`
	XXX_raceDetectHookData             protoimpl.RaceDetectHookData
	XXX_presence                       [1]uint32
	unknownFields                      protoimpl.UnknownFields
	sizeCache                          protoimpl.SizeCache
}

func (x *Icc_EmbedderIcAssemblerId) Reset() {
	*x = Icc_EmbedderIcAssemblerId{}
	mi := &file_wayplatform_connect_tachograph_card_v1_icc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Icc_EmbedderIcAssemblerId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Icc_EmbedderIcAssemblerId) ProtoMessage() {}

func (x *Icc_EmbedderIcAssemblerId) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_card_v1_icc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Icc_EmbedderIcAssemblerId) GetCountryCode() *v1.Ia5StringValue {
	if x != nil {
		return x.xxx_hidden_CountryCode
	}
	return nil
}

func (x *Icc_EmbedderIcAssemblerId) GetModuleEmbedder() *v1.Ia5StringValue {
	if x != nil {
		return x.xxx_hidden_ModuleEmbedder
	}
	return nil
}

func (x *Icc_EmbedderIcAssemblerId) GetManufacturerInformation() int32 {
	if x != nil {
		return x.xxx_hidden_ManufacturerInformation
	}
	return 0
}

func (x *Icc_EmbedderIcAssemblerId) SetCountryCode(v *v1.Ia5StringValue) {
	x.xxx_hidden_CountryCode = v
}

func (x *Icc_EmbedderIcAssemblerId) SetModuleEmbedder(v *v1.Ia5StringValue) {
	x.xxx_hidden_ModuleEmbedder = v
}

func (x *Icc_EmbedderIcAssemblerId) SetManufacturerInformation(v int32) {
	x.xxx_hidden_ManufacturerInformation = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *Icc_EmbedderIcAssemblerId) HasCountryCode() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CountryCode != nil
}

func (x *Icc_EmbedderIcAssemblerId) HasModuleEmbedder() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ModuleEmbedder != nil
}

func (x *Icc_EmbedderIcAssemblerId) HasManufacturerInformation() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Icc_EmbedderIcAssemblerId) ClearCountryCode() {
	x.xxx_hidden_CountryCode = nil
}

func (x *Icc_EmbedderIcAssemblerId) ClearModuleEmbedder() {
	x.xxx_hidden_ModuleEmbedder = nil
}

func (x *Icc_EmbedderIcAssemblerId) ClearManufacturerInformation() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ManufacturerInformation = 0
}

type Icc_EmbedderIcAssemblerId_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// 2-letter country code of the module embedder.
	//
	// See Data Dictionary, Section 2.65, `countryCode`.
	// ASN.1 Definition:
	//
	//	IA5String(SIZE(2))
	CountryCode *v1.Ia5StringValue
	// 2-character code identifying the module embedder.
	//
	// See Data Dictionary, Section 2.65, `moduleEmbedder`.
	// ASN.1 Definition:
	//
	//	IA5String(SIZE(2))
	ModuleEmbedder *v1.Ia5StringValue
	// Manufacturer-specific information.
	//
	// See Data Dictionary, Section 2.65, `manufacturerInformation`.
	// ASN.1 Definition:
	//
	//	INTEGER(0..255)
	ManufacturerInformation *int32
}

func (b0 Icc_EmbedderIcAssemblerId_builder) Build() *Icc_EmbedderIcAssemblerId {
	m0 := &Icc_EmbedderIcAssemblerId{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_CountryCode = b.CountryCode
	x.xxx_hidden_ModuleEmbedder = b.ModuleEmbedder
	if b.ManufacturerInformation != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_ManufacturerInformation = *b.ManufacturerInformation
	}
	return m0
}

var File_wayplatform_connect_tachograph_card_v1_icc_proto protoreflect.FileDescriptor

const file_wayplatform_connect_tachograph_card_v1_icc_proto_rawDesc = "" +
	"\n" +
	"0wayplatform/connect/tachograph/card/v1/icc.proto\x12&wayplatform.connect.tachograph.card.v1\x1a:wayplatform/connect/tachograph/dd/v1/clock_stop_mode.proto\x1aAwayplatform/connect/tachograph/dd/v1/extended_serial_number.proto\x1a;wayplatform/connect/tachograph/dd/v1/ia5_string_value.proto\"\x9c\x06\n" +
	"\x03Icc\x12R\n" +
	"\n" +
	"clock_stop\x18\x01 \x01(\x0e23.wayplatform.connect.tachograph.dd.v1.ClockStopModeR\tclockStop\x12y\n" +
	"\x1bcard_extended_serial_number\x18\x02 \x01(\v2:.wayplatform.connect.tachograph.dd.v1.ExtendedSerialNumberR\x18cardExtendedSerialNumber\x12f\n" +
	"\x14card_approval_number\x18\x03 \x01(\v24.wayplatform.connect.tachograph.dd.v1.Ia5StringValueR\x12cardApprovalNumber\x120\n" +
	"\x14card_personaliser_id\x18\x04 \x01(\x05R\x12cardPersonaliserId\x12z\n" +
	"\x18embedder_ic_assembler_id\x18\x05 \x01(\v2A.wayplatform.connect.tachograph.card.v1.Icc.EmbedderIcAssemblerIdR\x15embedderIcAssemblerId\x12#\n" +
	"\ric_identifier\x18\x06 \x01(\fR\ficIdentifier\x1a\x8a\x02\n" +
	"\x15EmbedderIcAssemblerId\x12W\n" +
	"\fcountry_code\x18\x01 \x01(\v24.wayplatform.connect.tachograph.dd.v1.Ia5StringValueR\vcountryCode\x12]\n" +
	"\x0fmodule_embedder\x18\x02 \x01(\v24.wayplatform.connect.tachograph.dd.v1.Ia5StringValueR\x0emoduleEmbedder\x129\n" +
	"\x18manufacturer_information\x18\x03 \x01(\x05R\x17manufacturerInformationB\xd5\x02\n" +
	"*com.wayplatform.connect.tachograph.card.v1B\bIccProtoP\x01Z`github.com/way-platform/tachograph-go/proto/gen/go/wayplatform/connect/tachograph/card/v1;cardv1\xa2\x02\x04WCTC\xaa\x02&Wayplatform.Connect.Tachograph.Card.V1\xca\x02&Wayplatform\\Connect\\Tachograph\\Card\\V1\xe2\x022Wayplatform\\Connect\\Tachograph\\Card\\V1\\GPBMetadata\xea\x02*Wayplatform::Connect::Tachograph::Card::V1b\beditionsp\xe8\a"

var file_wayplatform_connect_tachograph_card_v1_icc_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_wayplatform_connect_tachograph_card_v1_icc_proto_goTypes = []any{
	(*Icc)(nil),                       // 0: wayplatform.connect.tachograph.card.v1.Icc
	(*Icc_EmbedderIcAssemblerId)(nil), // 1: wayplatform.connect.tachograph.card.v1.Icc.EmbedderIcAssemblerId
	(v1.ClockStopMode)(0),             // 2: wayplatform.connect.tachograph.dd.v1.ClockStopMode
	(*v1.ExtendedSerialNumber)(nil),   // 3: wayplatform.connect.tachograph.dd.v1.ExtendedSerialNumber
	(*v1.Ia5StringValue)(nil),         // 4: wayplatform.connect.tachograph.dd.v1.Ia5StringValue
}
var file_wayplatform_connect_tachograph_card_v1_icc_proto_depIdxs = []int32{
	2, // 0: wayplatform.connect.tachograph.card.v1.Icc.clock_stop:type_name -> wayplatform.connect.tachograph.dd.v1.ClockStopMode
	3, // 1: wayplatform.connect.tachograph.card.v1.Icc.card_extended_serial_number:type_name -> wayplatform.connect.tachograph.dd.v1.ExtendedSerialNumber
	4, // 2: wayplatform.connect.tachograph.card.v1.Icc.card_approval_number:type_name -> wayplatform.connect.tachograph.dd.v1.Ia5StringValue
	1, // 3: wayplatform.connect.tachograph.card.v1.Icc.embedder_ic_assembler_id:type_name -> wayplatform.connect.tachograph.card.v1.Icc.EmbedderIcAssemblerId
	4, // 4: wayplatform.connect.tachograph.card.v1.Icc.EmbedderIcAssemblerId.country_code:type_name -> wayplatform.connect.tachograph.dd.v1.Ia5StringValue
	4, // 5: wayplatform.connect.tachograph.card.v1.Icc.EmbedderIcAssemblerId.module_embedder:type_name -> wayplatform.connect.tachograph.dd.v1.Ia5StringValue
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_wayplatform_connect_tachograph_card_v1_icc_proto_init() }
func file_wayplatform_connect_tachograph_card_v1_icc_proto_init() {
	if File_wayplatform_connect_tachograph_card_v1_icc_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wayplatform_connect_tachograph_card_v1_icc_proto_rawDesc), len(file_wayplatform_connect_tachograph_card_v1_icc_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wayplatform_connect_tachograph_card_v1_icc_proto_goTypes,
		DependencyIndexes: file_wayplatform_connect_tachograph_card_v1_icc_proto_depIdxs,
		MessageInfos:      file_wayplatform_connect_tachograph_card_v1_icc_proto_msgTypes,
	}.Build()
	File_wayplatform_connect_tachograph_card_v1_icc_proto = out.File
	file_wayplatform_connect_tachograph_card_v1_icc_proto_goTypes = nil
	file_wayplatform_connect_tachograph_card_v1_icc_proto_depIdxs = nil
}
