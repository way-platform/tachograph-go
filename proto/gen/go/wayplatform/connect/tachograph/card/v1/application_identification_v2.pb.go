// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wayplatform/connect/tachograph/card/v1/application_identification_v2.proto

package cardv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents data from EF_Application_Identification_V2, which contains
// additional capacity information for Gen2v2 cards.
//
// Corresponds to the `DriverCardApplicationIdentificationV2` data type.
// See Data Dictionary, Section 2.61a.
type ApplicationIdentificationV2 struct {
	state                                 protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_BorderCrossingRecordsCount int32                  `protobuf:"varint,1,opt,name=border_crossing_records_count,json=borderCrossingRecordsCount"`
	xxx_hidden_LoadUnloadRecordsCount     int32                  `protobuf:"varint,2,opt,name=load_unload_records_count,json=loadUnloadRecordsCount"`
	xxx_hidden_LoadTypeEntryRecordsCount  int32                  `protobuf:"varint,3,opt,name=load_type_entry_records_count,json=loadTypeEntryRecordsCount"`
	xxx_hidden_VuConfigurationLengthRange int32                  `protobuf:"varint,4,opt,name=vu_configuration_length_range,json=vuConfigurationLengthRange"`
	XXX_raceDetectHookData                protoimpl.RaceDetectHookData
	XXX_presence                          [1]uint32
	unknownFields                         protoimpl.UnknownFields
	sizeCache                             protoimpl.SizeCache
}

func (x *ApplicationIdentificationV2) Reset() {
	*x = ApplicationIdentificationV2{}
	mi := &file_wayplatform_connect_tachograph_card_v1_application_identification_v2_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationIdentificationV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationIdentificationV2) ProtoMessage() {}

func (x *ApplicationIdentificationV2) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_card_v1_application_identification_v2_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ApplicationIdentificationV2) GetBorderCrossingRecordsCount() int32 {
	if x != nil {
		return x.xxx_hidden_BorderCrossingRecordsCount
	}
	return 0
}

func (x *ApplicationIdentificationV2) GetLoadUnloadRecordsCount() int32 {
	if x != nil {
		return x.xxx_hidden_LoadUnloadRecordsCount
	}
	return 0
}

func (x *ApplicationIdentificationV2) GetLoadTypeEntryRecordsCount() int32 {
	if x != nil {
		return x.xxx_hidden_LoadTypeEntryRecordsCount
	}
	return 0
}

func (x *ApplicationIdentificationV2) GetVuConfigurationLengthRange() int32 {
	if x != nil {
		return x.xxx_hidden_VuConfigurationLengthRange
	}
	return 0
}

func (x *ApplicationIdentificationV2) SetBorderCrossingRecordsCount(v int32) {
	x.xxx_hidden_BorderCrossingRecordsCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *ApplicationIdentificationV2) SetLoadUnloadRecordsCount(v int32) {
	x.xxx_hidden_LoadUnloadRecordsCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *ApplicationIdentificationV2) SetLoadTypeEntryRecordsCount(v int32) {
	x.xxx_hidden_LoadTypeEntryRecordsCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *ApplicationIdentificationV2) SetVuConfigurationLengthRange(v int32) {
	x.xxx_hidden_VuConfigurationLengthRange = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *ApplicationIdentificationV2) HasBorderCrossingRecordsCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ApplicationIdentificationV2) HasLoadUnloadRecordsCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ApplicationIdentificationV2) HasLoadTypeEntryRecordsCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ApplicationIdentificationV2) HasVuConfigurationLengthRange() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ApplicationIdentificationV2) ClearBorderCrossingRecordsCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_BorderCrossingRecordsCount = 0
}

func (x *ApplicationIdentificationV2) ClearLoadUnloadRecordsCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_LoadUnloadRecordsCount = 0
}

func (x *ApplicationIdentificationV2) ClearLoadTypeEntryRecordsCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_LoadTypeEntryRecordsCount = 0
}

func (x *ApplicationIdentificationV2) ClearVuConfigurationLengthRange() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_VuConfigurationLengthRange = 0
}

type ApplicationIdentificationV2_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// See Data Dictionary, Section 2.61a, `noOfBorderCrossingRecords`.
	BorderCrossingRecordsCount *int32
	// See Data Dictionary, Section 2.61a, `noOfLoadUnloadRecords`.
	LoadUnloadRecordsCount *int32
	// See Data Dictionary, Section 2.61a, `noOfLoadTypeEntryRecords`.
	LoadTypeEntryRecordsCount *int32
	// See Data Dictionary, Section 2.61a, `vuConfigurationLengthRange`.
	VuConfigurationLengthRange *int32
}

func (b0 ApplicationIdentificationV2_builder) Build() *ApplicationIdentificationV2 {
	m0 := &ApplicationIdentificationV2{}
	b, x := &b0, m0
	_, _ = b, x
	if b.BorderCrossingRecordsCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_BorderCrossingRecordsCount = *b.BorderCrossingRecordsCount
	}
	if b.LoadUnloadRecordsCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_LoadUnloadRecordsCount = *b.LoadUnloadRecordsCount
	}
	if b.LoadTypeEntryRecordsCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_LoadTypeEntryRecordsCount = *b.LoadTypeEntryRecordsCount
	}
	if b.VuConfigurationLengthRange != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_VuConfigurationLengthRange = *b.VuConfigurationLengthRange
	}
	return m0
}

var File_wayplatform_connect_tachograph_card_v1_application_identification_v2_proto protoreflect.FileDescriptor

const file_wayplatform_connect_tachograph_card_v1_application_identification_v2_proto_rawDesc = "" +
	"\n" +
	"Jwayplatform/connect/tachograph/card/v1/application_identification_v2.proto\x12&wayplatform.connect.tachograph.card.v1\"\xa0\x02\n" +
	"\x1bApplicationIdentificationV2\x12A\n" +
	"\x1dborder_crossing_records_count\x18\x01 \x01(\x05R\x1aborderCrossingRecordsCount\x129\n" +
	"\x19load_unload_records_count\x18\x02 \x01(\x05R\x16loadUnloadRecordsCount\x12@\n" +
	"\x1dload_type_entry_records_count\x18\x03 \x01(\x05R\x19loadTypeEntryRecordsCount\x12A\n" +
	"\x1dvu_configuration_length_range\x18\x04 \x01(\x05R\x1avuConfigurationLengthRangeB\xed\x02\n" +
	"*com.wayplatform.connect.tachograph.card.v1B ApplicationIdentificationV2ProtoP\x01Z`github.com/way-platform/tachograph-go/proto/gen/go/wayplatform/connect/tachograph/card/v1;cardv1\xa2\x02\x04WCTC\xaa\x02&Wayplatform.Connect.Tachograph.Card.V1\xca\x02&Wayplatform\\Connect\\Tachograph\\Card\\V1\xe2\x022Wayplatform\\Connect\\Tachograph\\Card\\V1\\GPBMetadata\xea\x02*Wayplatform::Connect::Tachograph::Card::V1b\beditionsp\xe8\a"

var file_wayplatform_connect_tachograph_card_v1_application_identification_v2_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_wayplatform_connect_tachograph_card_v1_application_identification_v2_proto_goTypes = []any{
	(*ApplicationIdentificationV2)(nil), // 0: wayplatform.connect.tachograph.card.v1.ApplicationIdentificationV2
}
var file_wayplatform_connect_tachograph_card_v1_application_identification_v2_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_wayplatform_connect_tachograph_card_v1_application_identification_v2_proto_init() }
func file_wayplatform_connect_tachograph_card_v1_application_identification_v2_proto_init() {
	if File_wayplatform_connect_tachograph_card_v1_application_identification_v2_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wayplatform_connect_tachograph_card_v1_application_identification_v2_proto_rawDesc), len(file_wayplatform_connect_tachograph_card_v1_application_identification_v2_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wayplatform_connect_tachograph_card_v1_application_identification_v2_proto_goTypes,
		DependencyIndexes: file_wayplatform_connect_tachograph_card_v1_application_identification_v2_proto_depIdxs,
		MessageInfos:      file_wayplatform_connect_tachograph_card_v1_application_identification_v2_proto_msgTypes,
	}.Build()
	File_wayplatform_connect_tachograph_card_v1_application_identification_v2_proto = out.File
	file_wayplatform_connect_tachograph_card_v1_application_identification_v2_proto_goTypes = nil
	file_wayplatform_connect_tachograph_card_v1_application_identification_v2_proto_depIdxs = nil
}
