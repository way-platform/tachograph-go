// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wayplatform/connect/tachograph/card/v1/vehicles_used.proto

package cardv1

import (
	_ "github.com/way-platform/tachograph-go/proto/gen/go/wayplatform/connect/tachograph/vu/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents data from EF_Vehicles_Used.
//
// Corresponds to the `CardVehiclesUsed` data type in the specification.
// See Data Dictionary, Section 2.38.
type VehiclesUsed struct {
	state                        protoimpl.MessageState  `protogen:"opaque.v1"`
	xxx_hidden_NewestRecordIndex int32                   `protobuf:"varint,1,opt,name=newest_record_index,json=newestRecordIndex"`
	xxx_hidden_Records           *[]*VehiclesUsed_Record `protobuf:"bytes,2,rep,name=records"`
	XXX_raceDetectHookData       protoimpl.RaceDetectHookData
	XXX_presence                 [1]uint32
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *VehiclesUsed) Reset() {
	*x = VehiclesUsed{}
	mi := &file_wayplatform_connect_tachograph_card_v1_vehicles_used_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VehiclesUsed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehiclesUsed) ProtoMessage() {}

func (x *VehiclesUsed) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_card_v1_vehicles_used_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VehiclesUsed) GetNewestRecordIndex() int32 {
	if x != nil {
		return x.xxx_hidden_NewestRecordIndex
	}
	return 0
}

func (x *VehiclesUsed) GetRecords() []*VehiclesUsed_Record {
	if x != nil {
		if x.xxx_hidden_Records != nil {
			return *x.xxx_hidden_Records
		}
	}
	return nil
}

func (x *VehiclesUsed) SetNewestRecordIndex(v int32) {
	x.xxx_hidden_NewestRecordIndex = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *VehiclesUsed) SetRecords(v []*VehiclesUsed_Record) {
	x.xxx_hidden_Records = &v
}

func (x *VehiclesUsed) HasNewestRecordIndex() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *VehiclesUsed) ClearNewestRecordIndex() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_NewestRecordIndex = 0
}

type VehiclesUsed_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Index of the last updated vehicle record.
	NewestRecordIndex *int32
	// The set of records for vehicles used.
	Records []*VehiclesUsed_Record
}

func (b0 VehiclesUsed_builder) Build() *VehiclesUsed {
	m0 := &VehiclesUsed{}
	b, x := &b0, m0
	_, _ = b, x
	if b.NewestRecordIndex != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_NewestRecordIndex = *b.NewestRecordIndex
	}
	x.xxx_hidden_Records = &b.Records
	return m0
}

// Represents a record for a single period of use of a vehicle.
//
// Corresponds to the `CardVehicleRecord` data type.
// See Data Dictionary, Section 2.37.
type VehiclesUsed_Record struct {
	state                                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_VehicleOdometerBeginKm      int32                  `protobuf:"varint,1,opt,name=vehicle_odometer_begin_km,json=vehicleOdometerBeginKm"`
	xxx_hidden_VehicleOdometerEndKm        int32                  `protobuf:"varint,2,opt,name=vehicle_odometer_end_km,json=vehicleOdometerEndKm"`
	xxx_hidden_VehicleFirstUse             *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=vehicle_first_use,json=vehicleFirstUse"`
	xxx_hidden_VehicleLastUse              *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=vehicle_last_use,json=vehicleLastUse"`
	xxx_hidden_VehicleRegistrationNation   *string                `protobuf:"bytes,5,opt,name=vehicle_registration_nation,json=vehicleRegistrationNation"`
	xxx_hidden_VehicleRegistrationNumber   *string                `protobuf:"bytes,6,opt,name=vehicle_registration_number,json=vehicleRegistrationNumber"`
	xxx_hidden_VuDataBlockCounter          int32                  `protobuf:"varint,7,opt,name=vu_data_block_counter,json=vuDataBlockCounter"`
	xxx_hidden_VehicleIdentificationNumber *string                `protobuf:"bytes,8,opt,name=vehicle_identification_number,json=vehicleIdentificationNumber"`
	XXX_raceDetectHookData                 protoimpl.RaceDetectHookData
	XXX_presence                           [1]uint32
	unknownFields                          protoimpl.UnknownFields
	sizeCache                              protoimpl.SizeCache
}

func (x *VehiclesUsed_Record) Reset() {
	*x = VehiclesUsed_Record{}
	mi := &file_wayplatform_connect_tachograph_card_v1_vehicles_used_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VehiclesUsed_Record) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehiclesUsed_Record) ProtoMessage() {}

func (x *VehiclesUsed_Record) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_card_v1_vehicles_used_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VehiclesUsed_Record) GetVehicleOdometerBeginKm() int32 {
	if x != nil {
		return x.xxx_hidden_VehicleOdometerBeginKm
	}
	return 0
}

func (x *VehiclesUsed_Record) GetVehicleOdometerEndKm() int32 {
	if x != nil {
		return x.xxx_hidden_VehicleOdometerEndKm
	}
	return 0
}

func (x *VehiclesUsed_Record) GetVehicleFirstUse() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_VehicleFirstUse
	}
	return nil
}

func (x *VehiclesUsed_Record) GetVehicleLastUse() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_VehicleLastUse
	}
	return nil
}

func (x *VehiclesUsed_Record) GetVehicleRegistrationNation() string {
	if x != nil {
		if x.xxx_hidden_VehicleRegistrationNation != nil {
			return *x.xxx_hidden_VehicleRegistrationNation
		}
		return ""
	}
	return ""
}

func (x *VehiclesUsed_Record) GetVehicleRegistrationNumber() string {
	if x != nil {
		if x.xxx_hidden_VehicleRegistrationNumber != nil {
			return *x.xxx_hidden_VehicleRegistrationNumber
		}
		return ""
	}
	return ""
}

func (x *VehiclesUsed_Record) GetVuDataBlockCounter() int32 {
	if x != nil {
		return x.xxx_hidden_VuDataBlockCounter
	}
	return 0
}

func (x *VehiclesUsed_Record) GetVehicleIdentificationNumber() string {
	if x != nil {
		if x.xxx_hidden_VehicleIdentificationNumber != nil {
			return *x.xxx_hidden_VehicleIdentificationNumber
		}
		return ""
	}
	return ""
}

func (x *VehiclesUsed_Record) SetVehicleOdometerBeginKm(v int32) {
	x.xxx_hidden_VehicleOdometerBeginKm = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 8)
}

func (x *VehiclesUsed_Record) SetVehicleOdometerEndKm(v int32) {
	x.xxx_hidden_VehicleOdometerEndKm = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 8)
}

func (x *VehiclesUsed_Record) SetVehicleFirstUse(v *timestamppb.Timestamp) {
	x.xxx_hidden_VehicleFirstUse = v
}

func (x *VehiclesUsed_Record) SetVehicleLastUse(v *timestamppb.Timestamp) {
	x.xxx_hidden_VehicleLastUse = v
}

func (x *VehiclesUsed_Record) SetVehicleRegistrationNation(v string) {
	x.xxx_hidden_VehicleRegistrationNation = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 8)
}

func (x *VehiclesUsed_Record) SetVehicleRegistrationNumber(v string) {
	x.xxx_hidden_VehicleRegistrationNumber = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 8)
}

func (x *VehiclesUsed_Record) SetVuDataBlockCounter(v int32) {
	x.xxx_hidden_VuDataBlockCounter = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 8)
}

func (x *VehiclesUsed_Record) SetVehicleIdentificationNumber(v string) {
	x.xxx_hidden_VehicleIdentificationNumber = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 8)
}

func (x *VehiclesUsed_Record) HasVehicleOdometerBeginKm() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *VehiclesUsed_Record) HasVehicleOdometerEndKm() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *VehiclesUsed_Record) HasVehicleFirstUse() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_VehicleFirstUse != nil
}

func (x *VehiclesUsed_Record) HasVehicleLastUse() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_VehicleLastUse != nil
}

func (x *VehiclesUsed_Record) HasVehicleRegistrationNation() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *VehiclesUsed_Record) HasVehicleRegistrationNumber() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *VehiclesUsed_Record) HasVuDataBlockCounter() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *VehiclesUsed_Record) HasVehicleIdentificationNumber() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *VehiclesUsed_Record) ClearVehicleOdometerBeginKm() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_VehicleOdometerBeginKm = 0
}

func (x *VehiclesUsed_Record) ClearVehicleOdometerEndKm() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_VehicleOdometerEndKm = 0
}

func (x *VehiclesUsed_Record) ClearVehicleFirstUse() {
	x.xxx_hidden_VehicleFirstUse = nil
}

func (x *VehiclesUsed_Record) ClearVehicleLastUse() {
	x.xxx_hidden_VehicleLastUse = nil
}

func (x *VehiclesUsed_Record) ClearVehicleRegistrationNation() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_VehicleRegistrationNation = nil
}

func (x *VehiclesUsed_Record) ClearVehicleRegistrationNumber() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_VehicleRegistrationNumber = nil
}

func (x *VehiclesUsed_Record) ClearVuDataBlockCounter() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_VuDataBlockCounter = 0
}

func (x *VehiclesUsed_Record) ClearVehicleIdentificationNumber() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_VehicleIdentificationNumber = nil
}

type VehiclesUsed_Record_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Odometer value at the beginning of the period. See DD Section 2.113.
	VehicleOdometerBeginKm *int32
	// Odometer value at the end of the period. See DD Section 2.113.
	VehicleOdometerEndKm *int32
	// Timestamp for the beginning of the period. See DD Section 2.162.
	VehicleFirstUse *timestamppb.Timestamp
	// Timestamp for the end of the period. See DD Section 2.162.
	VehicleLastUse *timestamppb.Timestamp
	// Nation of the vehicle's registration. See DD Section 2.166.
	VehicleRegistrationNation *string
	// Vehicle's registration number. See DD Section 2.166.
	VehicleRegistrationNumber *string
	// VU data block counter at last extraction. See DD Section 2.189.
	VuDataBlockCounter *int32
	// Gen2+ field: Vehicle Identification Number. See DD Section 2.164.
	VehicleIdentificationNumber *string
}

func (b0 VehiclesUsed_Record_builder) Build() *VehiclesUsed_Record {
	m0 := &VehiclesUsed_Record{}
	b, x := &b0, m0
	_, _ = b, x
	if b.VehicleOdometerBeginKm != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 8)
		x.xxx_hidden_VehicleOdometerBeginKm = *b.VehicleOdometerBeginKm
	}
	if b.VehicleOdometerEndKm != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 8)
		x.xxx_hidden_VehicleOdometerEndKm = *b.VehicleOdometerEndKm
	}
	x.xxx_hidden_VehicleFirstUse = b.VehicleFirstUse
	x.xxx_hidden_VehicleLastUse = b.VehicleLastUse
	if b.VehicleRegistrationNation != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 8)
		x.xxx_hidden_VehicleRegistrationNation = b.VehicleRegistrationNation
	}
	if b.VehicleRegistrationNumber != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 8)
		x.xxx_hidden_VehicleRegistrationNumber = b.VehicleRegistrationNumber
	}
	if b.VuDataBlockCounter != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 8)
		x.xxx_hidden_VuDataBlockCounter = *b.VuDataBlockCounter
	}
	if b.VehicleIdentificationNumber != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 8)
		x.xxx_hidden_VehicleIdentificationNumber = b.VehicleIdentificationNumber
	}
	return m0
}

var File_wayplatform_connect_tachograph_card_v1_vehicles_used_proto protoreflect.FileDescriptor

const file_wayplatform_connect_tachograph_card_v1_vehicles_used_proto_rawDesc = "" +
	"\n" +
	":wayplatform/connect/tachograph/card/v1/vehicles_used.proto\x12&wayplatform.connect.tachograph.card.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a5wayplatform/connect/tachograph/vu/v1/versioning.proto\"\x97\x05\n" +
	"\fVehiclesUsed\x12.\n" +
	"\x13newest_record_index\x18\x01 \x01(\x05R\x11newestRecordIndex\x12U\n" +
	"\arecords\x18\x02 \x03(\v2;.wayplatform.connect.tachograph.card.v1.VehiclesUsed.RecordR\arecords\x1a\xff\x03\n" +
	"\x06Record\x129\n" +
	"\x19vehicle_odometer_begin_km\x18\x01 \x01(\x05R\x16vehicleOdometerBeginKm\x125\n" +
	"\x17vehicle_odometer_end_km\x18\x02 \x01(\x05R\x14vehicleOdometerEndKm\x12F\n" +
	"\x11vehicle_first_use\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x0fvehicleFirstUse\x12D\n" +
	"\x10vehicle_last_use\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x0evehicleLastUse\x12>\n" +
	"\x1bvehicle_registration_nation\x18\x05 \x01(\tR\x19vehicleRegistrationNation\x12>\n" +
	"\x1bvehicle_registration_number\x18\x06 \x01(\tR\x19vehicleRegistrationNumber\x121\n" +
	"\x15vu_data_block_counter\x18\a \x01(\x05R\x12vuDataBlockCounter\x12B\n" +
	"\x1dvehicle_identification_number\x18\b \x01(\tR\x1bvehicleIdentificationNumberB\xde\x02\n" +
	"*com.wayplatform.connect.tachograph.card.v1B\x11VehiclesUsedProtoP\x01Z`github.com/way-platform/tachograph-go/proto/gen/go/wayplatform/connect/tachograph/card/v1;cardv1\xa2\x02\x04WCTC\xaa\x02&Wayplatform.Connect.Tachograph.Card.V1\xca\x02&Wayplatform\\Connect\\Tachograph\\Card\\V1\xe2\x022Wayplatform\\Connect\\Tachograph\\Card\\V1\\GPBMetadata\xea\x02*Wayplatform::Connect::Tachograph::Card::V1b\beditionsp\xe8\a"

var file_wayplatform_connect_tachograph_card_v1_vehicles_used_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_wayplatform_connect_tachograph_card_v1_vehicles_used_proto_goTypes = []any{
	(*VehiclesUsed)(nil),          // 0: wayplatform.connect.tachograph.card.v1.VehiclesUsed
	(*VehiclesUsed_Record)(nil),   // 1: wayplatform.connect.tachograph.card.v1.VehiclesUsed.Record
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
}
var file_wayplatform_connect_tachograph_card_v1_vehicles_used_proto_depIdxs = []int32{
	1, // 0: wayplatform.connect.tachograph.card.v1.VehiclesUsed.records:type_name -> wayplatform.connect.tachograph.card.v1.VehiclesUsed.Record
	2, // 1: wayplatform.connect.tachograph.card.v1.VehiclesUsed.Record.vehicle_first_use:type_name -> google.protobuf.Timestamp
	2, // 2: wayplatform.connect.tachograph.card.v1.VehiclesUsed.Record.vehicle_last_use:type_name -> google.protobuf.Timestamp
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_wayplatform_connect_tachograph_card_v1_vehicles_used_proto_init() }
func file_wayplatform_connect_tachograph_card_v1_vehicles_used_proto_init() {
	if File_wayplatform_connect_tachograph_card_v1_vehicles_used_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wayplatform_connect_tachograph_card_v1_vehicles_used_proto_rawDesc), len(file_wayplatform_connect_tachograph_card_v1_vehicles_used_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wayplatform_connect_tachograph_card_v1_vehicles_used_proto_goTypes,
		DependencyIndexes: file_wayplatform_connect_tachograph_card_v1_vehicles_used_proto_depIdxs,
		MessageInfos:      file_wayplatform_connect_tachograph_card_v1_vehicles_used_proto_msgTypes,
	}.Build()
	File_wayplatform_connect_tachograph_card_v1_vehicles_used_proto = out.File
	file_wayplatform_connect_tachograph_card_v1_vehicles_used_proto_goTypes = nil
	file_wayplatform_connect_tachograph_card_v1_vehicles_used_proto_depIdxs = nil
}
