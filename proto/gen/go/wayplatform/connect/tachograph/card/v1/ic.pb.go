// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wayplatform/connect/tachograph/card/v1/ic.proto

package cardv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents the content of the EF_IC file, which contains identification data
// for the integrated circuit chip.
//
// The file structure is specified in Appendix 2, Section 4.1.
//
//	EF IC
//	└─CardChipIdentification
//
// The data type `CardChipIdentification` is specified in the Data Dictionary, Section 2.13.
//
// ASN.1 Definition:
//
//	CardChipIdentification ::= SEQUENCE {
//	    icSerialNumber OCTET STRING (SIZE(4)),
//	    icManufacturingReferences OCTET STRING (SIZE(4))
//	}
type Ic struct {
	state                                protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_IcSerialNumber            *string                `protobuf:"bytes,1,opt,name=ic_serial_number,json=icSerialNumber"`
	xxx_hidden_IcManufacturingReferences *string                `protobuf:"bytes,2,opt,name=ic_manufacturing_references,json=icManufacturingReferences"`
	XXX_raceDetectHookData               protoimpl.RaceDetectHookData
	XXX_presence                         [1]uint32
	unknownFields                        protoimpl.UnknownFields
	sizeCache                            protoimpl.SizeCache
}

func (x *Ic) Reset() {
	*x = Ic{}
	mi := &file_wayplatform_connect_tachograph_card_v1_ic_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ic) ProtoMessage() {}

func (x *Ic) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_card_v1_ic_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Ic) GetIcSerialNumber() string {
	if x != nil {
		if x.xxx_hidden_IcSerialNumber != nil {
			return *x.xxx_hidden_IcSerialNumber
		}
		return ""
	}
	return ""
}

func (x *Ic) GetIcManufacturingReferences() string {
	if x != nil {
		if x.xxx_hidden_IcManufacturingReferences != nil {
			return *x.xxx_hidden_IcManufacturingReferences
		}
		return ""
	}
	return ""
}

func (x *Ic) SetIcSerialNumber(v string) {
	x.xxx_hidden_IcSerialNumber = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *Ic) SetIcManufacturingReferences(v string) {
	x.xxx_hidden_IcManufacturingReferences = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *Ic) HasIcSerialNumber() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Ic) HasIcManufacturingReferences() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Ic) ClearIcSerialNumber() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_IcSerialNumber = nil
}

func (x *Ic) ClearIcManufacturingReferences() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_IcManufacturingReferences = nil
}

type Ic_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The serial number of the integrated circuit.
	//
	// See Data Dictionary, Section 2.13, `icSerialNumber`.
	// ASN.1 Definition:
	//
	//	OCTET STRING (SIZE(4))
	IcSerialNumber *string
	// The manufacturing references of the integrated circuit.
	//
	// See Data Dictionary, Section 2.13, `icManufacturingReferences`.
	// ASN.1 Definition:
	//
	//	OCTET STRING (SIZE(4))
	IcManufacturingReferences *string
}

func (b0 Ic_builder) Build() *Ic {
	m0 := &Ic{}
	b, x := &b0, m0
	_, _ = b, x
	if b.IcSerialNumber != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_IcSerialNumber = b.IcSerialNumber
	}
	if b.IcManufacturingReferences != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_IcManufacturingReferences = b.IcManufacturingReferences
	}
	return m0
}

var File_wayplatform_connect_tachograph_card_v1_ic_proto protoreflect.FileDescriptor

const file_wayplatform_connect_tachograph_card_v1_ic_proto_rawDesc = "" +
	"\n" +
	"/wayplatform/connect/tachograph/card/v1/ic.proto\x12&wayplatform.connect.tachograph.card.v1\"n\n" +
	"\x02Ic\x12(\n" +
	"\x10ic_serial_number\x18\x01 \x01(\tR\x0eicSerialNumber\x12>\n" +
	"\x1bic_manufacturing_references\x18\x02 \x01(\tR\x19icManufacturingReferencesB\xd4\x02\n" +
	"*com.wayplatform.connect.tachograph.card.v1B\aIcProtoP\x01Z`github.com/way-platform/tachograph-go/proto/gen/go/wayplatform/connect/tachograph/card/v1;cardv1\xa2\x02\x04WCTC\xaa\x02&Wayplatform.Connect.Tachograph.Card.V1\xca\x02&Wayplatform\\Connect\\Tachograph\\Card\\V1\xe2\x022Wayplatform\\Connect\\Tachograph\\Card\\V1\\GPBMetadata\xea\x02*Wayplatform::Connect::Tachograph::Card::V1b\beditionsp\xe8\a"

var file_wayplatform_connect_tachograph_card_v1_ic_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_wayplatform_connect_tachograph_card_v1_ic_proto_goTypes = []any{
	(*Ic)(nil), // 0: wayplatform.connect.tachograph.card.v1.Ic
}
var file_wayplatform_connect_tachograph_card_v1_ic_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_wayplatform_connect_tachograph_card_v1_ic_proto_init() }
func file_wayplatform_connect_tachograph_card_v1_ic_proto_init() {
	if File_wayplatform_connect_tachograph_card_v1_ic_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wayplatform_connect_tachograph_card_v1_ic_proto_rawDesc), len(file_wayplatform_connect_tachograph_card_v1_ic_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wayplatform_connect_tachograph_card_v1_ic_proto_goTypes,
		DependencyIndexes: file_wayplatform_connect_tachograph_card_v1_ic_proto_depIdxs,
		MessageInfos:      file_wayplatform_connect_tachograph_card_v1_ic_proto_msgTypes,
	}.Build()
	File_wayplatform_connect_tachograph_card_v1_ic_proto = out.File
	file_wayplatform_connect_tachograph_card_v1_ic_proto_goTypes = nil
	file_wayplatform_connect_tachograph_card_v1_ic_proto_depIdxs = nil
}
