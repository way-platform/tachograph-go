// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wayplatform/connect/tachograph/card/v1/current_usage.proto

package cardv1

import (
	v1 "github.com/way-platform/tachograph-go/proto/gen/go/wayplatform/connect/tachograph/dd/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents the content of the EF_Current_Usage file, which contains data
// about the actual usage of the card.
//
// The file structure is specified in Appendix 2, Section 4.2.1.
//
//	EF Current_Usage
//	└─CardCurrentUse
//
// The data type `CardCurrentUse` is specified in the Data Dictionary, Section 2.16.
//
// ASN.1 Specification:
//
//	CardCurrentUse ::= SEQUENCE {
//	    sessionOpenTime TimeReal,
//	    sessionOpenVehicle VehicleRegistrationIdentification
//	}
type CurrentUsage struct {
	state                         protoimpl.MessageState                `protogen:"opaque.v1"`
	xxx_hidden_SessionOpenTime    *timestamppb.Timestamp                `protobuf:"bytes,1,opt,name=session_open_time,json=sessionOpenTime"`
	xxx_hidden_SessionOpenVehicle *v1.VehicleRegistrationIdentification `protobuf:"bytes,2,opt,name=session_open_vehicle,json=sessionOpenVehicle"`
	xxx_hidden_Signature          []byte                                `protobuf:"bytes,3,opt,name=signature"`
	XXX_raceDetectHookData        protoimpl.RaceDetectHookData
	XXX_presence                  [1]uint32
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *CurrentUsage) Reset() {
	*x = CurrentUsage{}
	mi := &file_wayplatform_connect_tachograph_card_v1_current_usage_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CurrentUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrentUsage) ProtoMessage() {}

func (x *CurrentUsage) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_card_v1_current_usage_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CurrentUsage) GetSessionOpenTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_SessionOpenTime
	}
	return nil
}

func (x *CurrentUsage) GetSessionOpenVehicle() *v1.VehicleRegistrationIdentification {
	if x != nil {
		return x.xxx_hidden_SessionOpenVehicle
	}
	return nil
}

func (x *CurrentUsage) GetSignature() []byte {
	if x != nil {
		return x.xxx_hidden_Signature
	}
	return nil
}

func (x *CurrentUsage) SetSessionOpenTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_SessionOpenTime = v
}

func (x *CurrentUsage) SetSessionOpenVehicle(v *v1.VehicleRegistrationIdentification) {
	x.xxx_hidden_SessionOpenVehicle = v
}

func (x *CurrentUsage) SetSignature(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Signature = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *CurrentUsage) HasSessionOpenTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_SessionOpenTime != nil
}

func (x *CurrentUsage) HasSessionOpenVehicle() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_SessionOpenVehicle != nil
}

func (x *CurrentUsage) HasSignature() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *CurrentUsage) ClearSessionOpenTime() {
	x.xxx_hidden_SessionOpenTime = nil
}

func (x *CurrentUsage) ClearSessionOpenVehicle() {
	x.xxx_hidden_SessionOpenVehicle = nil
}

func (x *CurrentUsage) ClearSignature() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Signature = nil
}

type CurrentUsage_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The time when the card was inserted for the current usage session.
	//
	// See Data Dictionary, Section 2.162, `TimeReal`.
	// ASN.1 Specification:
	//
	//	TimeReal ::= INTEGER (0..2^32-1)
	SessionOpenTime *timestamppb.Timestamp
	// The identification of the vehicle in which the card is currently inserted.
	//
	// See Data Dictionary, Section 2.166, `VehicleRegistrationIdentification`.
	// ASN.1 Specification:
	//
	//	VehicleRegistrationIdentification ::= SEQUENCE { ... }
	SessionOpenVehicle *v1.VehicleRegistrationIdentification
	// Digital signature for the EF_Current_Usage file content.
	//
	// See Data Dictionary, Section 2.149, `Signature`.
	// ASN.1 Specification:
	//
	//	Signature ::= OCTET STRING (SIZE(128 for Gen1))
	Signature []byte
}

func (b0 CurrentUsage_builder) Build() *CurrentUsage {
	m0 := &CurrentUsage{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_SessionOpenTime = b.SessionOpenTime
	x.xxx_hidden_SessionOpenVehicle = b.SessionOpenVehicle
	if b.Signature != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Signature = b.Signature
	}
	return m0
}

var File_wayplatform_connect_tachograph_card_v1_current_usage_proto protoreflect.FileDescriptor

const file_wayplatform_connect_tachograph_card_v1_current_usage_proto_rawDesc = "" +
	"\n" +
	":wayplatform/connect/tachograph/card/v1/current_usage.proto\x12&wayplatform.connect.tachograph.card.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1aNwayplatform/connect/tachograph/dd/v1/vehicle_registration_identification.proto\"\xef\x01\n" +
	"\fCurrentUsage\x12F\n" +
	"\x11session_open_time\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x0fsessionOpenTime\x12y\n" +
	"\x14session_open_vehicle\x18\x02 \x01(\v2G.wayplatform.connect.tachograph.dd.v1.VehicleRegistrationIdentificationR\x12sessionOpenVehicle\x12\x1c\n" +
	"\tsignature\x18\x03 \x01(\fR\tsignatureB\xde\x02\n" +
	"*com.wayplatform.connect.tachograph.card.v1B\x11CurrentUsageProtoP\x01Z`github.com/way-platform/tachograph-go/proto/gen/go/wayplatform/connect/tachograph/card/v1;cardv1\xa2\x02\x04WCTC\xaa\x02&Wayplatform.Connect.Tachograph.Card.V1\xca\x02&Wayplatform\\Connect\\Tachograph\\Card\\V1\xe2\x022Wayplatform\\Connect\\Tachograph\\Card\\V1\\GPBMetadata\xea\x02*Wayplatform::Connect::Tachograph::Card::V1b\beditionsp\xe8\a"

var file_wayplatform_connect_tachograph_card_v1_current_usage_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_wayplatform_connect_tachograph_card_v1_current_usage_proto_goTypes = []any{
	(*CurrentUsage)(nil),                         // 0: wayplatform.connect.tachograph.card.v1.CurrentUsage
	(*timestamppb.Timestamp)(nil),                // 1: google.protobuf.Timestamp
	(*v1.VehicleRegistrationIdentification)(nil), // 2: wayplatform.connect.tachograph.dd.v1.VehicleRegistrationIdentification
}
var file_wayplatform_connect_tachograph_card_v1_current_usage_proto_depIdxs = []int32{
	1, // 0: wayplatform.connect.tachograph.card.v1.CurrentUsage.session_open_time:type_name -> google.protobuf.Timestamp
	2, // 1: wayplatform.connect.tachograph.card.v1.CurrentUsage.session_open_vehicle:type_name -> wayplatform.connect.tachograph.dd.v1.VehicleRegistrationIdentification
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_wayplatform_connect_tachograph_card_v1_current_usage_proto_init() }
func file_wayplatform_connect_tachograph_card_v1_current_usage_proto_init() {
	if File_wayplatform_connect_tachograph_card_v1_current_usage_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wayplatform_connect_tachograph_card_v1_current_usage_proto_rawDesc), len(file_wayplatform_connect_tachograph_card_v1_current_usage_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wayplatform_connect_tachograph_card_v1_current_usage_proto_goTypes,
		DependencyIndexes: file_wayplatform_connect_tachograph_card_v1_current_usage_proto_depIdxs,
		MessageInfos:      file_wayplatform_connect_tachograph_card_v1_current_usage_proto_msgTypes,
	}.Build()
	File_wayplatform_connect_tachograph_card_v1_current_usage_proto = out.File
	file_wayplatform_connect_tachograph_card_v1_current_usage_proto_goTypes = nil
	file_wayplatform_connect_tachograph_card_v1_current_usage_proto_depIdxs = nil
}
