// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wayplatform/connect/tachograph/card/v1/fault_data.proto

package cardv1

import (
	v1 "github.com/way-platform/tachograph-go/proto/gen/go/wayplatform/connect/tachograph/datadictionary/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents fault data from a tachograph card.
//
// Corresponds to the `CardFaultData` data type.
// See Data Dictionary, Section 2.21.
type FaultData struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Records *[]*FaultData_Record   `protobuf:"bytes,1,rep,name=records"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *FaultData) Reset() {
	*x = FaultData{}
	mi := &file_wayplatform_connect_tachograph_card_v1_fault_data_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FaultData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FaultData) ProtoMessage() {}

func (x *FaultData) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_card_v1_fault_data_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *FaultData) GetRecords() []*FaultData_Record {
	if x != nil {
		if x.xxx_hidden_Records != nil {
			return *x.xxx_hidden_Records
		}
	}
	return nil
}

func (x *FaultData) SetRecords(v []*FaultData_Record) {
	x.xxx_hidden_Records = &v
}

type FaultData_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Records []*FaultData_Record
}

func (b0 FaultData_builder) Build() *FaultData {
	m0 := &FaultData{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Records = &b.Records
	return m0
}

// Represents a single fault record.
//
// Corresponds to the `CardFaultRecord` data type.
// See Data Dictionary, Section 2.22.
type FaultData_Record struct {
	state                                protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Valid                     bool                   `protobuf:"varint,1,opt,name=valid"`
	xxx_hidden_FaultType                 v1.EventFaultType      `protobuf:"varint,2,opt,name=fault_type,json=faultType,enum=wayplatform.connect.tachograph.datadictionary.v1.EventFaultType"`
	xxx_hidden_UnrecognizedFaultType     int32                  `protobuf:"varint,3,opt,name=unrecognized_fault_type,json=unrecognizedFaultType"`
	xxx_hidden_FaultBeginTime            *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=fault_begin_time,json=faultBeginTime"`
	xxx_hidden_FaultEndTime              *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=fault_end_time,json=faultEndTime"`
	xxx_hidden_VehicleRegistrationNation *string                `protobuf:"bytes,6,opt,name=vehicle_registration_nation,json=vehicleRegistrationNation"`
	xxx_hidden_VehicleRegistrationNumber *string                `protobuf:"bytes,7,opt,name=vehicle_registration_number,json=vehicleRegistrationNumber"`
	xxx_hidden_RawData                   []byte                 `protobuf:"bytes,8,opt,name=raw_data,json=rawData"`
	XXX_raceDetectHookData               protoimpl.RaceDetectHookData
	XXX_presence                         [1]uint32
	unknownFields                        protoimpl.UnknownFields
	sizeCache                            protoimpl.SizeCache
}

func (x *FaultData_Record) Reset() {
	*x = FaultData_Record{}
	mi := &file_wayplatform_connect_tachograph_card_v1_fault_data_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FaultData_Record) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FaultData_Record) ProtoMessage() {}

func (x *FaultData_Record) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_card_v1_fault_data_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *FaultData_Record) GetValid() bool {
	if x != nil {
		return x.xxx_hidden_Valid
	}
	return false
}

func (x *FaultData_Record) GetFaultType() v1.EventFaultType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_FaultType
		}
	}
	return v1.EventFaultType(0)
}

func (x *FaultData_Record) GetUnrecognizedFaultType() int32 {
	if x != nil {
		return x.xxx_hidden_UnrecognizedFaultType
	}
	return 0
}

func (x *FaultData_Record) GetFaultBeginTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_FaultBeginTime
	}
	return nil
}

func (x *FaultData_Record) GetFaultEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_FaultEndTime
	}
	return nil
}

func (x *FaultData_Record) GetVehicleRegistrationNation() string {
	if x != nil {
		if x.xxx_hidden_VehicleRegistrationNation != nil {
			return *x.xxx_hidden_VehicleRegistrationNation
		}
		return ""
	}
	return ""
}

func (x *FaultData_Record) GetVehicleRegistrationNumber() string {
	if x != nil {
		if x.xxx_hidden_VehicleRegistrationNumber != nil {
			return *x.xxx_hidden_VehicleRegistrationNumber
		}
		return ""
	}
	return ""
}

func (x *FaultData_Record) GetRawData() []byte {
	if x != nil {
		return x.xxx_hidden_RawData
	}
	return nil
}

func (x *FaultData_Record) SetValid(v bool) {
	x.xxx_hidden_Valid = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 8)
}

func (x *FaultData_Record) SetFaultType(v v1.EventFaultType) {
	x.xxx_hidden_FaultType = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 8)
}

func (x *FaultData_Record) SetUnrecognizedFaultType(v int32) {
	x.xxx_hidden_UnrecognizedFaultType = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 8)
}

func (x *FaultData_Record) SetFaultBeginTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_FaultBeginTime = v
}

func (x *FaultData_Record) SetFaultEndTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_FaultEndTime = v
}

func (x *FaultData_Record) SetVehicleRegistrationNation(v string) {
	x.xxx_hidden_VehicleRegistrationNation = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 8)
}

func (x *FaultData_Record) SetVehicleRegistrationNumber(v string) {
	x.xxx_hidden_VehicleRegistrationNumber = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 8)
}

func (x *FaultData_Record) SetRawData(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_RawData = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 8)
}

func (x *FaultData_Record) HasValid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *FaultData_Record) HasFaultType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *FaultData_Record) HasUnrecognizedFaultType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *FaultData_Record) HasFaultBeginTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_FaultBeginTime != nil
}

func (x *FaultData_Record) HasFaultEndTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_FaultEndTime != nil
}

func (x *FaultData_Record) HasVehicleRegistrationNation() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *FaultData_Record) HasVehicleRegistrationNumber() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *FaultData_Record) HasRawData() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *FaultData_Record) ClearValid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Valid = false
}

func (x *FaultData_Record) ClearFaultType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FaultType = v1.EventFaultType_EVENT_FAULT_TYPE_UNSPECIFIED
}

func (x *FaultData_Record) ClearUnrecognizedFaultType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_UnrecognizedFaultType = 0
}

func (x *FaultData_Record) ClearFaultBeginTime() {
	x.xxx_hidden_FaultBeginTime = nil
}

func (x *FaultData_Record) ClearFaultEndTime() {
	x.xxx_hidden_FaultEndTime = nil
}

func (x *FaultData_Record) ClearVehicleRegistrationNation() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_VehicleRegistrationNation = nil
}

func (x *FaultData_Record) ClearVehicleRegistrationNumber() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_VehicleRegistrationNumber = nil
}

func (x *FaultData_Record) ClearRawData() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_RawData = nil
}

type FaultData_Record_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// If true, the fields below are populated with parsed, semantic data.
	// If false, the 'raw_data' field contains the original, unprocessed record
	// bytes.
	Valid *bool
	// See Data Dictionary, Section 2.70 for `EventFaultType`.
	FaultType *v1.EventFaultType
	// Populated only when fault_type is EVENT_FAULT_TYPE_UNRECOGNIZED.
	UnrecognizedFaultType *int32
	// See Data Dictionary, Section 2.162 for `TimeReal`.
	FaultBeginTime *timestamppb.Timestamp
	// See Data Dictionary, Section 2.162 for `TimeReal`.
	FaultEndTime *timestamppb.Timestamp
	// Part of `VehicleRegistrationIdentification`. See DD Section 2.166.
	VehicleRegistrationNation *string
	// Part of `VehicleRegistrationIdentification`. See DD Section 2.166.
	VehicleRegistrationNumber *string
	// --- Field for a non-valid record (when valid = false) ---
	// Holds the raw 24 bytes of the original record.
	RawData []byte
}

func (b0 FaultData_Record_builder) Build() *FaultData_Record {
	m0 := &FaultData_Record{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Valid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 8)
		x.xxx_hidden_Valid = *b.Valid
	}
	if b.FaultType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 8)
		x.xxx_hidden_FaultType = *b.FaultType
	}
	if b.UnrecognizedFaultType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 8)
		x.xxx_hidden_UnrecognizedFaultType = *b.UnrecognizedFaultType
	}
	x.xxx_hidden_FaultBeginTime = b.FaultBeginTime
	x.xxx_hidden_FaultEndTime = b.FaultEndTime
	if b.VehicleRegistrationNation != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 8)
		x.xxx_hidden_VehicleRegistrationNation = b.VehicleRegistrationNation
	}
	if b.VehicleRegistrationNumber != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 8)
		x.xxx_hidden_VehicleRegistrationNumber = b.VehicleRegistrationNumber
	}
	if b.RawData != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 8)
		x.xxx_hidden_RawData = b.RawData
	}
	return m0
}

var File_wayplatform_connect_tachograph_card_v1_fault_data_proto protoreflect.FileDescriptor

const file_wayplatform_connect_tachograph_card_v1_fault_data_proto_rawDesc = "" +
	"\n" +
	"7wayplatform/connect/tachograph/card/v1/fault_data.proto\x12&wayplatform.connect.tachograph.card.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1aGwayplatform/connect/tachograph/datadictionary/v1/event_fault_type.proto\"\xbc\x04\n" +
	"\tFaultData\x12R\n" +
	"\arecords\x18\x01 \x03(\v28.wayplatform.connect.tachograph.card.v1.FaultData.RecordR\arecords\x1a\xda\x03\n" +
	"\x06Record\x12\x14\n" +
	"\x05valid\x18\x01 \x01(\bR\x05valid\x12_\n" +
	"\n" +
	"fault_type\x18\x02 \x01(\x0e2@.wayplatform.connect.tachograph.datadictionary.v1.EventFaultTypeR\tfaultType\x126\n" +
	"\x17unrecognized_fault_type\x18\x03 \x01(\x05R\x15unrecognizedFaultType\x12D\n" +
	"\x10fault_begin_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x0efaultBeginTime\x12@\n" +
	"\x0efault_end_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\ffaultEndTime\x12>\n" +
	"\x1bvehicle_registration_nation\x18\x06 \x01(\tR\x19vehicleRegistrationNation\x12>\n" +
	"\x1bvehicle_registration_number\x18\a \x01(\tR\x19vehicleRegistrationNumber\x12\x19\n" +
	"\braw_data\x18\b \x01(\fR\arawDataB\xdb\x02\n" +
	"*com.wayplatform.connect.tachograph.card.v1B\x0eFaultDataProtoP\x01Z`github.com/way-platform/tachograph-go/proto/gen/go/wayplatform/connect/tachograph/card/v1;cardv1\xa2\x02\x04WCTC\xaa\x02&Wayplatform.Connect.Tachograph.Card.V1\xca\x02&Wayplatform\\Connect\\Tachograph\\Card\\V1\xe2\x022Wayplatform\\Connect\\Tachograph\\Card\\V1\\GPBMetadata\xea\x02*Wayplatform::Connect::Tachograph::Card::V1b\beditionsp\xe8\a"

var file_wayplatform_connect_tachograph_card_v1_fault_data_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_wayplatform_connect_tachograph_card_v1_fault_data_proto_goTypes = []any{
	(*FaultData)(nil),             // 0: wayplatform.connect.tachograph.card.v1.FaultData
	(*FaultData_Record)(nil),      // 1: wayplatform.connect.tachograph.card.v1.FaultData.Record
	(v1.EventFaultType)(0),        // 2: wayplatform.connect.tachograph.datadictionary.v1.EventFaultType
	(*timestamppb.Timestamp)(nil), // 3: google.protobuf.Timestamp
}
var file_wayplatform_connect_tachograph_card_v1_fault_data_proto_depIdxs = []int32{
	1, // 0: wayplatform.connect.tachograph.card.v1.FaultData.records:type_name -> wayplatform.connect.tachograph.card.v1.FaultData.Record
	2, // 1: wayplatform.connect.tachograph.card.v1.FaultData.Record.fault_type:type_name -> wayplatform.connect.tachograph.datadictionary.v1.EventFaultType
	3, // 2: wayplatform.connect.tachograph.card.v1.FaultData.Record.fault_begin_time:type_name -> google.protobuf.Timestamp
	3, // 3: wayplatform.connect.tachograph.card.v1.FaultData.Record.fault_end_time:type_name -> google.protobuf.Timestamp
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_wayplatform_connect_tachograph_card_v1_fault_data_proto_init() }
func file_wayplatform_connect_tachograph_card_v1_fault_data_proto_init() {
	if File_wayplatform_connect_tachograph_card_v1_fault_data_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wayplatform_connect_tachograph_card_v1_fault_data_proto_rawDesc), len(file_wayplatform_connect_tachograph_card_v1_fault_data_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wayplatform_connect_tachograph_card_v1_fault_data_proto_goTypes,
		DependencyIndexes: file_wayplatform_connect_tachograph_card_v1_fault_data_proto_depIdxs,
		MessageInfos:      file_wayplatform_connect_tachograph_card_v1_fault_data_proto_msgTypes,
	}.Build()
	File_wayplatform_connect_tachograph_card_v1_fault_data_proto = out.File
	file_wayplatform_connect_tachograph_card_v1_fault_data_proto_goTypes = nil
	file_wayplatform_connect_tachograph_card_v1_fault_data_proto_depIdxs = nil
}
