// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wayplatform/connect/tachograph/vu/v1/technical_data_gen2.proto

package vuv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents the data structure for a Gen2 Technical Data transfer.
// This structure is used for both v1 (TREP 0x25) and v2 (TREP 0x35).
// See Appendix 7, Section 2.2.6.6.
type TechnicalDataGen2 struct {
	state                               protoimpl.MessageState                              `protogen:"opaque.v1"`
	xxx_hidden_VuIdentification         *TechnicalDataGen2_VuIdentification                 `protobuf:"bytes,1,opt,name=vu_identification,json=vuIdentification"`
	xxx_hidden_PairedSensors            *[]*TechnicalDataGen2_PairedSensor                  `protobuf:"bytes,2,rep,name=paired_sensors,json=pairedSensors"`
	xxx_hidden_CoupledGnssFacilities    *[]*TechnicalDataGen2_CoupledGnss                   `protobuf:"bytes,3,rep,name=coupled_gnss_facilities,json=coupledGnssFacilities"`
	xxx_hidden_CalibrationRecords       *[]*TechnicalDataGen2_CalibrationRecord             `protobuf:"bytes,4,rep,name=calibration_records,json=calibrationRecords"`
	xxx_hidden_CardRecords              *[]*TechnicalDataGen2_CardRecord                    `protobuf:"bytes,5,rep,name=card_records,json=cardRecords"`
	xxx_hidden_ItsConsentRecords        *[]*TechnicalDataGen2_ItsConsentRecord              `protobuf:"bytes,6,rep,name=its_consent_records,json=itsConsentRecords"`
	xxx_hidden_PowerSupplyInterruptions *[]*TechnicalDataGen2_PowerSupplyInterruptionRecord `protobuf:"bytes,7,rep,name=power_supply_interruptions,json=powerSupplyInterruptions"`
	xxx_hidden_Signature                []byte                                              `protobuf:"bytes,8,opt,name=signature"`
	XXX_raceDetectHookData              protoimpl.RaceDetectHookData
	XXX_presence                        [1]uint32
	unknownFields                       protoimpl.UnknownFields
	sizeCache                           protoimpl.SizeCache
}

func (x *TechnicalDataGen2) Reset() {
	*x = TechnicalDataGen2{}
	mi := &file_wayplatform_connect_tachograph_vu_v1_technical_data_gen2_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TechnicalDataGen2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TechnicalDataGen2) ProtoMessage() {}

func (x *TechnicalDataGen2) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_vu_v1_technical_data_gen2_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TechnicalDataGen2) GetVuIdentification() *TechnicalDataGen2_VuIdentification {
	if x != nil {
		return x.xxx_hidden_VuIdentification
	}
	return nil
}

func (x *TechnicalDataGen2) GetPairedSensors() []*TechnicalDataGen2_PairedSensor {
	if x != nil {
		if x.xxx_hidden_PairedSensors != nil {
			return *x.xxx_hidden_PairedSensors
		}
	}
	return nil
}

func (x *TechnicalDataGen2) GetCoupledGnssFacilities() []*TechnicalDataGen2_CoupledGnss {
	if x != nil {
		if x.xxx_hidden_CoupledGnssFacilities != nil {
			return *x.xxx_hidden_CoupledGnssFacilities
		}
	}
	return nil
}

func (x *TechnicalDataGen2) GetCalibrationRecords() []*TechnicalDataGen2_CalibrationRecord {
	if x != nil {
		if x.xxx_hidden_CalibrationRecords != nil {
			return *x.xxx_hidden_CalibrationRecords
		}
	}
	return nil
}

func (x *TechnicalDataGen2) GetCardRecords() []*TechnicalDataGen2_CardRecord {
	if x != nil {
		if x.xxx_hidden_CardRecords != nil {
			return *x.xxx_hidden_CardRecords
		}
	}
	return nil
}

func (x *TechnicalDataGen2) GetItsConsentRecords() []*TechnicalDataGen2_ItsConsentRecord {
	if x != nil {
		if x.xxx_hidden_ItsConsentRecords != nil {
			return *x.xxx_hidden_ItsConsentRecords
		}
	}
	return nil
}

func (x *TechnicalDataGen2) GetPowerSupplyInterruptions() []*TechnicalDataGen2_PowerSupplyInterruptionRecord {
	if x != nil {
		if x.xxx_hidden_PowerSupplyInterruptions != nil {
			return *x.xxx_hidden_PowerSupplyInterruptions
		}
	}
	return nil
}

func (x *TechnicalDataGen2) GetSignature() []byte {
	if x != nil {
		return x.xxx_hidden_Signature
	}
	return nil
}

func (x *TechnicalDataGen2) SetVuIdentification(v *TechnicalDataGen2_VuIdentification) {
	x.xxx_hidden_VuIdentification = v
}

func (x *TechnicalDataGen2) SetPairedSensors(v []*TechnicalDataGen2_PairedSensor) {
	x.xxx_hidden_PairedSensors = &v
}

func (x *TechnicalDataGen2) SetCoupledGnssFacilities(v []*TechnicalDataGen2_CoupledGnss) {
	x.xxx_hidden_CoupledGnssFacilities = &v
}

func (x *TechnicalDataGen2) SetCalibrationRecords(v []*TechnicalDataGen2_CalibrationRecord) {
	x.xxx_hidden_CalibrationRecords = &v
}

func (x *TechnicalDataGen2) SetCardRecords(v []*TechnicalDataGen2_CardRecord) {
	x.xxx_hidden_CardRecords = &v
}

func (x *TechnicalDataGen2) SetItsConsentRecords(v []*TechnicalDataGen2_ItsConsentRecord) {
	x.xxx_hidden_ItsConsentRecords = &v
}

func (x *TechnicalDataGen2) SetPowerSupplyInterruptions(v []*TechnicalDataGen2_PowerSupplyInterruptionRecord) {
	x.xxx_hidden_PowerSupplyInterruptions = &v
}

func (x *TechnicalDataGen2) SetSignature(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Signature = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 8)
}

func (x *TechnicalDataGen2) HasVuIdentification() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_VuIdentification != nil
}

func (x *TechnicalDataGen2) HasSignature() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *TechnicalDataGen2) ClearVuIdentification() {
	x.xxx_hidden_VuIdentification = nil
}

func (x *TechnicalDataGen2) ClearSignature() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_Signature = nil
}

type TechnicalDataGen2_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	VuIdentification         *TechnicalDataGen2_VuIdentification
	PairedSensors            []*TechnicalDataGen2_PairedSensor
	CoupledGnssFacilities    []*TechnicalDataGen2_CoupledGnss
	CalibrationRecords       []*TechnicalDataGen2_CalibrationRecord
	CardRecords              []*TechnicalDataGen2_CardRecord
	ItsConsentRecords        []*TechnicalDataGen2_ItsConsentRecord
	PowerSupplyInterruptions []*TechnicalDataGen2_PowerSupplyInterruptionRecord
	// Gen2 signature (ECC). See Appendix 1, 2.149.
	Signature []byte
}

func (b0 TechnicalDataGen2_builder) Build() *TechnicalDataGen2 {
	m0 := &TechnicalDataGen2{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_VuIdentification = b.VuIdentification
	x.xxx_hidden_PairedSensors = &b.PairedSensors
	x.xxx_hidden_CoupledGnssFacilities = &b.CoupledGnssFacilities
	x.xxx_hidden_CalibrationRecords = &b.CalibrationRecords
	x.xxx_hidden_CardRecords = &b.CardRecords
	x.xxx_hidden_ItsConsentRecords = &b.ItsConsentRecords
	x.xxx_hidden_PowerSupplyInterruptions = &b.PowerSupplyInterruptions
	if b.Signature != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 8)
		x.xxx_hidden_Signature = b.Signature
	}
	return m0
}

type TechnicalDataGen2_VuIdentification struct {
	state                                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ManufacturerName                *string                `protobuf:"bytes,1,opt,name=manufacturer_name,json=manufacturerName"`
	xxx_hidden_ManufacturerAddress             *string                `protobuf:"bytes,2,opt,name=manufacturer_address,json=manufacturerAddress"`
	xxx_hidden_PartNumber                      *string                `protobuf:"bytes,3,opt,name=part_number,json=partNumber"`
	xxx_hidden_SerialNumber                    *string                `protobuf:"bytes,4,opt,name=serial_number,json=serialNumber"`
	xxx_hidden_SoftwareVersion                 *string                `protobuf:"bytes,5,opt,name=software_version,json=softwareVersion"`
	xxx_hidden_SoftwareInstallationDateSeconds uint32                 `protobuf:"varint,6,opt,name=software_installation_date_seconds,json=softwareInstallationDateSeconds"`
	xxx_hidden_ManufacturingDateSeconds        uint32                 `protobuf:"varint,7,opt,name=manufacturing_date_seconds,json=manufacturingDateSeconds"`
	xxx_hidden_ApprovalNumber                  *string                `protobuf:"bytes,8,opt,name=approval_number,json=approvalNumber"`
	XXX_raceDetectHookData                     protoimpl.RaceDetectHookData
	XXX_presence                               [1]uint32
	unknownFields                              protoimpl.UnknownFields
	sizeCache                                  protoimpl.SizeCache
}

func (x *TechnicalDataGen2_VuIdentification) Reset() {
	*x = TechnicalDataGen2_VuIdentification{}
	mi := &file_wayplatform_connect_tachograph_vu_v1_technical_data_gen2_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TechnicalDataGen2_VuIdentification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TechnicalDataGen2_VuIdentification) ProtoMessage() {}

func (x *TechnicalDataGen2_VuIdentification) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_vu_v1_technical_data_gen2_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TechnicalDataGen2_VuIdentification) GetManufacturerName() string {
	if x != nil {
		if x.xxx_hidden_ManufacturerName != nil {
			return *x.xxx_hidden_ManufacturerName
		}
		return ""
	}
	return ""
}

func (x *TechnicalDataGen2_VuIdentification) GetManufacturerAddress() string {
	if x != nil {
		if x.xxx_hidden_ManufacturerAddress != nil {
			return *x.xxx_hidden_ManufacturerAddress
		}
		return ""
	}
	return ""
}

func (x *TechnicalDataGen2_VuIdentification) GetPartNumber() string {
	if x != nil {
		if x.xxx_hidden_PartNumber != nil {
			return *x.xxx_hidden_PartNumber
		}
		return ""
	}
	return ""
}

func (x *TechnicalDataGen2_VuIdentification) GetSerialNumber() string {
	if x != nil {
		if x.xxx_hidden_SerialNumber != nil {
			return *x.xxx_hidden_SerialNumber
		}
		return ""
	}
	return ""
}

func (x *TechnicalDataGen2_VuIdentification) GetSoftwareVersion() string {
	if x != nil {
		if x.xxx_hidden_SoftwareVersion != nil {
			return *x.xxx_hidden_SoftwareVersion
		}
		return ""
	}
	return ""
}

func (x *TechnicalDataGen2_VuIdentification) GetSoftwareInstallationDateSeconds() uint32 {
	if x != nil {
		return x.xxx_hidden_SoftwareInstallationDateSeconds
	}
	return 0
}

func (x *TechnicalDataGen2_VuIdentification) GetManufacturingDateSeconds() uint32 {
	if x != nil {
		return x.xxx_hidden_ManufacturingDateSeconds
	}
	return 0
}

func (x *TechnicalDataGen2_VuIdentification) GetApprovalNumber() string {
	if x != nil {
		if x.xxx_hidden_ApprovalNumber != nil {
			return *x.xxx_hidden_ApprovalNumber
		}
		return ""
	}
	return ""
}

func (x *TechnicalDataGen2_VuIdentification) SetManufacturerName(v string) {
	x.xxx_hidden_ManufacturerName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 8)
}

func (x *TechnicalDataGen2_VuIdentification) SetManufacturerAddress(v string) {
	x.xxx_hidden_ManufacturerAddress = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 8)
}

func (x *TechnicalDataGen2_VuIdentification) SetPartNumber(v string) {
	x.xxx_hidden_PartNumber = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 8)
}

func (x *TechnicalDataGen2_VuIdentification) SetSerialNumber(v string) {
	x.xxx_hidden_SerialNumber = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 8)
}

func (x *TechnicalDataGen2_VuIdentification) SetSoftwareVersion(v string) {
	x.xxx_hidden_SoftwareVersion = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 8)
}

func (x *TechnicalDataGen2_VuIdentification) SetSoftwareInstallationDateSeconds(v uint32) {
	x.xxx_hidden_SoftwareInstallationDateSeconds = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 8)
}

func (x *TechnicalDataGen2_VuIdentification) SetManufacturingDateSeconds(v uint32) {
	x.xxx_hidden_ManufacturingDateSeconds = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 8)
}

func (x *TechnicalDataGen2_VuIdentification) SetApprovalNumber(v string) {
	x.xxx_hidden_ApprovalNumber = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 8)
}

func (x *TechnicalDataGen2_VuIdentification) HasManufacturerName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *TechnicalDataGen2_VuIdentification) HasManufacturerAddress() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *TechnicalDataGen2_VuIdentification) HasPartNumber() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *TechnicalDataGen2_VuIdentification) HasSerialNumber() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *TechnicalDataGen2_VuIdentification) HasSoftwareVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *TechnicalDataGen2_VuIdentification) HasSoftwareInstallationDateSeconds() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *TechnicalDataGen2_VuIdentification) HasManufacturingDateSeconds() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *TechnicalDataGen2_VuIdentification) HasApprovalNumber() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *TechnicalDataGen2_VuIdentification) ClearManufacturerName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ManufacturerName = nil
}

func (x *TechnicalDataGen2_VuIdentification) ClearManufacturerAddress() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ManufacturerAddress = nil
}

func (x *TechnicalDataGen2_VuIdentification) ClearPartNumber() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_PartNumber = nil
}

func (x *TechnicalDataGen2_VuIdentification) ClearSerialNumber() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_SerialNumber = nil
}

func (x *TechnicalDataGen2_VuIdentification) ClearSoftwareVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_SoftwareVersion = nil
}

func (x *TechnicalDataGen2_VuIdentification) ClearSoftwareInstallationDateSeconds() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_SoftwareInstallationDateSeconds = 0
}

func (x *TechnicalDataGen2_VuIdentification) ClearManufacturingDateSeconds() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_ManufacturingDateSeconds = 0
}

func (x *TechnicalDataGen2_VuIdentification) ClearApprovalNumber() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_ApprovalNumber = nil
}

type TechnicalDataGen2_VuIdentification_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// See Appendix 1, 2.205
	ManufacturerName                *string
	ManufacturerAddress             *string
	PartNumber                      *string
	SerialNumber                    *string
	SoftwareVersion                 *string
	SoftwareInstallationDateSeconds *uint32
	ManufacturingDateSeconds        *uint32
	ApprovalNumber                  *string
}

func (b0 TechnicalDataGen2_VuIdentification_builder) Build() *TechnicalDataGen2_VuIdentification {
	m0 := &TechnicalDataGen2_VuIdentification{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ManufacturerName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 8)
		x.xxx_hidden_ManufacturerName = b.ManufacturerName
	}
	if b.ManufacturerAddress != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 8)
		x.xxx_hidden_ManufacturerAddress = b.ManufacturerAddress
	}
	if b.PartNumber != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 8)
		x.xxx_hidden_PartNumber = b.PartNumber
	}
	if b.SerialNumber != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 8)
		x.xxx_hidden_SerialNumber = b.SerialNumber
	}
	if b.SoftwareVersion != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 8)
		x.xxx_hidden_SoftwareVersion = b.SoftwareVersion
	}
	if b.SoftwareInstallationDateSeconds != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 8)
		x.xxx_hidden_SoftwareInstallationDateSeconds = *b.SoftwareInstallationDateSeconds
	}
	if b.ManufacturingDateSeconds != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 8)
		x.xxx_hidden_ManufacturingDateSeconds = *b.ManufacturingDateSeconds
	}
	if b.ApprovalNumber != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 8)
		x.xxx_hidden_ApprovalNumber = b.ApprovalNumber
	}
	return m0
}

type TechnicalDataGen2_PairedSensor struct {
	state                         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_SerialNumber       *string                `protobuf:"bytes,1,opt,name=serial_number,json=serialNumber"`
	xxx_hidden_ApprovalNumber     *string                `protobuf:"bytes,2,opt,name=approval_number,json=approvalNumber"`
	xxx_hidden_PairingDateSeconds uint32                 `protobuf:"varint,3,opt,name=pairing_date_seconds,json=pairingDateSeconds"`
	XXX_raceDetectHookData        protoimpl.RaceDetectHookData
	XXX_presence                  [1]uint32
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *TechnicalDataGen2_PairedSensor) Reset() {
	*x = TechnicalDataGen2_PairedSensor{}
	mi := &file_wayplatform_connect_tachograph_vu_v1_technical_data_gen2_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TechnicalDataGen2_PairedSensor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TechnicalDataGen2_PairedSensor) ProtoMessage() {}

func (x *TechnicalDataGen2_PairedSensor) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_vu_v1_technical_data_gen2_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TechnicalDataGen2_PairedSensor) GetSerialNumber() string {
	if x != nil {
		if x.xxx_hidden_SerialNumber != nil {
			return *x.xxx_hidden_SerialNumber
		}
		return ""
	}
	return ""
}

func (x *TechnicalDataGen2_PairedSensor) GetApprovalNumber() string {
	if x != nil {
		if x.xxx_hidden_ApprovalNumber != nil {
			return *x.xxx_hidden_ApprovalNumber
		}
		return ""
	}
	return ""
}

func (x *TechnicalDataGen2_PairedSensor) GetPairingDateSeconds() uint32 {
	if x != nil {
		return x.xxx_hidden_PairingDateSeconds
	}
	return 0
}

func (x *TechnicalDataGen2_PairedSensor) SetSerialNumber(v string) {
	x.xxx_hidden_SerialNumber = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *TechnicalDataGen2_PairedSensor) SetApprovalNumber(v string) {
	x.xxx_hidden_ApprovalNumber = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *TechnicalDataGen2_PairedSensor) SetPairingDateSeconds(v uint32) {
	x.xxx_hidden_PairingDateSeconds = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *TechnicalDataGen2_PairedSensor) HasSerialNumber() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *TechnicalDataGen2_PairedSensor) HasApprovalNumber() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *TechnicalDataGen2_PairedSensor) HasPairingDateSeconds() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *TechnicalDataGen2_PairedSensor) ClearSerialNumber() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_SerialNumber = nil
}

func (x *TechnicalDataGen2_PairedSensor) ClearApprovalNumber() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ApprovalNumber = nil
}

func (x *TechnicalDataGen2_PairedSensor) ClearPairingDateSeconds() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_PairingDateSeconds = 0
}

type TechnicalDataGen2_PairedSensor_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// See Appendix 1, 2.145
	SerialNumber       *string
	ApprovalNumber     *string
	PairingDateSeconds *uint32
}

func (b0 TechnicalDataGen2_PairedSensor_builder) Build() *TechnicalDataGen2_PairedSensor {
	m0 := &TechnicalDataGen2_PairedSensor{}
	b, x := &b0, m0
	_, _ = b, x
	if b.SerialNumber != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_SerialNumber = b.SerialNumber
	}
	if b.ApprovalNumber != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_ApprovalNumber = b.ApprovalNumber
	}
	if b.PairingDateSeconds != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_PairingDateSeconds = *b.PairingDateSeconds
	}
	return m0
}

type TechnicalDataGen2_CoupledGnss struct {
	state                          protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_SerialNumber        *string                `protobuf:"bytes,1,opt,name=serial_number,json=serialNumber"`
	xxx_hidden_ApprovalNumber      *string                `protobuf:"bytes,2,opt,name=approval_number,json=approvalNumber"`
	xxx_hidden_CouplingDateSeconds uint32                 `protobuf:"varint,3,opt,name=coupling_date_seconds,json=couplingDateSeconds"`
	XXX_raceDetectHookData         protoimpl.RaceDetectHookData
	XXX_presence                   [1]uint32
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *TechnicalDataGen2_CoupledGnss) Reset() {
	*x = TechnicalDataGen2_CoupledGnss{}
	mi := &file_wayplatform_connect_tachograph_vu_v1_technical_data_gen2_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TechnicalDataGen2_CoupledGnss) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TechnicalDataGen2_CoupledGnss) ProtoMessage() {}

func (x *TechnicalDataGen2_CoupledGnss) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_vu_v1_technical_data_gen2_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TechnicalDataGen2_CoupledGnss) GetSerialNumber() string {
	if x != nil {
		if x.xxx_hidden_SerialNumber != nil {
			return *x.xxx_hidden_SerialNumber
		}
		return ""
	}
	return ""
}

func (x *TechnicalDataGen2_CoupledGnss) GetApprovalNumber() string {
	if x != nil {
		if x.xxx_hidden_ApprovalNumber != nil {
			return *x.xxx_hidden_ApprovalNumber
		}
		return ""
	}
	return ""
}

func (x *TechnicalDataGen2_CoupledGnss) GetCouplingDateSeconds() uint32 {
	if x != nil {
		return x.xxx_hidden_CouplingDateSeconds
	}
	return 0
}

func (x *TechnicalDataGen2_CoupledGnss) SetSerialNumber(v string) {
	x.xxx_hidden_SerialNumber = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *TechnicalDataGen2_CoupledGnss) SetApprovalNumber(v string) {
	x.xxx_hidden_ApprovalNumber = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *TechnicalDataGen2_CoupledGnss) SetCouplingDateSeconds(v uint32) {
	x.xxx_hidden_CouplingDateSeconds = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *TechnicalDataGen2_CoupledGnss) HasSerialNumber() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *TechnicalDataGen2_CoupledGnss) HasApprovalNumber() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *TechnicalDataGen2_CoupledGnss) HasCouplingDateSeconds() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *TechnicalDataGen2_CoupledGnss) ClearSerialNumber() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_SerialNumber = nil
}

func (x *TechnicalDataGen2_CoupledGnss) ClearApprovalNumber() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ApprovalNumber = nil
}

func (x *TechnicalDataGen2_CoupledGnss) ClearCouplingDateSeconds() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_CouplingDateSeconds = 0
}

type TechnicalDataGen2_CoupledGnss_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// See Appendix 1, 2.133
	SerialNumber        *string
	ApprovalNumber      *string
	CouplingDateSeconds *uint32
}

func (b0 TechnicalDataGen2_CoupledGnss_builder) Build() *TechnicalDataGen2_CoupledGnss {
	m0 := &TechnicalDataGen2_CoupledGnss{}
	b, x := &b0, m0
	_, _ = b, x
	if b.SerialNumber != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_SerialNumber = b.SerialNumber
	}
	if b.ApprovalNumber != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_ApprovalNumber = b.ApprovalNumber
	}
	if b.CouplingDateSeconds != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_CouplingDateSeconds = *b.CouplingDateSeconds
	}
	return m0
}

type TechnicalDataGen2_CalibrationRecord struct {
	state                                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Purpose                        uint32                 `protobuf:"varint,1,opt,name=purpose"`
	xxx_hidden_WorkshopName                   *string                `protobuf:"bytes,2,opt,name=workshop_name,json=workshopName"`
	xxx_hidden_WorkshopAddress                *string                `protobuf:"bytes,3,opt,name=workshop_address,json=workshopAddress"`
	xxx_hidden_WorkshopCardNumber             *string                `protobuf:"bytes,4,opt,name=workshop_card_number,json=workshopCardNumber"`
	xxx_hidden_WorkshopCardExpiryDate         uint32                 `protobuf:"varint,5,opt,name=workshop_card_expiry_date,json=workshopCardExpiryDate"`
	xxx_hidden_Vin                            *string                `protobuf:"bytes,6,opt,name=vin"`
	xxx_hidden_Vrn                            *string                `protobuf:"bytes,7,opt,name=vrn"`
	xxx_hidden_RegisteringNation              uint32                 `protobuf:"varint,8,opt,name=registering_nation,json=registeringNation"`
	xxx_hidden_WVehicleCharacteristicConstant uint32                 `protobuf:"varint,9,opt,name=w_vehicle_characteristic_constant,json=wVehicleCharacteristicConstant"`
	xxx_hidden_KConstantOfRecordingEquipment  uint32                 `protobuf:"varint,10,opt,name=k_constant_of_recording_equipment,json=kConstantOfRecordingEquipment"`
	xxx_hidden_LTyreCircumferenceMm           uint32                 `protobuf:"varint,11,opt,name=l_tyre_circumference_mm,json=lTyreCircumferenceMm"`
	xxx_hidden_TyreSize                       *string                `protobuf:"bytes,12,opt,name=tyre_size,json=tyreSize"`
	xxx_hidden_AuthorisedSpeedKmph            uint32                 `protobuf:"varint,13,opt,name=authorised_speed_kmph,json=authorisedSpeedKmph"`
	xxx_hidden_OldOdometerValueKm             uint32                 `protobuf:"varint,14,opt,name=old_odometer_value_km,json=oldOdometerValueKm"`
	xxx_hidden_NewOdometerValueKm             uint32                 `protobuf:"varint,15,opt,name=new_odometer_value_km,json=newOdometerValueKm"`
	xxx_hidden_OldTimeValueSeconds            uint32                 `protobuf:"varint,16,opt,name=old_time_value_seconds,json=oldTimeValueSeconds"`
	xxx_hidden_NewTimeValueSeconds            uint32                 `protobuf:"varint,17,opt,name=new_time_value_seconds,json=newTimeValueSeconds"`
	xxx_hidden_NextCalibrationDateSeconds     uint32                 `protobuf:"varint,18,opt,name=next_calibration_date_seconds,json=nextCalibrationDateSeconds"`
	XXX_raceDetectHookData                    protoimpl.RaceDetectHookData
	XXX_presence                              [1]uint32
	unknownFields                             protoimpl.UnknownFields
	sizeCache                                 protoimpl.SizeCache
}

func (x *TechnicalDataGen2_CalibrationRecord) Reset() {
	*x = TechnicalDataGen2_CalibrationRecord{}
	mi := &file_wayplatform_connect_tachograph_vu_v1_technical_data_gen2_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TechnicalDataGen2_CalibrationRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TechnicalDataGen2_CalibrationRecord) ProtoMessage() {}

func (x *TechnicalDataGen2_CalibrationRecord) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_vu_v1_technical_data_gen2_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TechnicalDataGen2_CalibrationRecord) GetPurpose() uint32 {
	if x != nil {
		return x.xxx_hidden_Purpose
	}
	return 0
}

func (x *TechnicalDataGen2_CalibrationRecord) GetWorkshopName() string {
	if x != nil {
		if x.xxx_hidden_WorkshopName != nil {
			return *x.xxx_hidden_WorkshopName
		}
		return ""
	}
	return ""
}

func (x *TechnicalDataGen2_CalibrationRecord) GetWorkshopAddress() string {
	if x != nil {
		if x.xxx_hidden_WorkshopAddress != nil {
			return *x.xxx_hidden_WorkshopAddress
		}
		return ""
	}
	return ""
}

func (x *TechnicalDataGen2_CalibrationRecord) GetWorkshopCardNumber() string {
	if x != nil {
		if x.xxx_hidden_WorkshopCardNumber != nil {
			return *x.xxx_hidden_WorkshopCardNumber
		}
		return ""
	}
	return ""
}

func (x *TechnicalDataGen2_CalibrationRecord) GetWorkshopCardExpiryDate() uint32 {
	if x != nil {
		return x.xxx_hidden_WorkshopCardExpiryDate
	}
	return 0
}

func (x *TechnicalDataGen2_CalibrationRecord) GetVin() string {
	if x != nil {
		if x.xxx_hidden_Vin != nil {
			return *x.xxx_hidden_Vin
		}
		return ""
	}
	return ""
}

func (x *TechnicalDataGen2_CalibrationRecord) GetVrn() string {
	if x != nil {
		if x.xxx_hidden_Vrn != nil {
			return *x.xxx_hidden_Vrn
		}
		return ""
	}
	return ""
}

func (x *TechnicalDataGen2_CalibrationRecord) GetRegisteringNation() uint32 {
	if x != nil {
		return x.xxx_hidden_RegisteringNation
	}
	return 0
}

func (x *TechnicalDataGen2_CalibrationRecord) GetWVehicleCharacteristicConstant() uint32 {
	if x != nil {
		return x.xxx_hidden_WVehicleCharacteristicConstant
	}
	return 0
}

func (x *TechnicalDataGen2_CalibrationRecord) GetKConstantOfRecordingEquipment() uint32 {
	if x != nil {
		return x.xxx_hidden_KConstantOfRecordingEquipment
	}
	return 0
}

func (x *TechnicalDataGen2_CalibrationRecord) GetLTyreCircumferenceMm() uint32 {
	if x != nil {
		return x.xxx_hidden_LTyreCircumferenceMm
	}
	return 0
}

func (x *TechnicalDataGen2_CalibrationRecord) GetTyreSize() string {
	if x != nil {
		if x.xxx_hidden_TyreSize != nil {
			return *x.xxx_hidden_TyreSize
		}
		return ""
	}
	return ""
}

func (x *TechnicalDataGen2_CalibrationRecord) GetAuthorisedSpeedKmph() uint32 {
	if x != nil {
		return x.xxx_hidden_AuthorisedSpeedKmph
	}
	return 0
}

func (x *TechnicalDataGen2_CalibrationRecord) GetOldOdometerValueKm() uint32 {
	if x != nil {
		return x.xxx_hidden_OldOdometerValueKm
	}
	return 0
}

func (x *TechnicalDataGen2_CalibrationRecord) GetNewOdometerValueKm() uint32 {
	if x != nil {
		return x.xxx_hidden_NewOdometerValueKm
	}
	return 0
}

func (x *TechnicalDataGen2_CalibrationRecord) GetOldTimeValueSeconds() uint32 {
	if x != nil {
		return x.xxx_hidden_OldTimeValueSeconds
	}
	return 0
}

func (x *TechnicalDataGen2_CalibrationRecord) GetNewTimeValueSeconds() uint32 {
	if x != nil {
		return x.xxx_hidden_NewTimeValueSeconds
	}
	return 0
}

func (x *TechnicalDataGen2_CalibrationRecord) GetNextCalibrationDateSeconds() uint32 {
	if x != nil {
		return x.xxx_hidden_NextCalibrationDateSeconds
	}
	return 0
}

func (x *TechnicalDataGen2_CalibrationRecord) SetPurpose(v uint32) {
	x.xxx_hidden_Purpose = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 18)
}

func (x *TechnicalDataGen2_CalibrationRecord) SetWorkshopName(v string) {
	x.xxx_hidden_WorkshopName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 18)
}

func (x *TechnicalDataGen2_CalibrationRecord) SetWorkshopAddress(v string) {
	x.xxx_hidden_WorkshopAddress = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 18)
}

func (x *TechnicalDataGen2_CalibrationRecord) SetWorkshopCardNumber(v string) {
	x.xxx_hidden_WorkshopCardNumber = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 18)
}

func (x *TechnicalDataGen2_CalibrationRecord) SetWorkshopCardExpiryDate(v uint32) {
	x.xxx_hidden_WorkshopCardExpiryDate = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 18)
}

func (x *TechnicalDataGen2_CalibrationRecord) SetVin(v string) {
	x.xxx_hidden_Vin = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 18)
}

func (x *TechnicalDataGen2_CalibrationRecord) SetVrn(v string) {
	x.xxx_hidden_Vrn = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 18)
}

func (x *TechnicalDataGen2_CalibrationRecord) SetRegisteringNation(v uint32) {
	x.xxx_hidden_RegisteringNation = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 18)
}

func (x *TechnicalDataGen2_CalibrationRecord) SetWVehicleCharacteristicConstant(v uint32) {
	x.xxx_hidden_WVehicleCharacteristicConstant = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 18)
}

func (x *TechnicalDataGen2_CalibrationRecord) SetKConstantOfRecordingEquipment(v uint32) {
	x.xxx_hidden_KConstantOfRecordingEquipment = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 18)
}

func (x *TechnicalDataGen2_CalibrationRecord) SetLTyreCircumferenceMm(v uint32) {
	x.xxx_hidden_LTyreCircumferenceMm = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 10, 18)
}

func (x *TechnicalDataGen2_CalibrationRecord) SetTyreSize(v string) {
	x.xxx_hidden_TyreSize = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 11, 18)
}

func (x *TechnicalDataGen2_CalibrationRecord) SetAuthorisedSpeedKmph(v uint32) {
	x.xxx_hidden_AuthorisedSpeedKmph = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 12, 18)
}

func (x *TechnicalDataGen2_CalibrationRecord) SetOldOdometerValueKm(v uint32) {
	x.xxx_hidden_OldOdometerValueKm = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 13, 18)
}

func (x *TechnicalDataGen2_CalibrationRecord) SetNewOdometerValueKm(v uint32) {
	x.xxx_hidden_NewOdometerValueKm = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 14, 18)
}

func (x *TechnicalDataGen2_CalibrationRecord) SetOldTimeValueSeconds(v uint32) {
	x.xxx_hidden_OldTimeValueSeconds = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 15, 18)
}

func (x *TechnicalDataGen2_CalibrationRecord) SetNewTimeValueSeconds(v uint32) {
	x.xxx_hidden_NewTimeValueSeconds = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 16, 18)
}

func (x *TechnicalDataGen2_CalibrationRecord) SetNextCalibrationDateSeconds(v uint32) {
	x.xxx_hidden_NextCalibrationDateSeconds = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 17, 18)
}

func (x *TechnicalDataGen2_CalibrationRecord) HasPurpose() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *TechnicalDataGen2_CalibrationRecord) HasWorkshopName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *TechnicalDataGen2_CalibrationRecord) HasWorkshopAddress() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *TechnicalDataGen2_CalibrationRecord) HasWorkshopCardNumber() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *TechnicalDataGen2_CalibrationRecord) HasWorkshopCardExpiryDate() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *TechnicalDataGen2_CalibrationRecord) HasVin() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *TechnicalDataGen2_CalibrationRecord) HasVrn() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *TechnicalDataGen2_CalibrationRecord) HasRegisteringNation() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *TechnicalDataGen2_CalibrationRecord) HasWVehicleCharacteristicConstant() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *TechnicalDataGen2_CalibrationRecord) HasKConstantOfRecordingEquipment() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *TechnicalDataGen2_CalibrationRecord) HasLTyreCircumferenceMm() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 10)
}

func (x *TechnicalDataGen2_CalibrationRecord) HasTyreSize() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 11)
}

func (x *TechnicalDataGen2_CalibrationRecord) HasAuthorisedSpeedKmph() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 12)
}

func (x *TechnicalDataGen2_CalibrationRecord) HasOldOdometerValueKm() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 13)
}

func (x *TechnicalDataGen2_CalibrationRecord) HasNewOdometerValueKm() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 14)
}

func (x *TechnicalDataGen2_CalibrationRecord) HasOldTimeValueSeconds() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 15)
}

func (x *TechnicalDataGen2_CalibrationRecord) HasNewTimeValueSeconds() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 16)
}

func (x *TechnicalDataGen2_CalibrationRecord) HasNextCalibrationDateSeconds() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 17)
}

func (x *TechnicalDataGen2_CalibrationRecord) ClearPurpose() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Purpose = 0
}

func (x *TechnicalDataGen2_CalibrationRecord) ClearWorkshopName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_WorkshopName = nil
}

func (x *TechnicalDataGen2_CalibrationRecord) ClearWorkshopAddress() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_WorkshopAddress = nil
}

func (x *TechnicalDataGen2_CalibrationRecord) ClearWorkshopCardNumber() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_WorkshopCardNumber = nil
}

func (x *TechnicalDataGen2_CalibrationRecord) ClearWorkshopCardExpiryDate() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_WorkshopCardExpiryDate = 0
}

func (x *TechnicalDataGen2_CalibrationRecord) ClearVin() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Vin = nil
}

func (x *TechnicalDataGen2_CalibrationRecord) ClearVrn() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_Vrn = nil
}

func (x *TechnicalDataGen2_CalibrationRecord) ClearRegisteringNation() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_RegisteringNation = 0
}

func (x *TechnicalDataGen2_CalibrationRecord) ClearWVehicleCharacteristicConstant() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_WVehicleCharacteristicConstant = 0
}

func (x *TechnicalDataGen2_CalibrationRecord) ClearKConstantOfRecordingEquipment() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_KConstantOfRecordingEquipment = 0
}

func (x *TechnicalDataGen2_CalibrationRecord) ClearLTyreCircumferenceMm() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 10)
	x.xxx_hidden_LTyreCircumferenceMm = 0
}

func (x *TechnicalDataGen2_CalibrationRecord) ClearTyreSize() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 11)
	x.xxx_hidden_TyreSize = nil
}

func (x *TechnicalDataGen2_CalibrationRecord) ClearAuthorisedSpeedKmph() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 12)
	x.xxx_hidden_AuthorisedSpeedKmph = 0
}

func (x *TechnicalDataGen2_CalibrationRecord) ClearOldOdometerValueKm() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 13)
	x.xxx_hidden_OldOdometerValueKm = 0
}

func (x *TechnicalDataGen2_CalibrationRecord) ClearNewOdometerValueKm() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 14)
	x.xxx_hidden_NewOdometerValueKm = 0
}

func (x *TechnicalDataGen2_CalibrationRecord) ClearOldTimeValueSeconds() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 15)
	x.xxx_hidden_OldTimeValueSeconds = 0
}

func (x *TechnicalDataGen2_CalibrationRecord) ClearNewTimeValueSeconds() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 16)
	x.xxx_hidden_NewTimeValueSeconds = 0
}

func (x *TechnicalDataGen2_CalibrationRecord) ClearNextCalibrationDateSeconds() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 17)
	x.xxx_hidden_NextCalibrationDateSeconds = 0
}

type TechnicalDataGen2_CalibrationRecord_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// See Appendix 1, 2.174
	Purpose                        *uint32
	WorkshopName                   *string
	WorkshopAddress                *string
	WorkshopCardNumber             *string
	WorkshopCardExpiryDate         *uint32
	Vin                            *string
	Vrn                            *string
	RegisteringNation              *uint32
	WVehicleCharacteristicConstant *uint32
	KConstantOfRecordingEquipment  *uint32
	LTyreCircumferenceMm           *uint32
	TyreSize                       *string
	AuthorisedSpeedKmph            *uint32
	OldOdometerValueKm             *uint32
	NewOdometerValueKm             *uint32
	OldTimeValueSeconds            *uint32
	NewTimeValueSeconds            *uint32
	NextCalibrationDateSeconds     *uint32
}

func (b0 TechnicalDataGen2_CalibrationRecord_builder) Build() *TechnicalDataGen2_CalibrationRecord {
	m0 := &TechnicalDataGen2_CalibrationRecord{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Purpose != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 18)
		x.xxx_hidden_Purpose = *b.Purpose
	}
	if b.WorkshopName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 18)
		x.xxx_hidden_WorkshopName = b.WorkshopName
	}
	if b.WorkshopAddress != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 18)
		x.xxx_hidden_WorkshopAddress = b.WorkshopAddress
	}
	if b.WorkshopCardNumber != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 18)
		x.xxx_hidden_WorkshopCardNumber = b.WorkshopCardNumber
	}
	if b.WorkshopCardExpiryDate != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 18)
		x.xxx_hidden_WorkshopCardExpiryDate = *b.WorkshopCardExpiryDate
	}
	if b.Vin != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 18)
		x.xxx_hidden_Vin = b.Vin
	}
	if b.Vrn != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 18)
		x.xxx_hidden_Vrn = b.Vrn
	}
	if b.RegisteringNation != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 18)
		x.xxx_hidden_RegisteringNation = *b.RegisteringNation
	}
	if b.WVehicleCharacteristicConstant != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 18)
		x.xxx_hidden_WVehicleCharacteristicConstant = *b.WVehicleCharacteristicConstant
	}
	if b.KConstantOfRecordingEquipment != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 18)
		x.xxx_hidden_KConstantOfRecordingEquipment = *b.KConstantOfRecordingEquipment
	}
	if b.LTyreCircumferenceMm != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 10, 18)
		x.xxx_hidden_LTyreCircumferenceMm = *b.LTyreCircumferenceMm
	}
	if b.TyreSize != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 11, 18)
		x.xxx_hidden_TyreSize = b.TyreSize
	}
	if b.AuthorisedSpeedKmph != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 12, 18)
		x.xxx_hidden_AuthorisedSpeedKmph = *b.AuthorisedSpeedKmph
	}
	if b.OldOdometerValueKm != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 13, 18)
		x.xxx_hidden_OldOdometerValueKm = *b.OldOdometerValueKm
	}
	if b.NewOdometerValueKm != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 14, 18)
		x.xxx_hidden_NewOdometerValueKm = *b.NewOdometerValueKm
	}
	if b.OldTimeValueSeconds != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 15, 18)
		x.xxx_hidden_OldTimeValueSeconds = *b.OldTimeValueSeconds
	}
	if b.NewTimeValueSeconds != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 16, 18)
		x.xxx_hidden_NewTimeValueSeconds = *b.NewTimeValueSeconds
	}
	if b.NextCalibrationDateSeconds != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 17, 18)
		x.xxx_hidden_NextCalibrationDateSeconds = *b.NextCalibrationDateSeconds
	}
	return m0
}

type TechnicalDataGen2_CardRecord struct {
	state                           protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_FullCardNumber       *string                `protobuf:"bytes,1,opt,name=full_card_number,json=fullCardNumber"`
	xxx_hidden_CardStructureVersion []byte                 `protobuf:"bytes,2,opt,name=card_structure_version,json=cardStructureVersion"`
	xxx_hidden_CardType             uint32                 `protobuf:"varint,3,opt,name=card_type,json=cardType"`
	XXX_raceDetectHookData          protoimpl.RaceDetectHookData
	XXX_presence                    [1]uint32
	unknownFields                   protoimpl.UnknownFields
	sizeCache                       protoimpl.SizeCache
}

func (x *TechnicalDataGen2_CardRecord) Reset() {
	*x = TechnicalDataGen2_CardRecord{}
	mi := &file_wayplatform_connect_tachograph_vu_v1_technical_data_gen2_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TechnicalDataGen2_CardRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TechnicalDataGen2_CardRecord) ProtoMessage() {}

func (x *TechnicalDataGen2_CardRecord) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_vu_v1_technical_data_gen2_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TechnicalDataGen2_CardRecord) GetFullCardNumber() string {
	if x != nil {
		if x.xxx_hidden_FullCardNumber != nil {
			return *x.xxx_hidden_FullCardNumber
		}
		return ""
	}
	return ""
}

func (x *TechnicalDataGen2_CardRecord) GetCardStructureVersion() []byte {
	if x != nil {
		return x.xxx_hidden_CardStructureVersion
	}
	return nil
}

func (x *TechnicalDataGen2_CardRecord) GetCardType() uint32 {
	if x != nil {
		return x.xxx_hidden_CardType
	}
	return 0
}

func (x *TechnicalDataGen2_CardRecord) SetFullCardNumber(v string) {
	x.xxx_hidden_FullCardNumber = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *TechnicalDataGen2_CardRecord) SetCardStructureVersion(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_CardStructureVersion = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *TechnicalDataGen2_CardRecord) SetCardType(v uint32) {
	x.xxx_hidden_CardType = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *TechnicalDataGen2_CardRecord) HasFullCardNumber() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *TechnicalDataGen2_CardRecord) HasCardStructureVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *TechnicalDataGen2_CardRecord) HasCardType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *TechnicalDataGen2_CardRecord) ClearFullCardNumber() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_FullCardNumber = nil
}

func (x *TechnicalDataGen2_CardRecord) ClearCardStructureVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_CardStructureVersion = nil
}

func (x *TechnicalDataGen2_CardRecord) ClearCardType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_CardType = 0
}

type TechnicalDataGen2_CardRecord_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// See Appendix 1, 2.179
	FullCardNumber       *string
	CardStructureVersion []byte
	CardType             *uint32
}

func (b0 TechnicalDataGen2_CardRecord_builder) Build() *TechnicalDataGen2_CardRecord {
	m0 := &TechnicalDataGen2_CardRecord{}
	b, x := &b0, m0
	_, _ = b, x
	if b.FullCardNumber != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_FullCardNumber = b.FullCardNumber
	}
	if b.CardStructureVersion != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_CardStructureVersion = b.CardStructureVersion
	}
	if b.CardType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_CardType = *b.CardType
	}
	return m0
}

type TechnicalDataGen2_ItsConsentRecord struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_FullCardNumber *string                `protobuf:"bytes,1,opt,name=full_card_number,json=fullCardNumber"`
	xxx_hidden_ConsentStatus  uint32                 `protobuf:"varint,2,opt,name=consent_status,json=consentStatus"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *TechnicalDataGen2_ItsConsentRecord) Reset() {
	*x = TechnicalDataGen2_ItsConsentRecord{}
	mi := &file_wayplatform_connect_tachograph_vu_v1_technical_data_gen2_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TechnicalDataGen2_ItsConsentRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TechnicalDataGen2_ItsConsentRecord) ProtoMessage() {}

func (x *TechnicalDataGen2_ItsConsentRecord) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_vu_v1_technical_data_gen2_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TechnicalDataGen2_ItsConsentRecord) GetFullCardNumber() string {
	if x != nil {
		if x.xxx_hidden_FullCardNumber != nil {
			return *x.xxx_hidden_FullCardNumber
		}
		return ""
	}
	return ""
}

func (x *TechnicalDataGen2_ItsConsentRecord) GetConsentStatus() uint32 {
	if x != nil {
		return x.xxx_hidden_ConsentStatus
	}
	return 0
}

func (x *TechnicalDataGen2_ItsConsentRecord) SetFullCardNumber(v string) {
	x.xxx_hidden_FullCardNumber = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *TechnicalDataGen2_ItsConsentRecord) SetConsentStatus(v uint32) {
	x.xxx_hidden_ConsentStatus = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *TechnicalDataGen2_ItsConsentRecord) HasFullCardNumber() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *TechnicalDataGen2_ItsConsentRecord) HasConsentStatus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *TechnicalDataGen2_ItsConsentRecord) ClearFullCardNumber() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_FullCardNumber = nil
}

func (x *TechnicalDataGen2_ItsConsentRecord) ClearConsentStatus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ConsentStatus = 0
}

type TechnicalDataGen2_ItsConsentRecord_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// See Appendix 1, 2.207
	FullCardNumber *string
	ConsentStatus  *uint32
}

func (b0 TechnicalDataGen2_ItsConsentRecord_builder) Build() *TechnicalDataGen2_ItsConsentRecord {
	m0 := &TechnicalDataGen2_ItsConsentRecord{}
	b, x := &b0, m0
	_, _ = b, x
	if b.FullCardNumber != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_FullCardNumber = b.FullCardNumber
	}
	if b.ConsentStatus != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_ConsentStatus = *b.ConsentStatus
	}
	return m0
}

type TechnicalDataGen2_PowerSupplyInterruptionRecord struct {
	state                       protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_TimestampSeconds uint32                 `protobuf:"varint,1,opt,name=timestamp_seconds,json=timestampSeconds"`
	xxx_hidden_CardSlotNumber   uint32                 `protobuf:"varint,2,opt,name=card_slot_number,json=cardSlotNumber"`
	XXX_raceDetectHookData      protoimpl.RaceDetectHookData
	XXX_presence                [1]uint32
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *TechnicalDataGen2_PowerSupplyInterruptionRecord) Reset() {
	*x = TechnicalDataGen2_PowerSupplyInterruptionRecord{}
	mi := &file_wayplatform_connect_tachograph_vu_v1_technical_data_gen2_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TechnicalDataGen2_PowerSupplyInterruptionRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TechnicalDataGen2_PowerSupplyInterruptionRecord) ProtoMessage() {}

func (x *TechnicalDataGen2_PowerSupplyInterruptionRecord) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_vu_v1_technical_data_gen2_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TechnicalDataGen2_PowerSupplyInterruptionRecord) GetTimestampSeconds() uint32 {
	if x != nil {
		return x.xxx_hidden_TimestampSeconds
	}
	return 0
}

func (x *TechnicalDataGen2_PowerSupplyInterruptionRecord) GetCardSlotNumber() uint32 {
	if x != nil {
		return x.xxx_hidden_CardSlotNumber
	}
	return 0
}

func (x *TechnicalDataGen2_PowerSupplyInterruptionRecord) SetTimestampSeconds(v uint32) {
	x.xxx_hidden_TimestampSeconds = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *TechnicalDataGen2_PowerSupplyInterruptionRecord) SetCardSlotNumber(v uint32) {
	x.xxx_hidden_CardSlotNumber = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *TechnicalDataGen2_PowerSupplyInterruptionRecord) HasTimestampSeconds() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *TechnicalDataGen2_PowerSupplyInterruptionRecord) HasCardSlotNumber() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *TechnicalDataGen2_PowerSupplyInterruptionRecord) ClearTimestampSeconds() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_TimestampSeconds = 0
}

func (x *TechnicalDataGen2_PowerSupplyInterruptionRecord) ClearCardSlotNumber() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_CardSlotNumber = 0
}

type TechnicalDataGen2_PowerSupplyInterruptionRecord_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// See Appendix 1, 2.240
	TimestampSeconds *uint32
	CardSlotNumber   *uint32
}

func (b0 TechnicalDataGen2_PowerSupplyInterruptionRecord_builder) Build() *TechnicalDataGen2_PowerSupplyInterruptionRecord {
	m0 := &TechnicalDataGen2_PowerSupplyInterruptionRecord{}
	b, x := &b0, m0
	_, _ = b, x
	if b.TimestampSeconds != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_TimestampSeconds = *b.TimestampSeconds
	}
	if b.CardSlotNumber != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_CardSlotNumber = *b.CardSlotNumber
	}
	return m0
}

var File_wayplatform_connect_tachograph_vu_v1_technical_data_gen2_proto protoreflect.FileDescriptor

const file_wayplatform_connect_tachograph_vu_v1_technical_data_gen2_proto_rawDesc = "" +
	"\n" +
	">wayplatform/connect/tachograph/vu/v1/technical_data_gen2.proto\x12$wayplatform.connect.tachograph.vu.v1\"\x9b\x16\n" +
	"\x11TechnicalDataGen2\x12u\n" +
	"\x11vu_identification\x18\x01 \x01(\v2H.wayplatform.connect.tachograph.vu.v1.TechnicalDataGen2.VuIdentificationR\x10vuIdentification\x12k\n" +
	"\x0epaired_sensors\x18\x02 \x03(\v2D.wayplatform.connect.tachograph.vu.v1.TechnicalDataGen2.PairedSensorR\rpairedSensors\x12{\n" +
	"\x17coupled_gnss_facilities\x18\x03 \x03(\v2C.wayplatform.connect.tachograph.vu.v1.TechnicalDataGen2.CoupledGnssR\x15coupledGnssFacilities\x12z\n" +
	"\x13calibration_records\x18\x04 \x03(\v2I.wayplatform.connect.tachograph.vu.v1.TechnicalDataGen2.CalibrationRecordR\x12calibrationRecords\x12e\n" +
	"\fcard_records\x18\x05 \x03(\v2B.wayplatform.connect.tachograph.vu.v1.TechnicalDataGen2.CardRecordR\vcardRecords\x12x\n" +
	"\x13its_consent_records\x18\x06 \x03(\v2H.wayplatform.connect.tachograph.vu.v1.TechnicalDataGen2.ItsConsentRecordR\x11itsConsentRecords\x12\x93\x01\n" +
	"\x1apower_supply_interruptions\x18\a \x03(\v2U.wayplatform.connect.tachograph.vu.v1.TechnicalDataGen2.PowerSupplyInterruptionRecordR\x18powerSupplyInterruptions\x12\x1c\n" +
	"\tsignature\x18\b \x01(\fR\tsignature\x1a\x97\x03\n" +
	"\x10VuIdentification\x12+\n" +
	"\x11manufacturer_name\x18\x01 \x01(\tR\x10manufacturerName\x121\n" +
	"\x14manufacturer_address\x18\x02 \x01(\tR\x13manufacturerAddress\x12\x1f\n" +
	"\vpart_number\x18\x03 \x01(\tR\n" +
	"partNumber\x12#\n" +
	"\rserial_number\x18\x04 \x01(\tR\fserialNumber\x12)\n" +
	"\x10software_version\x18\x05 \x01(\tR\x0fsoftwareVersion\x12K\n" +
	"\"software_installation_date_seconds\x18\x06 \x01(\rR\x1fsoftwareInstallationDateSeconds\x12<\n" +
	"\x1amanufacturing_date_seconds\x18\a \x01(\rR\x18manufacturingDateSeconds\x12'\n" +
	"\x0fapproval_number\x18\b \x01(\tR\x0eapprovalNumber\x1a\x8e\x01\n" +
	"\fPairedSensor\x12#\n" +
	"\rserial_number\x18\x01 \x01(\tR\fserialNumber\x12'\n" +
	"\x0fapproval_number\x18\x02 \x01(\tR\x0eapprovalNumber\x120\n" +
	"\x14pairing_date_seconds\x18\x03 \x01(\rR\x12pairingDateSeconds\x1a\x8f\x01\n" +
	"\vCoupledGnss\x12#\n" +
	"\rserial_number\x18\x01 \x01(\tR\fserialNumber\x12'\n" +
	"\x0fapproval_number\x18\x02 \x01(\tR\x0eapprovalNumber\x122\n" +
	"\x15coupling_date_seconds\x18\x03 \x01(\rR\x13couplingDateSeconds\x1a\xed\x06\n" +
	"\x11CalibrationRecord\x12\x18\n" +
	"\apurpose\x18\x01 \x01(\rR\apurpose\x12#\n" +
	"\rworkshop_name\x18\x02 \x01(\tR\fworkshopName\x12)\n" +
	"\x10workshop_address\x18\x03 \x01(\tR\x0fworkshopAddress\x120\n" +
	"\x14workshop_card_number\x18\x04 \x01(\tR\x12workshopCardNumber\x129\n" +
	"\x19workshop_card_expiry_date\x18\x05 \x01(\rR\x16workshopCardExpiryDate\x12\x10\n" +
	"\x03vin\x18\x06 \x01(\tR\x03vin\x12\x10\n" +
	"\x03vrn\x18\a \x01(\tR\x03vrn\x12-\n" +
	"\x12registering_nation\x18\b \x01(\rR\x11registeringNation\x12I\n" +
	"!w_vehicle_characteristic_constant\x18\t \x01(\rR\x1ewVehicleCharacteristicConstant\x12H\n" +
	"!k_constant_of_recording_equipment\x18\n" +
	" \x01(\rR\x1dkConstantOfRecordingEquipment\x125\n" +
	"\x17l_tyre_circumference_mm\x18\v \x01(\rR\x14lTyreCircumferenceMm\x12\x1b\n" +
	"\ttyre_size\x18\f \x01(\tR\btyreSize\x122\n" +
	"\x15authorised_speed_kmph\x18\r \x01(\rR\x13authorisedSpeedKmph\x121\n" +
	"\x15old_odometer_value_km\x18\x0e \x01(\rR\x12oldOdometerValueKm\x121\n" +
	"\x15new_odometer_value_km\x18\x0f \x01(\rR\x12newOdometerValueKm\x123\n" +
	"\x16old_time_value_seconds\x18\x10 \x01(\rR\x13oldTimeValueSeconds\x123\n" +
	"\x16new_time_value_seconds\x18\x11 \x01(\rR\x13newTimeValueSeconds\x12A\n" +
	"\x1dnext_calibration_date_seconds\x18\x12 \x01(\rR\x1anextCalibrationDateSeconds\x1a\x89\x01\n" +
	"\n" +
	"CardRecord\x12(\n" +
	"\x10full_card_number\x18\x01 \x01(\tR\x0efullCardNumber\x124\n" +
	"\x16card_structure_version\x18\x02 \x01(\fR\x14cardStructureVersion\x12\x1b\n" +
	"\tcard_type\x18\x03 \x01(\rR\bcardType\x1ac\n" +
	"\x10ItsConsentRecord\x12(\n" +
	"\x10full_card_number\x18\x01 \x01(\tR\x0efullCardNumber\x12%\n" +
	"\x0econsent_status\x18\x02 \x01(\rR\rconsentStatus\x1av\n" +
	"\x1dPowerSupplyInterruptionRecord\x12+\n" +
	"\x11timestamp_seconds\x18\x01 \x01(\rR\x10timestampSeconds\x12(\n" +
	"\x10card_slot_number\x18\x02 \x01(\rR\x0ecardSlotNumberB\xd5\x02\n" +
	"(com.wayplatform.connect.tachograph.vu.v1B\x16TechnicalDataGen2ProtoP\x01Z\\github.com/way-platform/tachograph-go/proto/gen/go/wayplatform/connect/tachograph/vu/v1;vuv1\xa2\x02\x04WCTV\xaa\x02$Wayplatform.Connect.Tachograph.Vu.V1\xca\x02$Wayplatform\\Connect\\Tachograph\\Vu\\V1\xe2\x020Wayplatform\\Connect\\Tachograph\\Vu\\V1\\GPBMetadata\xea\x02(Wayplatform::Connect::Tachograph::Vu::V1b\beditionsp\xe8\a"

var file_wayplatform_connect_tachograph_vu_v1_technical_data_gen2_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_wayplatform_connect_tachograph_vu_v1_technical_data_gen2_proto_goTypes = []any{
	(*TechnicalDataGen2)(nil),                               // 0: wayplatform.connect.tachograph.vu.v1.TechnicalDataGen2
	(*TechnicalDataGen2_VuIdentification)(nil),              // 1: wayplatform.connect.tachograph.vu.v1.TechnicalDataGen2.VuIdentification
	(*TechnicalDataGen2_PairedSensor)(nil),                  // 2: wayplatform.connect.tachograph.vu.v1.TechnicalDataGen2.PairedSensor
	(*TechnicalDataGen2_CoupledGnss)(nil),                   // 3: wayplatform.connect.tachograph.vu.v1.TechnicalDataGen2.CoupledGnss
	(*TechnicalDataGen2_CalibrationRecord)(nil),             // 4: wayplatform.connect.tachograph.vu.v1.TechnicalDataGen2.CalibrationRecord
	(*TechnicalDataGen2_CardRecord)(nil),                    // 5: wayplatform.connect.tachograph.vu.v1.TechnicalDataGen2.CardRecord
	(*TechnicalDataGen2_ItsConsentRecord)(nil),              // 6: wayplatform.connect.tachograph.vu.v1.TechnicalDataGen2.ItsConsentRecord
	(*TechnicalDataGen2_PowerSupplyInterruptionRecord)(nil), // 7: wayplatform.connect.tachograph.vu.v1.TechnicalDataGen2.PowerSupplyInterruptionRecord
}
var file_wayplatform_connect_tachograph_vu_v1_technical_data_gen2_proto_depIdxs = []int32{
	1, // 0: wayplatform.connect.tachograph.vu.v1.TechnicalDataGen2.vu_identification:type_name -> wayplatform.connect.tachograph.vu.v1.TechnicalDataGen2.VuIdentification
	2, // 1: wayplatform.connect.tachograph.vu.v1.TechnicalDataGen2.paired_sensors:type_name -> wayplatform.connect.tachograph.vu.v1.TechnicalDataGen2.PairedSensor
	3, // 2: wayplatform.connect.tachograph.vu.v1.TechnicalDataGen2.coupled_gnss_facilities:type_name -> wayplatform.connect.tachograph.vu.v1.TechnicalDataGen2.CoupledGnss
	4, // 3: wayplatform.connect.tachograph.vu.v1.TechnicalDataGen2.calibration_records:type_name -> wayplatform.connect.tachograph.vu.v1.TechnicalDataGen2.CalibrationRecord
	5, // 4: wayplatform.connect.tachograph.vu.v1.TechnicalDataGen2.card_records:type_name -> wayplatform.connect.tachograph.vu.v1.TechnicalDataGen2.CardRecord
	6, // 5: wayplatform.connect.tachograph.vu.v1.TechnicalDataGen2.its_consent_records:type_name -> wayplatform.connect.tachograph.vu.v1.TechnicalDataGen2.ItsConsentRecord
	7, // 6: wayplatform.connect.tachograph.vu.v1.TechnicalDataGen2.power_supply_interruptions:type_name -> wayplatform.connect.tachograph.vu.v1.TechnicalDataGen2.PowerSupplyInterruptionRecord
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_wayplatform_connect_tachograph_vu_v1_technical_data_gen2_proto_init() }
func file_wayplatform_connect_tachograph_vu_v1_technical_data_gen2_proto_init() {
	if File_wayplatform_connect_tachograph_vu_v1_technical_data_gen2_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wayplatform_connect_tachograph_vu_v1_technical_data_gen2_proto_rawDesc), len(file_wayplatform_connect_tachograph_vu_v1_technical_data_gen2_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wayplatform_connect_tachograph_vu_v1_technical_data_gen2_proto_goTypes,
		DependencyIndexes: file_wayplatform_connect_tachograph_vu_v1_technical_data_gen2_proto_depIdxs,
		MessageInfos:      file_wayplatform_connect_tachograph_vu_v1_technical_data_gen2_proto_msgTypes,
	}.Build()
	File_wayplatform_connect_tachograph_vu_v1_technical_data_gen2_proto = out.File
	file_wayplatform_connect_tachograph_vu_v1_technical_data_gen2_proto_goTypes = nil
	file_wayplatform_connect_tachograph_vu_v1_technical_data_gen2_proto_depIdxs = nil
}
