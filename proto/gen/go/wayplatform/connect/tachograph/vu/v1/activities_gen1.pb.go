// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wayplatform/connect/tachograph/vu/v1/activities_gen1.proto

package vuv1

import (
	v1 "github.com/way-platform/tachograph-go/proto/gen/go/wayplatform/connect/tachograph/dd/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Activities data for Generation 1 VU downloads.
//
// See Appendix 7, Section 2.2.6.3 (TREP 02 Hex).
//
// ASN.1 Definition:
//
//	VuActivitiesFirstGen ::= SEQUENCE {
//	    timeReal TimeReal,
//	    odometerValueMidnight OdometerValueMidnight,
//	    vuCardIWData VuCardIWData,
//	    vuActivityDailyData VuActivityDailyData,
//	    vuPlaceDailyWorkPeriodData VuPlaceDailyWorkPeriodData,
//	    vuSpecificConditionData VuSpecificConditionData,
//	    signature SignatureFirstGen
//	}
type ActivitiesGen1 struct {
	state                         protoimpl.MessageState         `protogen:"opaque.v1"`
	xxx_hidden_DateOfDay          *timestamppb.Timestamp         `protobuf:"bytes,1,opt,name=date_of_day,json=dateOfDay"`
	xxx_hidden_OdometerMidnightKm int32                          `protobuf:"varint,2,opt,name=odometer_midnight_km,json=odometerMidnightKm"`
	xxx_hidden_CardIwData         *[]*v1.VuCardIWRecord          `protobuf:"bytes,3,rep,name=card_iw_data,json=cardIwData"`
	xxx_hidden_ActivityChanges    *[]*v1.ActivityChangeInfo      `protobuf:"bytes,4,rep,name=activity_changes,json=activityChanges"`
	xxx_hidden_Places             *[]*ActivitiesGen1_PlaceRecord `protobuf:"bytes,5,rep,name=places"`
	xxx_hidden_SpecificConditions *[]*v1.SpecificConditionRecord `protobuf:"bytes,6,rep,name=specific_conditions,json=specificConditions"`
	xxx_hidden_Signature          []byte                         `protobuf:"bytes,7,opt,name=signature"`
	xxx_hidden_RawData            []byte                         `protobuf:"bytes,8,opt,name=raw_data,json=rawData"`
	XXX_raceDetectHookData        protoimpl.RaceDetectHookData
	XXX_presence                  [1]uint32
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *ActivitiesGen1) Reset() {
	*x = ActivitiesGen1{}
	mi := &file_wayplatform_connect_tachograph_vu_v1_activities_gen1_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivitiesGen1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivitiesGen1) ProtoMessage() {}

func (x *ActivitiesGen1) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_vu_v1_activities_gen1_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ActivitiesGen1) GetDateOfDay() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_DateOfDay
	}
	return nil
}

func (x *ActivitiesGen1) GetOdometerMidnightKm() int32 {
	if x != nil {
		return x.xxx_hidden_OdometerMidnightKm
	}
	return 0
}

func (x *ActivitiesGen1) GetCardIwData() []*v1.VuCardIWRecord {
	if x != nil {
		if x.xxx_hidden_CardIwData != nil {
			return *x.xxx_hidden_CardIwData
		}
	}
	return nil
}

func (x *ActivitiesGen1) GetActivityChanges() []*v1.ActivityChangeInfo {
	if x != nil {
		if x.xxx_hidden_ActivityChanges != nil {
			return *x.xxx_hidden_ActivityChanges
		}
	}
	return nil
}

func (x *ActivitiesGen1) GetPlaces() []*ActivitiesGen1_PlaceRecord {
	if x != nil {
		if x.xxx_hidden_Places != nil {
			return *x.xxx_hidden_Places
		}
	}
	return nil
}

func (x *ActivitiesGen1) GetSpecificConditions() []*v1.SpecificConditionRecord {
	if x != nil {
		if x.xxx_hidden_SpecificConditions != nil {
			return *x.xxx_hidden_SpecificConditions
		}
	}
	return nil
}

func (x *ActivitiesGen1) GetSignature() []byte {
	if x != nil {
		return x.xxx_hidden_Signature
	}
	return nil
}

func (x *ActivitiesGen1) GetRawData() []byte {
	if x != nil {
		return x.xxx_hidden_RawData
	}
	return nil
}

func (x *ActivitiesGen1) SetDateOfDay(v *timestamppb.Timestamp) {
	x.xxx_hidden_DateOfDay = v
}

func (x *ActivitiesGen1) SetOdometerMidnightKm(v int32) {
	x.xxx_hidden_OdometerMidnightKm = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 8)
}

func (x *ActivitiesGen1) SetCardIwData(v []*v1.VuCardIWRecord) {
	x.xxx_hidden_CardIwData = &v
}

func (x *ActivitiesGen1) SetActivityChanges(v []*v1.ActivityChangeInfo) {
	x.xxx_hidden_ActivityChanges = &v
}

func (x *ActivitiesGen1) SetPlaces(v []*ActivitiesGen1_PlaceRecord) {
	x.xxx_hidden_Places = &v
}

func (x *ActivitiesGen1) SetSpecificConditions(v []*v1.SpecificConditionRecord) {
	x.xxx_hidden_SpecificConditions = &v
}

func (x *ActivitiesGen1) SetSignature(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Signature = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 8)
}

func (x *ActivitiesGen1) SetRawData(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_RawData = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 8)
}

func (x *ActivitiesGen1) HasDateOfDay() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DateOfDay != nil
}

func (x *ActivitiesGen1) HasOdometerMidnightKm() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ActivitiesGen1) HasSignature() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *ActivitiesGen1) HasRawData() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *ActivitiesGen1) ClearDateOfDay() {
	x.xxx_hidden_DateOfDay = nil
}

func (x *ActivitiesGen1) ClearOdometerMidnightKm() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_OdometerMidnightKm = 0
}

func (x *ActivitiesGen1) ClearSignature() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_Signature = nil
}

func (x *ActivitiesGen1) ClearRawData() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_RawData = nil
}

type ActivitiesGen1_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Date of the downloaded day.
	//
	// See Data Dictionary, Section 2.162, `TimeReal`.
	DateOfDay *timestamppb.Timestamp
	// Odometer value at midnight in kilometers.
	//
	// See Data Dictionary, Section 2.114, `OdometerValueMidnight`.
	OdometerMidnightKm *int32
	// Card insertion and withdrawal data.
	//
	// See Data Dictionary, Section 2.176, `VuCardIWData`.
	CardIwData []*v1.VuCardIWRecord
	// Driver activity changes.
	//
	// See Data Dictionary, Section 2.170, `VuActivityDailyData`.
	ActivityChanges []*v1.ActivityChangeInfo
	// Daily work period place entries.
	//
	// See Data Dictionary, Section 2.218, `VuPlaceDailyWorkPeriodData`.
	Places []*ActivitiesGen1_PlaceRecord
	// Specific conditions data.
	//
	// See Data Dictionary, Section 2.227, `VuSpecificConditionData`.
	SpecificConditions []*v1.SpecificConditionRecord
	// Signature for Gen1 data (RSA, 128 bytes).
	//
	// See Data Dictionary, Section 2.149, `Signature`.
	Signature []byte
	// The raw, unparsed binary data of the complete Activities transfer value.
	// This field is preserved for data fidelity and lossless round-trips.
	// It includes all data structures and the embedded signature.
	RawData []byte
}

func (b0 ActivitiesGen1_builder) Build() *ActivitiesGen1 {
	m0 := &ActivitiesGen1{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_DateOfDay = b.DateOfDay
	if b.OdometerMidnightKm != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 8)
		x.xxx_hidden_OdometerMidnightKm = *b.OdometerMidnightKm
	}
	x.xxx_hidden_CardIwData = &b.CardIwData
	x.xxx_hidden_ActivityChanges = &b.ActivityChanges
	x.xxx_hidden_Places = &b.Places
	x.xxx_hidden_SpecificConditions = &b.SpecificConditions
	if b.Signature != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 8)
		x.xxx_hidden_Signature = b.Signature
	}
	if b.RawData != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 8)
		x.xxx_hidden_RawData = b.RawData
	}
	return m0
}

// Represents a place record for the beginning or end of a daily work period.
//
// Binary Layout: 10 bytes (Gen1)
//
// See Data Dictionary, Section 2.117, `PlaceRecord`.
//
// ASN.1 Definition:
//
//	PlaceRecord ::= SEQUENCE {
//	    entryTime TimeReal,
//	    entryTypeDailyWorkPeriod EntryTypeDailyWorkPeriod,
//	    dailyWorkPeriodCountry NationNumeric,
//	    dailyWorkPeriodRegion RegionNumeric,
//	    vehicleOdometerValue OdometerShort
//	}
type ActivitiesGen1_PlaceRecord struct {
	state                  protoimpl.MessageState      `protogen:"opaque.v1"`
	xxx_hidden_EntryTime   *timestamppb.Timestamp      `protobuf:"bytes,1,opt,name=entry_time,json=entryTime"`
	xxx_hidden_EntryType   v1.EntryTypeDailyWorkPeriod `protobuf:"varint,2,opt,name=entry_type,json=entryType,enum=wayplatform.connect.tachograph.dd.v1.EntryTypeDailyWorkPeriod"`
	xxx_hidden_Country     v1.NationNumeric            `protobuf:"varint,3,opt,name=country,enum=wayplatform.connect.tachograph.dd.v1.NationNumeric"`
	xxx_hidden_Region      []byte                      `protobuf:"bytes,4,opt,name=region"`
	xxx_hidden_OdometerKm  int32                       `protobuf:"varint,5,opt,name=odometer_km,json=odometerKm"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ActivitiesGen1_PlaceRecord) Reset() {
	*x = ActivitiesGen1_PlaceRecord{}
	mi := &file_wayplatform_connect_tachograph_vu_v1_activities_gen1_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivitiesGen1_PlaceRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivitiesGen1_PlaceRecord) ProtoMessage() {}

func (x *ActivitiesGen1_PlaceRecord) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_vu_v1_activities_gen1_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ActivitiesGen1_PlaceRecord) GetEntryTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_EntryTime
	}
	return nil
}

func (x *ActivitiesGen1_PlaceRecord) GetEntryType() v1.EntryTypeDailyWorkPeriod {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_EntryType
		}
	}
	return v1.EntryTypeDailyWorkPeriod(0)
}

func (x *ActivitiesGen1_PlaceRecord) GetCountry() v1.NationNumeric {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 2) {
			return x.xxx_hidden_Country
		}
	}
	return v1.NationNumeric(0)
}

func (x *ActivitiesGen1_PlaceRecord) GetRegion() []byte {
	if x != nil {
		return x.xxx_hidden_Region
	}
	return nil
}

func (x *ActivitiesGen1_PlaceRecord) GetOdometerKm() int32 {
	if x != nil {
		return x.xxx_hidden_OdometerKm
	}
	return 0
}

func (x *ActivitiesGen1_PlaceRecord) SetEntryTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_EntryTime = v
}

func (x *ActivitiesGen1_PlaceRecord) SetEntryType(v v1.EntryTypeDailyWorkPeriod) {
	x.xxx_hidden_EntryType = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *ActivitiesGen1_PlaceRecord) SetCountry(v v1.NationNumeric) {
	x.xxx_hidden_Country = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *ActivitiesGen1_PlaceRecord) SetRegion(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Region = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *ActivitiesGen1_PlaceRecord) SetOdometerKm(v int32) {
	x.xxx_hidden_OdometerKm = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *ActivitiesGen1_PlaceRecord) HasEntryTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_EntryTime != nil
}

func (x *ActivitiesGen1_PlaceRecord) HasEntryType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ActivitiesGen1_PlaceRecord) HasCountry() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ActivitiesGen1_PlaceRecord) HasRegion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ActivitiesGen1_PlaceRecord) HasOdometerKm() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *ActivitiesGen1_PlaceRecord) ClearEntryTime() {
	x.xxx_hidden_EntryTime = nil
}

func (x *ActivitiesGen1_PlaceRecord) ClearEntryType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_EntryType = v1.EntryTypeDailyWorkPeriod_ENTRY_TYPE_DAILY_WORK_PERIOD_UNSPECIFIED
}

func (x *ActivitiesGen1_PlaceRecord) ClearCountry() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Country = v1.NationNumeric_NATION_NUMERIC_UNSPECIFIED
}

func (x *ActivitiesGen1_PlaceRecord) ClearRegion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Region = nil
}

func (x *ActivitiesGen1_PlaceRecord) ClearOdometerKm() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_OdometerKm = 0
}

type ActivitiesGen1_PlaceRecord_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Time of the entry.
	//
	// See Data Dictionary, Section 2.162, `TimeReal`.
	EntryTime *timestamppb.Timestamp
	// Type of entry (begin or end).
	//
	// See Data Dictionary, Section 2.66, `EntryTypeDailyWorkPeriod`.
	EntryType *v1.EntryTypeDailyWorkPeriod
	// Country code.
	//
	// See Data Dictionary, Section 2.101, `NationNumeric`.
	Country *v1.NationNumeric
	// Region code.
	//
	// See Data Dictionary, Section 2.122, `RegionNumeric`.
	Region []byte
	// Odometer value at the time of entry in kilometers.
	//
	// See Data Dictionary, Section 2.113, `OdometerShort`.
	OdometerKm *int32
}

func (b0 ActivitiesGen1_PlaceRecord_builder) Build() *ActivitiesGen1_PlaceRecord {
	m0 := &ActivitiesGen1_PlaceRecord{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_EntryTime = b.EntryTime
	if b.EntryType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_EntryType = *b.EntryType
	}
	if b.Country != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_Country = *b.Country
	}
	if b.Region != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_Region = b.Region
	}
	if b.OdometerKm != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_OdometerKm = *b.OdometerKm
	}
	return m0
}

var File_wayplatform_connect_tachograph_vu_v1_activities_gen1_proto protoreflect.FileDescriptor

const file_wayplatform_connect_tachograph_vu_v1_activities_gen1_proto_rawDesc = "" +
	"\n" +
	":wayplatform/connect/tachograph/vu/v1/activities_gen1.proto\x12$wayplatform.connect.tachograph.vu.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a?wayplatform/connect/tachograph/dd/v1/activity_change_info.proto\x1a/wayplatform/connect/tachograph/dd/v1/date.proto\x1aGwayplatform/connect/tachograph/dd/v1/entry_type_daily_work_period.proto\x1a9wayplatform/connect/tachograph/dd/v1/nation_numeric.proto\x1aDwayplatform/connect/tachograph/dd/v1/specific_condition_record.proto\x1a<wayplatform/connect/tachograph/dd/v1/vu_card_iw_record.proto\"\xf0\x06\n" +
	"\x0eActivitiesGen1\x12:\n" +
	"\vdate_of_day\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\tdateOfDay\x120\n" +
	"\x14odometer_midnight_km\x18\x02 \x01(\x05R\x12odometerMidnightKm\x12V\n" +
	"\fcard_iw_data\x18\x03 \x03(\v24.wayplatform.connect.tachograph.dd.v1.VuCardIWRecordR\n" +
	"cardIwData\x12c\n" +
	"\x10activity_changes\x18\x04 \x03(\v28.wayplatform.connect.tachograph.dd.v1.ActivityChangeInfoR\x0factivityChanges\x12X\n" +
	"\x06places\x18\x05 \x03(\v2@.wayplatform.connect.tachograph.vu.v1.ActivitiesGen1.PlaceRecordR\x06places\x12n\n" +
	"\x13specific_conditions\x18\x06 \x03(\v2=.wayplatform.connect.tachograph.dd.v1.SpecificConditionRecordR\x12specificConditions\x12\x1c\n" +
	"\tsignature\x18\a \x01(\fR\tsignature\x12\x19\n" +
	"\braw_data\x18\b \x01(\fR\arawData\x1a\xaf\x02\n" +
	"\vPlaceRecord\x129\n" +
	"\n" +
	"entry_time\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\tentryTime\x12]\n" +
	"\n" +
	"entry_type\x18\x02 \x01(\x0e2>.wayplatform.connect.tachograph.dd.v1.EntryTypeDailyWorkPeriodR\tentryType\x12M\n" +
	"\acountry\x18\x03 \x01(\x0e23.wayplatform.connect.tachograph.dd.v1.NationNumericR\acountry\x12\x16\n" +
	"\x06region\x18\x04 \x01(\fR\x06region\x12\x1f\n" +
	"\vodometer_km\x18\x05 \x01(\x05R\n" +
	"odometerKmB\xd2\x02\n" +
	"(com.wayplatform.connect.tachograph.vu.v1B\x13ActivitiesGen1ProtoP\x01Z\\github.com/way-platform/tachograph-go/proto/gen/go/wayplatform/connect/tachograph/vu/v1;vuv1\xa2\x02\x04WCTV\xaa\x02$Wayplatform.Connect.Tachograph.Vu.V1\xca\x02$Wayplatform\\Connect\\Tachograph\\Vu\\V1\xe2\x020Wayplatform\\Connect\\Tachograph\\Vu\\V1\\GPBMetadata\xea\x02(Wayplatform::Connect::Tachograph::Vu::V1b\beditionsp\xe8\a"

var file_wayplatform_connect_tachograph_vu_v1_activities_gen1_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_wayplatform_connect_tachograph_vu_v1_activities_gen1_proto_goTypes = []any{
	(*ActivitiesGen1)(nil),             // 0: wayplatform.connect.tachograph.vu.v1.ActivitiesGen1
	(*ActivitiesGen1_PlaceRecord)(nil), // 1: wayplatform.connect.tachograph.vu.v1.ActivitiesGen1.PlaceRecord
	(*timestamppb.Timestamp)(nil),      // 2: google.protobuf.Timestamp
	(*v1.VuCardIWRecord)(nil),          // 3: wayplatform.connect.tachograph.dd.v1.VuCardIWRecord
	(*v1.ActivityChangeInfo)(nil),      // 4: wayplatform.connect.tachograph.dd.v1.ActivityChangeInfo
	(*v1.SpecificConditionRecord)(nil), // 5: wayplatform.connect.tachograph.dd.v1.SpecificConditionRecord
	(v1.EntryTypeDailyWorkPeriod)(0),   // 6: wayplatform.connect.tachograph.dd.v1.EntryTypeDailyWorkPeriod
	(v1.NationNumeric)(0),              // 7: wayplatform.connect.tachograph.dd.v1.NationNumeric
}
var file_wayplatform_connect_tachograph_vu_v1_activities_gen1_proto_depIdxs = []int32{
	2, // 0: wayplatform.connect.tachograph.vu.v1.ActivitiesGen1.date_of_day:type_name -> google.protobuf.Timestamp
	3, // 1: wayplatform.connect.tachograph.vu.v1.ActivitiesGen1.card_iw_data:type_name -> wayplatform.connect.tachograph.dd.v1.VuCardIWRecord
	4, // 2: wayplatform.connect.tachograph.vu.v1.ActivitiesGen1.activity_changes:type_name -> wayplatform.connect.tachograph.dd.v1.ActivityChangeInfo
	1, // 3: wayplatform.connect.tachograph.vu.v1.ActivitiesGen1.places:type_name -> wayplatform.connect.tachograph.vu.v1.ActivitiesGen1.PlaceRecord
	5, // 4: wayplatform.connect.tachograph.vu.v1.ActivitiesGen1.specific_conditions:type_name -> wayplatform.connect.tachograph.dd.v1.SpecificConditionRecord
	2, // 5: wayplatform.connect.tachograph.vu.v1.ActivitiesGen1.PlaceRecord.entry_time:type_name -> google.protobuf.Timestamp
	6, // 6: wayplatform.connect.tachograph.vu.v1.ActivitiesGen1.PlaceRecord.entry_type:type_name -> wayplatform.connect.tachograph.dd.v1.EntryTypeDailyWorkPeriod
	7, // 7: wayplatform.connect.tachograph.vu.v1.ActivitiesGen1.PlaceRecord.country:type_name -> wayplatform.connect.tachograph.dd.v1.NationNumeric
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_wayplatform_connect_tachograph_vu_v1_activities_gen1_proto_init() }
func file_wayplatform_connect_tachograph_vu_v1_activities_gen1_proto_init() {
	if File_wayplatform_connect_tachograph_vu_v1_activities_gen1_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wayplatform_connect_tachograph_vu_v1_activities_gen1_proto_rawDesc), len(file_wayplatform_connect_tachograph_vu_v1_activities_gen1_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wayplatform_connect_tachograph_vu_v1_activities_gen1_proto_goTypes,
		DependencyIndexes: file_wayplatform_connect_tachograph_vu_v1_activities_gen1_proto_depIdxs,
		MessageInfos:      file_wayplatform_connect_tachograph_vu_v1_activities_gen1_proto_msgTypes,
	}.Build()
	File_wayplatform_connect_tachograph_vu_v1_activities_gen1_proto = out.File
	file_wayplatform_connect_tachograph_vu_v1_activities_gen1_proto_goTypes = nil
	file_wayplatform_connect_tachograph_vu_v1_activities_gen1_proto_depIdxs = nil
}
