// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wayplatform/connect/tachograph/vu/v1/trep.proto

package vuv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var file_wayplatform_connect_tachograph_vu_v1_trep_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.EnumValueOptions)(nil),
		ExtensionType: (*int32)(nil),
		Field:         50303,
		Name:          "wayplatform.connect.tachograph.vu.v1.trep_value",
		Tag:           "varint,50303,opt,name=trep_value",
		Filename:      "wayplatform/connect/tachograph/vu/v1/trep.proto",
	},
}

// Extension fields to descriptorpb.EnumValueOptions.
var (
	// optional int32 trep_value = 50303;
	E_TrepValue = &file_wayplatform_connect_tachograph_vu_v1_trep_proto_extTypes[0]
)

var File_wayplatform_connect_tachograph_vu_v1_trep_proto protoreflect.FileDescriptor

const file_wayplatform_connect_tachograph_vu_v1_trep_proto_rawDesc = "" +
	"\n" +
	"/wayplatform/connect/tachograph/vu/v1/trep.proto\x12$wayplatform.connect.tachograph.vu.v1\x1a google/protobuf/descriptor.proto:B\n" +
	"\n" +
	"trep_value\x12!.google.protobuf.EnumValueOptions\x18\xff\x88\x03 \x01(\x05R\ttrepValueB\xc8\x02\n" +
	"(com.wayplatform.connect.tachograph.vu.v1B\tTrepProtoP\x01Z\\github.com/way-platform/tachograph-go/proto/gen/go/wayplatform/connect/tachograph/vu/v1;vuv1\xa2\x02\x04WCTV\xaa\x02$Wayplatform.Connect.Tachograph.Vu.V1\xca\x02$Wayplatform\\Connect\\Tachograph\\Vu\\V1\xe2\x020Wayplatform\\Connect\\Tachograph\\Vu\\V1\\GPBMetadata\xea\x02(Wayplatform::Connect::Tachograph::Vu::V1b\beditionsp\xe8\a"

var file_wayplatform_connect_tachograph_vu_v1_trep_proto_goTypes = []any{
	(*descriptorpb.EnumValueOptions)(nil), // 0: google.protobuf.EnumValueOptions
}
var file_wayplatform_connect_tachograph_vu_v1_trep_proto_depIdxs = []int32{
	0, // 0: wayplatform.connect.tachograph.vu.v1.trep_value:extendee -> google.protobuf.EnumValueOptions
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	0, // [0:1] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_wayplatform_connect_tachograph_vu_v1_trep_proto_init() }
func file_wayplatform_connect_tachograph_vu_v1_trep_proto_init() {
	if File_wayplatform_connect_tachograph_vu_v1_trep_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wayplatform_connect_tachograph_vu_v1_trep_proto_rawDesc), len(file_wayplatform_connect_tachograph_vu_v1_trep_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_wayplatform_connect_tachograph_vu_v1_trep_proto_goTypes,
		DependencyIndexes: file_wayplatform_connect_tachograph_vu_v1_trep_proto_depIdxs,
		ExtensionInfos:    file_wayplatform_connect_tachograph_vu_v1_trep_proto_extTypes,
	}.Build()
	File_wayplatform_connect_tachograph_vu_v1_trep_proto = out.File
	file_wayplatform_connect_tachograph_vu_v1_trep_proto_goTypes = nil
	file_wayplatform_connect_tachograph_vu_v1_trep_proto_depIdxs = nil
}
