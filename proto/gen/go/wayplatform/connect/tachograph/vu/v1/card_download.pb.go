// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wayplatform/connect/tachograph/vu/v1/card_download.proto

package vuv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents the payload of a card download transfer from a Vehicle Unit (TREP 0x06).
//
// This transfer type is used when the VU acts as an intermediary to download data
// from a tachograph card inserted into one of its slots.
// See Appendix 7, Section 2.2.2.9.
//
// This message does not correspond to a specific data type in the Data Dictionary,
// as it contains the raw byte stream of a downloaded card file.
type CardDownload struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_RawData     []byte                 `protobuf:"bytes,1,opt,name=raw_data,json=rawData"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CardDownload) Reset() {
	*x = CardDownload{}
	mi := &file_wayplatform_connect_tachograph_vu_v1_card_download_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CardDownload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardDownload) ProtoMessage() {}

func (x *CardDownload) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_vu_v1_card_download_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CardDownload) GetRawData() []byte {
	if x != nil {
		return x.xxx_hidden_RawData
	}
	return nil
}

func (x *CardDownload) SetRawData(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_RawData = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *CardDownload) HasRawData() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CardDownload) ClearRawData() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_RawData = nil
}

type CardDownload_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The raw binary content of the downloaded card file.
	//
	// This payload is a complete card file dump, structured in the card's own
	// TLV format. It is NOT a VU data structure. This data can be parsed
	// using the `wayplatform.connect.tachograph.card.v1.RawCardFile` message.
	//
	// See Data Dictionary, Section 2.159, `TachographPayload`.
	// ASN.1 Definition:
	//
	//	TachographPayload ::= OCTET STRING
	RawData []byte
}

func (b0 CardDownload_builder) Build() *CardDownload {
	m0 := &CardDownload{}
	b, x := &b0, m0
	_, _ = b, x
	if b.RawData != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_RawData = b.RawData
	}
	return m0
}

var File_wayplatform_connect_tachograph_vu_v1_card_download_proto protoreflect.FileDescriptor

const file_wayplatform_connect_tachograph_vu_v1_card_download_proto_rawDesc = "" +
	"\n" +
	"8wayplatform/connect/tachograph/vu/v1/card_download.proto\x12$wayplatform.connect.tachograph.vu.v1\")\n" +
	"\fCardDownload\x12\x19\n" +
	"\braw_data\x18\x01 \x01(\fR\arawDataB\xd0\x02\n" +
	"(com.wayplatform.connect.tachograph.vu.v1B\x11CardDownloadProtoP\x01Z\\github.com/way-platform/tachograph-go/proto/gen/go/wayplatform/connect/tachograph/vu/v1;vuv1\xa2\x02\x04WCTV\xaa\x02$Wayplatform.Connect.Tachograph.Vu.V1\xca\x02$Wayplatform\\Connect\\Tachograph\\Vu\\V1\xe2\x020Wayplatform\\Connect\\Tachograph\\Vu\\V1\\GPBMetadata\xea\x02(Wayplatform::Connect::Tachograph::Vu::V1b\beditionsp\xe8\a"

var file_wayplatform_connect_tachograph_vu_v1_card_download_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_wayplatform_connect_tachograph_vu_v1_card_download_proto_goTypes = []any{
	(*CardDownload)(nil), // 0: wayplatform.connect.tachograph.vu.v1.CardDownload
}
var file_wayplatform_connect_tachograph_vu_v1_card_download_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_wayplatform_connect_tachograph_vu_v1_card_download_proto_init() }
func file_wayplatform_connect_tachograph_vu_v1_card_download_proto_init() {
	if File_wayplatform_connect_tachograph_vu_v1_card_download_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wayplatform_connect_tachograph_vu_v1_card_download_proto_rawDesc), len(file_wayplatform_connect_tachograph_vu_v1_card_download_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wayplatform_connect_tachograph_vu_v1_card_download_proto_goTypes,
		DependencyIndexes: file_wayplatform_connect_tachograph_vu_v1_card_download_proto_depIdxs,
		MessageInfos:      file_wayplatform_connect_tachograph_vu_v1_card_download_proto_msgTypes,
	}.Build()
	File_wayplatform_connect_tachograph_vu_v1_card_download_proto = out.File
	file_wayplatform_connect_tachograph_vu_v1_card_download_proto_goTypes = nil
	file_wayplatform_connect_tachograph_vu_v1_card_download_proto_depIdxs = nil
}
