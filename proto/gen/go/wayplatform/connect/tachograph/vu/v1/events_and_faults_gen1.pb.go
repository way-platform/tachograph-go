// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wayplatform/connect/tachograph/vu/v1/events_and_faults_gen1.proto

package vuv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents the data structure for an EventsAndFaultsGen1 transfer.
// See Appendix 7, Section 2.2.6.4.
type EventsAndFaultsGen1 struct {
	state                          protoimpl.MessageState                          `protogen:"opaque.v1"`
	xxx_hidden_Faults              *[]*EventsAndFaultsGen1_FaultRecord             `protobuf:"bytes,1,rep,name=faults"`
	xxx_hidden_Events              *[]*EventsAndFaultsGen1_EventRecord             `protobuf:"bytes,2,rep,name=events"`
	xxx_hidden_OverspeedingControl *EventsAndFaultsGen1_OverSpeedingControlData    `protobuf:"bytes,3,opt,name=overspeeding_control,json=overspeedingControl"`
	xxx_hidden_OverspeedingEvents  *[]*EventsAndFaultsGen1_OverSpeedingEventRecord `protobuf:"bytes,4,rep,name=overspeeding_events,json=overspeedingEvents"`
	xxx_hidden_TimeAdjustments     *[]*EventsAndFaultsGen1_TimeAdjustmentRecord    `protobuf:"bytes,5,rep,name=time_adjustments,json=timeAdjustments"`
	xxx_hidden_Signature           []byte                                          `protobuf:"bytes,6,opt,name=signature"`
	XXX_raceDetectHookData         protoimpl.RaceDetectHookData
	XXX_presence                   [1]uint32
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *EventsAndFaultsGen1) Reset() {
	*x = EventsAndFaultsGen1{}
	mi := &file_wayplatform_connect_tachograph_vu_v1_events_and_faults_gen1_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventsAndFaultsGen1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventsAndFaultsGen1) ProtoMessage() {}

func (x *EventsAndFaultsGen1) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_vu_v1_events_and_faults_gen1_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *EventsAndFaultsGen1) GetFaults() []*EventsAndFaultsGen1_FaultRecord {
	if x != nil {
		if x.xxx_hidden_Faults != nil {
			return *x.xxx_hidden_Faults
		}
	}
	return nil
}

func (x *EventsAndFaultsGen1) GetEvents() []*EventsAndFaultsGen1_EventRecord {
	if x != nil {
		if x.xxx_hidden_Events != nil {
			return *x.xxx_hidden_Events
		}
	}
	return nil
}

func (x *EventsAndFaultsGen1) GetOverspeedingControl() *EventsAndFaultsGen1_OverSpeedingControlData {
	if x != nil {
		return x.xxx_hidden_OverspeedingControl
	}
	return nil
}

func (x *EventsAndFaultsGen1) GetOverspeedingEvents() []*EventsAndFaultsGen1_OverSpeedingEventRecord {
	if x != nil {
		if x.xxx_hidden_OverspeedingEvents != nil {
			return *x.xxx_hidden_OverspeedingEvents
		}
	}
	return nil
}

func (x *EventsAndFaultsGen1) GetTimeAdjustments() []*EventsAndFaultsGen1_TimeAdjustmentRecord {
	if x != nil {
		if x.xxx_hidden_TimeAdjustments != nil {
			return *x.xxx_hidden_TimeAdjustments
		}
	}
	return nil
}

func (x *EventsAndFaultsGen1) GetSignature() []byte {
	if x != nil {
		return x.xxx_hidden_Signature
	}
	return nil
}

func (x *EventsAndFaultsGen1) SetFaults(v []*EventsAndFaultsGen1_FaultRecord) {
	x.xxx_hidden_Faults = &v
}

func (x *EventsAndFaultsGen1) SetEvents(v []*EventsAndFaultsGen1_EventRecord) {
	x.xxx_hidden_Events = &v
}

func (x *EventsAndFaultsGen1) SetOverspeedingControl(v *EventsAndFaultsGen1_OverSpeedingControlData) {
	x.xxx_hidden_OverspeedingControl = v
}

func (x *EventsAndFaultsGen1) SetOverspeedingEvents(v []*EventsAndFaultsGen1_OverSpeedingEventRecord) {
	x.xxx_hidden_OverspeedingEvents = &v
}

func (x *EventsAndFaultsGen1) SetTimeAdjustments(v []*EventsAndFaultsGen1_TimeAdjustmentRecord) {
	x.xxx_hidden_TimeAdjustments = &v
}

func (x *EventsAndFaultsGen1) SetSignature(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Signature = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *EventsAndFaultsGen1) HasOverspeedingControl() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_OverspeedingControl != nil
}

func (x *EventsAndFaultsGen1) HasSignature() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *EventsAndFaultsGen1) ClearOverspeedingControl() {
	x.xxx_hidden_OverspeedingControl = nil
}

func (x *EventsAndFaultsGen1) ClearSignature() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Signature = nil
}

type EventsAndFaultsGen1_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Faults              []*EventsAndFaultsGen1_FaultRecord
	Events              []*EventsAndFaultsGen1_EventRecord
	OverspeedingControl *EventsAndFaultsGen1_OverSpeedingControlData
	OverspeedingEvents  []*EventsAndFaultsGen1_OverSpeedingEventRecord
	TimeAdjustments     []*EventsAndFaultsGen1_TimeAdjustmentRecord
	// See Appendix 1, 2.149. 128 bytes.
	Signature []byte
}

func (b0 EventsAndFaultsGen1_builder) Build() *EventsAndFaultsGen1 {
	m0 := &EventsAndFaultsGen1{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Faults = &b.Faults
	x.xxx_hidden_Events = &b.Events
	x.xxx_hidden_OverspeedingControl = b.OverspeedingControl
	x.xxx_hidden_OverspeedingEvents = &b.OverspeedingEvents
	x.xxx_hidden_TimeAdjustments = &b.TimeAdjustments
	if b.Signature != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_Signature = b.Signature
	}
	return m0
}

type EventsAndFaultsGen1_FaultRecord struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_FaultType      uint32                 `protobuf:"varint,1,opt,name=fault_type,json=faultType"`
	xxx_hidden_RecordPurpose  uint32                 `protobuf:"varint,2,opt,name=record_purpose,json=recordPurpose"`
	xxx_hidden_BeginTime      uint32                 `protobuf:"varint,3,opt,name=begin_time,json=beginTime"`
	xxx_hidden_EndTime        uint32                 `protobuf:"varint,4,opt,name=end_time,json=endTime"`
	xxx_hidden_CardNumber     *string                `protobuf:"bytes,5,opt,name=card_number,json=cardNumber"`
	xxx_hidden_CardGeneration uint32                 `protobuf:"varint,6,opt,name=card_generation,json=cardGeneration"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *EventsAndFaultsGen1_FaultRecord) Reset() {
	*x = EventsAndFaultsGen1_FaultRecord{}
	mi := &file_wayplatform_connect_tachograph_vu_v1_events_and_faults_gen1_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventsAndFaultsGen1_FaultRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventsAndFaultsGen1_FaultRecord) ProtoMessage() {}

func (x *EventsAndFaultsGen1_FaultRecord) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_vu_v1_events_and_faults_gen1_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *EventsAndFaultsGen1_FaultRecord) GetFaultType() uint32 {
	if x != nil {
		return x.xxx_hidden_FaultType
	}
	return 0
}

func (x *EventsAndFaultsGen1_FaultRecord) GetRecordPurpose() uint32 {
	if x != nil {
		return x.xxx_hidden_RecordPurpose
	}
	return 0
}

func (x *EventsAndFaultsGen1_FaultRecord) GetBeginTime() uint32 {
	if x != nil {
		return x.xxx_hidden_BeginTime
	}
	return 0
}

func (x *EventsAndFaultsGen1_FaultRecord) GetEndTime() uint32 {
	if x != nil {
		return x.xxx_hidden_EndTime
	}
	return 0
}

func (x *EventsAndFaultsGen1_FaultRecord) GetCardNumber() string {
	if x != nil {
		if x.xxx_hidden_CardNumber != nil {
			return *x.xxx_hidden_CardNumber
		}
		return ""
	}
	return ""
}

func (x *EventsAndFaultsGen1_FaultRecord) GetCardGeneration() uint32 {
	if x != nil {
		return x.xxx_hidden_CardGeneration
	}
	return 0
}

func (x *EventsAndFaultsGen1_FaultRecord) SetFaultType(v uint32) {
	x.xxx_hidden_FaultType = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *EventsAndFaultsGen1_FaultRecord) SetRecordPurpose(v uint32) {
	x.xxx_hidden_RecordPurpose = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *EventsAndFaultsGen1_FaultRecord) SetBeginTime(v uint32) {
	x.xxx_hidden_BeginTime = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *EventsAndFaultsGen1_FaultRecord) SetEndTime(v uint32) {
	x.xxx_hidden_EndTime = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *EventsAndFaultsGen1_FaultRecord) SetCardNumber(v string) {
	x.xxx_hidden_CardNumber = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *EventsAndFaultsGen1_FaultRecord) SetCardGeneration(v uint32) {
	x.xxx_hidden_CardGeneration = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *EventsAndFaultsGen1_FaultRecord) HasFaultType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *EventsAndFaultsGen1_FaultRecord) HasRecordPurpose() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *EventsAndFaultsGen1_FaultRecord) HasBeginTime() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *EventsAndFaultsGen1_FaultRecord) HasEndTime() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *EventsAndFaultsGen1_FaultRecord) HasCardNumber() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *EventsAndFaultsGen1_FaultRecord) HasCardGeneration() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *EventsAndFaultsGen1_FaultRecord) ClearFaultType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_FaultType = 0
}

func (x *EventsAndFaultsGen1_FaultRecord) ClearRecordPurpose() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_RecordPurpose = 0
}

func (x *EventsAndFaultsGen1_FaultRecord) ClearBeginTime() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_BeginTime = 0
}

func (x *EventsAndFaultsGen1_FaultRecord) ClearEndTime() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_EndTime = 0
}

func (x *EventsAndFaultsGen1_FaultRecord) ClearCardNumber() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_CardNumber = nil
}

func (x *EventsAndFaultsGen1_FaultRecord) ClearCardGeneration() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_CardGeneration = 0
}

type EventsAndFaultsGen1_FaultRecord_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// See Appendix 1, 2.201
	FaultType      *uint32
	RecordPurpose  *uint32
	BeginTime      *uint32
	EndTime        *uint32
	CardNumber     *string
	CardGeneration *uint32
}

func (b0 EventsAndFaultsGen1_FaultRecord_builder) Build() *EventsAndFaultsGen1_FaultRecord {
	m0 := &EventsAndFaultsGen1_FaultRecord{}
	b, x := &b0, m0
	_, _ = b, x
	if b.FaultType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_FaultType = *b.FaultType
	}
	if b.RecordPurpose != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_RecordPurpose = *b.RecordPurpose
	}
	if b.BeginTime != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_BeginTime = *b.BeginTime
	}
	if b.EndTime != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_EndTime = *b.EndTime
	}
	if b.CardNumber != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_CardNumber = b.CardNumber
	}
	if b.CardGeneration != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_CardGeneration = *b.CardGeneration
	}
	return m0
}

type EventsAndFaultsGen1_EventRecord struct {
	state                          protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_EventType           uint32                 `protobuf:"varint,1,opt,name=event_type,json=eventType"`
	xxx_hidden_RecordPurpose       uint32                 `protobuf:"varint,2,opt,name=record_purpose,json=recordPurpose"`
	xxx_hidden_BeginTime           uint32                 `protobuf:"varint,3,opt,name=begin_time,json=beginTime"`
	xxx_hidden_EndTime             uint32                 `protobuf:"varint,4,opt,name=end_time,json=endTime"`
	xxx_hidden_CardNumber          *string                `protobuf:"bytes,5,opt,name=card_number,json=cardNumber"`
	xxx_hidden_CardGeneration      uint32                 `protobuf:"varint,6,opt,name=card_generation,json=cardGeneration"`
	xxx_hidden_SimilarEventsNumber uint32                 `protobuf:"varint,7,opt,name=similar_events_number,json=similarEventsNumber"`
	XXX_raceDetectHookData         protoimpl.RaceDetectHookData
	XXX_presence                   [1]uint32
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *EventsAndFaultsGen1_EventRecord) Reset() {
	*x = EventsAndFaultsGen1_EventRecord{}
	mi := &file_wayplatform_connect_tachograph_vu_v1_events_and_faults_gen1_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventsAndFaultsGen1_EventRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventsAndFaultsGen1_EventRecord) ProtoMessage() {}

func (x *EventsAndFaultsGen1_EventRecord) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_vu_v1_events_and_faults_gen1_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *EventsAndFaultsGen1_EventRecord) GetEventType() uint32 {
	if x != nil {
		return x.xxx_hidden_EventType
	}
	return 0
}

func (x *EventsAndFaultsGen1_EventRecord) GetRecordPurpose() uint32 {
	if x != nil {
		return x.xxx_hidden_RecordPurpose
	}
	return 0
}

func (x *EventsAndFaultsGen1_EventRecord) GetBeginTime() uint32 {
	if x != nil {
		return x.xxx_hidden_BeginTime
	}
	return 0
}

func (x *EventsAndFaultsGen1_EventRecord) GetEndTime() uint32 {
	if x != nil {
		return x.xxx_hidden_EndTime
	}
	return 0
}

func (x *EventsAndFaultsGen1_EventRecord) GetCardNumber() string {
	if x != nil {
		if x.xxx_hidden_CardNumber != nil {
			return *x.xxx_hidden_CardNumber
		}
		return ""
	}
	return ""
}

func (x *EventsAndFaultsGen1_EventRecord) GetCardGeneration() uint32 {
	if x != nil {
		return x.xxx_hidden_CardGeneration
	}
	return 0
}

func (x *EventsAndFaultsGen1_EventRecord) GetSimilarEventsNumber() uint32 {
	if x != nil {
		return x.xxx_hidden_SimilarEventsNumber
	}
	return 0
}

func (x *EventsAndFaultsGen1_EventRecord) SetEventType(v uint32) {
	x.xxx_hidden_EventType = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *EventsAndFaultsGen1_EventRecord) SetRecordPurpose(v uint32) {
	x.xxx_hidden_RecordPurpose = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *EventsAndFaultsGen1_EventRecord) SetBeginTime(v uint32) {
	x.xxx_hidden_BeginTime = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 7)
}

func (x *EventsAndFaultsGen1_EventRecord) SetEndTime(v uint32) {
	x.xxx_hidden_EndTime = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 7)
}

func (x *EventsAndFaultsGen1_EventRecord) SetCardNumber(v string) {
	x.xxx_hidden_CardNumber = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 7)
}

func (x *EventsAndFaultsGen1_EventRecord) SetCardGeneration(v uint32) {
	x.xxx_hidden_CardGeneration = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 7)
}

func (x *EventsAndFaultsGen1_EventRecord) SetSimilarEventsNumber(v uint32) {
	x.xxx_hidden_SimilarEventsNumber = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 7)
}

func (x *EventsAndFaultsGen1_EventRecord) HasEventType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *EventsAndFaultsGen1_EventRecord) HasRecordPurpose() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *EventsAndFaultsGen1_EventRecord) HasBeginTime() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *EventsAndFaultsGen1_EventRecord) HasEndTime() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *EventsAndFaultsGen1_EventRecord) HasCardNumber() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *EventsAndFaultsGen1_EventRecord) HasCardGeneration() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *EventsAndFaultsGen1_EventRecord) HasSimilarEventsNumber() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *EventsAndFaultsGen1_EventRecord) ClearEventType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_EventType = 0
}

func (x *EventsAndFaultsGen1_EventRecord) ClearRecordPurpose() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_RecordPurpose = 0
}

func (x *EventsAndFaultsGen1_EventRecord) ClearBeginTime() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_BeginTime = 0
}

func (x *EventsAndFaultsGen1_EventRecord) ClearEndTime() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_EndTime = 0
}

func (x *EventsAndFaultsGen1_EventRecord) ClearCardNumber() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_CardNumber = nil
}

func (x *EventsAndFaultsGen1_EventRecord) ClearCardGeneration() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_CardGeneration = 0
}

func (x *EventsAndFaultsGen1_EventRecord) ClearSimilarEventsNumber() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_SimilarEventsNumber = 0
}

type EventsAndFaultsGen1_EventRecord_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// See Appendix 1, 2.198
	EventType           *uint32
	RecordPurpose       *uint32
	BeginTime           *uint32
	EndTime             *uint32
	CardNumber          *string
	CardGeneration      *uint32
	SimilarEventsNumber *uint32
}

func (b0 EventsAndFaultsGen1_EventRecord_builder) Build() *EventsAndFaultsGen1_EventRecord {
	m0 := &EventsAndFaultsGen1_EventRecord{}
	b, x := &b0, m0
	_, _ = b, x
	if b.EventType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_EventType = *b.EventType
	}
	if b.RecordPurpose != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_RecordPurpose = *b.RecordPurpose
	}
	if b.BeginTime != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 7)
		x.xxx_hidden_BeginTime = *b.BeginTime
	}
	if b.EndTime != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 7)
		x.xxx_hidden_EndTime = *b.EndTime
	}
	if b.CardNumber != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 7)
		x.xxx_hidden_CardNumber = b.CardNumber
	}
	if b.CardGeneration != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 7)
		x.xxx_hidden_CardGeneration = *b.CardGeneration
	}
	if b.SimilarEventsNumber != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 7)
		x.xxx_hidden_SimilarEventsNumber = *b.SimilarEventsNumber
	}
	return m0
}

type EventsAndFaultsGen1_OverSpeedingControlData struct {
	state                                        protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_LastControlTime                   uint32                 `protobuf:"varint,1,opt,name=last_control_time,json=lastControlTime"`
	xxx_hidden_FirstOverspeedSinceLastControl    uint32                 `protobuf:"varint,2,opt,name=first_overspeed_since_last_control,json=firstOverspeedSinceLastControl"`
	xxx_hidden_NumberOfOverspeedSinceLastControl uint32                 `protobuf:"varint,3,opt,name=number_of_overspeed_since_last_control,json=numberOfOverspeedSinceLastControl"`
	XXX_raceDetectHookData                       protoimpl.RaceDetectHookData
	XXX_presence                                 [1]uint32
	unknownFields                                protoimpl.UnknownFields
	sizeCache                                    protoimpl.SizeCache
}

func (x *EventsAndFaultsGen1_OverSpeedingControlData) Reset() {
	*x = EventsAndFaultsGen1_OverSpeedingControlData{}
	mi := &file_wayplatform_connect_tachograph_vu_v1_events_and_faults_gen1_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventsAndFaultsGen1_OverSpeedingControlData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventsAndFaultsGen1_OverSpeedingControlData) ProtoMessage() {}

func (x *EventsAndFaultsGen1_OverSpeedingControlData) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_vu_v1_events_and_faults_gen1_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *EventsAndFaultsGen1_OverSpeedingControlData) GetLastControlTime() uint32 {
	if x != nil {
		return x.xxx_hidden_LastControlTime
	}
	return 0
}

func (x *EventsAndFaultsGen1_OverSpeedingControlData) GetFirstOverspeedSinceLastControl() uint32 {
	if x != nil {
		return x.xxx_hidden_FirstOverspeedSinceLastControl
	}
	return 0
}

func (x *EventsAndFaultsGen1_OverSpeedingControlData) GetNumberOfOverspeedSinceLastControl() uint32 {
	if x != nil {
		return x.xxx_hidden_NumberOfOverspeedSinceLastControl
	}
	return 0
}

func (x *EventsAndFaultsGen1_OverSpeedingControlData) SetLastControlTime(v uint32) {
	x.xxx_hidden_LastControlTime = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *EventsAndFaultsGen1_OverSpeedingControlData) SetFirstOverspeedSinceLastControl(v uint32) {
	x.xxx_hidden_FirstOverspeedSinceLastControl = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *EventsAndFaultsGen1_OverSpeedingControlData) SetNumberOfOverspeedSinceLastControl(v uint32) {
	x.xxx_hidden_NumberOfOverspeedSinceLastControl = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *EventsAndFaultsGen1_OverSpeedingControlData) HasLastControlTime() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *EventsAndFaultsGen1_OverSpeedingControlData) HasFirstOverspeedSinceLastControl() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *EventsAndFaultsGen1_OverSpeedingControlData) HasNumberOfOverspeedSinceLastControl() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *EventsAndFaultsGen1_OverSpeedingControlData) ClearLastControlTime() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_LastControlTime = 0
}

func (x *EventsAndFaultsGen1_OverSpeedingControlData) ClearFirstOverspeedSinceLastControl() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FirstOverspeedSinceLastControl = 0
}

func (x *EventsAndFaultsGen1_OverSpeedingControlData) ClearNumberOfOverspeedSinceLastControl() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_NumberOfOverspeedSinceLastControl = 0
}

type EventsAndFaultsGen1_OverSpeedingControlData_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// See Appendix 1, 2.212
	LastControlTime                   *uint32
	FirstOverspeedSinceLastControl    *uint32
	NumberOfOverspeedSinceLastControl *uint32
}

func (b0 EventsAndFaultsGen1_OverSpeedingControlData_builder) Build() *EventsAndFaultsGen1_OverSpeedingControlData {
	m0 := &EventsAndFaultsGen1_OverSpeedingControlData{}
	b, x := &b0, m0
	_, _ = b, x
	if b.LastControlTime != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_LastControlTime = *b.LastControlTime
	}
	if b.FirstOverspeedSinceLastControl != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_FirstOverspeedSinceLastControl = *b.FirstOverspeedSinceLastControl
	}
	if b.NumberOfOverspeedSinceLastControl != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_NumberOfOverspeedSinceLastControl = *b.NumberOfOverspeedSinceLastControl
	}
	return m0
}

type EventsAndFaultsGen1_OverSpeedingEventRecord struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_EventType      uint32                 `protobuf:"varint,1,opt,name=event_type,json=eventType"`
	xxx_hidden_RecordPurpose  uint32                 `protobuf:"varint,2,opt,name=record_purpose,json=recordPurpose"`
	xxx_hidden_BeginTime      uint32                 `protobuf:"varint,3,opt,name=begin_time,json=beginTime"`
	xxx_hidden_EndTime        uint32                 `protobuf:"varint,4,opt,name=end_time,json=endTime"`
	xxx_hidden_MaxSpeed       uint32                 `protobuf:"varint,5,opt,name=max_speed,json=maxSpeed"`
	xxx_hidden_AverageSpeed   uint32                 `protobuf:"varint,6,opt,name=average_speed,json=averageSpeed"`
	xxx_hidden_CardNumber     *string                `protobuf:"bytes,7,opt,name=card_number,json=cardNumber"`
	xxx_hidden_CardGeneration uint32                 `protobuf:"varint,8,opt,name=card_generation,json=cardGeneration"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *EventsAndFaultsGen1_OverSpeedingEventRecord) Reset() {
	*x = EventsAndFaultsGen1_OverSpeedingEventRecord{}
	mi := &file_wayplatform_connect_tachograph_vu_v1_events_and_faults_gen1_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventsAndFaultsGen1_OverSpeedingEventRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventsAndFaultsGen1_OverSpeedingEventRecord) ProtoMessage() {}

func (x *EventsAndFaultsGen1_OverSpeedingEventRecord) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_vu_v1_events_and_faults_gen1_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *EventsAndFaultsGen1_OverSpeedingEventRecord) GetEventType() uint32 {
	if x != nil {
		return x.xxx_hidden_EventType
	}
	return 0
}

func (x *EventsAndFaultsGen1_OverSpeedingEventRecord) GetRecordPurpose() uint32 {
	if x != nil {
		return x.xxx_hidden_RecordPurpose
	}
	return 0
}

func (x *EventsAndFaultsGen1_OverSpeedingEventRecord) GetBeginTime() uint32 {
	if x != nil {
		return x.xxx_hidden_BeginTime
	}
	return 0
}

func (x *EventsAndFaultsGen1_OverSpeedingEventRecord) GetEndTime() uint32 {
	if x != nil {
		return x.xxx_hidden_EndTime
	}
	return 0
}

func (x *EventsAndFaultsGen1_OverSpeedingEventRecord) GetMaxSpeed() uint32 {
	if x != nil {
		return x.xxx_hidden_MaxSpeed
	}
	return 0
}

func (x *EventsAndFaultsGen1_OverSpeedingEventRecord) GetAverageSpeed() uint32 {
	if x != nil {
		return x.xxx_hidden_AverageSpeed
	}
	return 0
}

func (x *EventsAndFaultsGen1_OverSpeedingEventRecord) GetCardNumber() string {
	if x != nil {
		if x.xxx_hidden_CardNumber != nil {
			return *x.xxx_hidden_CardNumber
		}
		return ""
	}
	return ""
}

func (x *EventsAndFaultsGen1_OverSpeedingEventRecord) GetCardGeneration() uint32 {
	if x != nil {
		return x.xxx_hidden_CardGeneration
	}
	return 0
}

func (x *EventsAndFaultsGen1_OverSpeedingEventRecord) SetEventType(v uint32) {
	x.xxx_hidden_EventType = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 8)
}

func (x *EventsAndFaultsGen1_OverSpeedingEventRecord) SetRecordPurpose(v uint32) {
	x.xxx_hidden_RecordPurpose = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 8)
}

func (x *EventsAndFaultsGen1_OverSpeedingEventRecord) SetBeginTime(v uint32) {
	x.xxx_hidden_BeginTime = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 8)
}

func (x *EventsAndFaultsGen1_OverSpeedingEventRecord) SetEndTime(v uint32) {
	x.xxx_hidden_EndTime = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 8)
}

func (x *EventsAndFaultsGen1_OverSpeedingEventRecord) SetMaxSpeed(v uint32) {
	x.xxx_hidden_MaxSpeed = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 8)
}

func (x *EventsAndFaultsGen1_OverSpeedingEventRecord) SetAverageSpeed(v uint32) {
	x.xxx_hidden_AverageSpeed = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 8)
}

func (x *EventsAndFaultsGen1_OverSpeedingEventRecord) SetCardNumber(v string) {
	x.xxx_hidden_CardNumber = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 8)
}

func (x *EventsAndFaultsGen1_OverSpeedingEventRecord) SetCardGeneration(v uint32) {
	x.xxx_hidden_CardGeneration = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 8)
}

func (x *EventsAndFaultsGen1_OverSpeedingEventRecord) HasEventType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *EventsAndFaultsGen1_OverSpeedingEventRecord) HasRecordPurpose() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *EventsAndFaultsGen1_OverSpeedingEventRecord) HasBeginTime() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *EventsAndFaultsGen1_OverSpeedingEventRecord) HasEndTime() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *EventsAndFaultsGen1_OverSpeedingEventRecord) HasMaxSpeed() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *EventsAndFaultsGen1_OverSpeedingEventRecord) HasAverageSpeed() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *EventsAndFaultsGen1_OverSpeedingEventRecord) HasCardNumber() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *EventsAndFaultsGen1_OverSpeedingEventRecord) HasCardGeneration() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *EventsAndFaultsGen1_OverSpeedingEventRecord) ClearEventType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_EventType = 0
}

func (x *EventsAndFaultsGen1_OverSpeedingEventRecord) ClearRecordPurpose() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_RecordPurpose = 0
}

func (x *EventsAndFaultsGen1_OverSpeedingEventRecord) ClearBeginTime() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_BeginTime = 0
}

func (x *EventsAndFaultsGen1_OverSpeedingEventRecord) ClearEndTime() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_EndTime = 0
}

func (x *EventsAndFaultsGen1_OverSpeedingEventRecord) ClearMaxSpeed() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_MaxSpeed = 0
}

func (x *EventsAndFaultsGen1_OverSpeedingEventRecord) ClearAverageSpeed() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_AverageSpeed = 0
}

func (x *EventsAndFaultsGen1_OverSpeedingEventRecord) ClearCardNumber() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_CardNumber = nil
}

func (x *EventsAndFaultsGen1_OverSpeedingEventRecord) ClearCardGeneration() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_CardGeneration = 0
}

type EventsAndFaultsGen1_OverSpeedingEventRecord_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// See Appendix 1, 2.215
	EventType      *uint32
	RecordPurpose  *uint32
	BeginTime      *uint32
	EndTime        *uint32
	MaxSpeed       *uint32
	AverageSpeed   *uint32
	CardNumber     *string
	CardGeneration *uint32
}

func (b0 EventsAndFaultsGen1_OverSpeedingEventRecord_builder) Build() *EventsAndFaultsGen1_OverSpeedingEventRecord {
	m0 := &EventsAndFaultsGen1_OverSpeedingEventRecord{}
	b, x := &b0, m0
	_, _ = b, x
	if b.EventType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 8)
		x.xxx_hidden_EventType = *b.EventType
	}
	if b.RecordPurpose != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 8)
		x.xxx_hidden_RecordPurpose = *b.RecordPurpose
	}
	if b.BeginTime != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 8)
		x.xxx_hidden_BeginTime = *b.BeginTime
	}
	if b.EndTime != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 8)
		x.xxx_hidden_EndTime = *b.EndTime
	}
	if b.MaxSpeed != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 8)
		x.xxx_hidden_MaxSpeed = *b.MaxSpeed
	}
	if b.AverageSpeed != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 8)
		x.xxx_hidden_AverageSpeed = *b.AverageSpeed
	}
	if b.CardNumber != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 8)
		x.xxx_hidden_CardNumber = b.CardNumber
	}
	if b.CardGeneration != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 8)
		x.xxx_hidden_CardGeneration = *b.CardGeneration
	}
	return m0
}

type EventsAndFaultsGen1_TimeAdjustmentRecord struct {
	state                             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_OldTime                uint32                 `protobuf:"varint,1,opt,name=old_time,json=oldTime"`
	xxx_hidden_NewTime                uint32                 `protobuf:"varint,2,opt,name=new_time,json=newTime"`
	xxx_hidden_WorkshopName           *string                `protobuf:"bytes,3,opt,name=workshop_name,json=workshopName"`
	xxx_hidden_WorkshopAddress        *string                `protobuf:"bytes,4,opt,name=workshop_address,json=workshopAddress"`
	xxx_hidden_WorkshopCardNumber     *string                `protobuf:"bytes,5,opt,name=workshop_card_number,json=workshopCardNumber"`
	xxx_hidden_WorkshopCardGeneration uint32                 `protobuf:"varint,6,opt,name=workshop_card_generation,json=workshopCardGeneration"`
	XXX_raceDetectHookData            protoimpl.RaceDetectHookData
	XXX_presence                      [1]uint32
	unknownFields                     protoimpl.UnknownFields
	sizeCache                         protoimpl.SizeCache
}

func (x *EventsAndFaultsGen1_TimeAdjustmentRecord) Reset() {
	*x = EventsAndFaultsGen1_TimeAdjustmentRecord{}
	mi := &file_wayplatform_connect_tachograph_vu_v1_events_and_faults_gen1_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventsAndFaultsGen1_TimeAdjustmentRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventsAndFaultsGen1_TimeAdjustmentRecord) ProtoMessage() {}

func (x *EventsAndFaultsGen1_TimeAdjustmentRecord) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_vu_v1_events_and_faults_gen1_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *EventsAndFaultsGen1_TimeAdjustmentRecord) GetOldTime() uint32 {
	if x != nil {
		return x.xxx_hidden_OldTime
	}
	return 0
}

func (x *EventsAndFaultsGen1_TimeAdjustmentRecord) GetNewTime() uint32 {
	if x != nil {
		return x.xxx_hidden_NewTime
	}
	return 0
}

func (x *EventsAndFaultsGen1_TimeAdjustmentRecord) GetWorkshopName() string {
	if x != nil {
		if x.xxx_hidden_WorkshopName != nil {
			return *x.xxx_hidden_WorkshopName
		}
		return ""
	}
	return ""
}

func (x *EventsAndFaultsGen1_TimeAdjustmentRecord) GetWorkshopAddress() string {
	if x != nil {
		if x.xxx_hidden_WorkshopAddress != nil {
			return *x.xxx_hidden_WorkshopAddress
		}
		return ""
	}
	return ""
}

func (x *EventsAndFaultsGen1_TimeAdjustmentRecord) GetWorkshopCardNumber() string {
	if x != nil {
		if x.xxx_hidden_WorkshopCardNumber != nil {
			return *x.xxx_hidden_WorkshopCardNumber
		}
		return ""
	}
	return ""
}

func (x *EventsAndFaultsGen1_TimeAdjustmentRecord) GetWorkshopCardGeneration() uint32 {
	if x != nil {
		return x.xxx_hidden_WorkshopCardGeneration
	}
	return 0
}

func (x *EventsAndFaultsGen1_TimeAdjustmentRecord) SetOldTime(v uint32) {
	x.xxx_hidden_OldTime = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *EventsAndFaultsGen1_TimeAdjustmentRecord) SetNewTime(v uint32) {
	x.xxx_hidden_NewTime = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *EventsAndFaultsGen1_TimeAdjustmentRecord) SetWorkshopName(v string) {
	x.xxx_hidden_WorkshopName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *EventsAndFaultsGen1_TimeAdjustmentRecord) SetWorkshopAddress(v string) {
	x.xxx_hidden_WorkshopAddress = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *EventsAndFaultsGen1_TimeAdjustmentRecord) SetWorkshopCardNumber(v string) {
	x.xxx_hidden_WorkshopCardNumber = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *EventsAndFaultsGen1_TimeAdjustmentRecord) SetWorkshopCardGeneration(v uint32) {
	x.xxx_hidden_WorkshopCardGeneration = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *EventsAndFaultsGen1_TimeAdjustmentRecord) HasOldTime() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *EventsAndFaultsGen1_TimeAdjustmentRecord) HasNewTime() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *EventsAndFaultsGen1_TimeAdjustmentRecord) HasWorkshopName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *EventsAndFaultsGen1_TimeAdjustmentRecord) HasWorkshopAddress() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *EventsAndFaultsGen1_TimeAdjustmentRecord) HasWorkshopCardNumber() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *EventsAndFaultsGen1_TimeAdjustmentRecord) HasWorkshopCardGeneration() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *EventsAndFaultsGen1_TimeAdjustmentRecord) ClearOldTime() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_OldTime = 0
}

func (x *EventsAndFaultsGen1_TimeAdjustmentRecord) ClearNewTime() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_NewTime = 0
}

func (x *EventsAndFaultsGen1_TimeAdjustmentRecord) ClearWorkshopName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_WorkshopName = nil
}

func (x *EventsAndFaultsGen1_TimeAdjustmentRecord) ClearWorkshopAddress() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_WorkshopAddress = nil
}

func (x *EventsAndFaultsGen1_TimeAdjustmentRecord) ClearWorkshopCardNumber() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_WorkshopCardNumber = nil
}

func (x *EventsAndFaultsGen1_TimeAdjustmentRecord) ClearWorkshopCardGeneration() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_WorkshopCardGeneration = 0
}

type EventsAndFaultsGen1_TimeAdjustmentRecord_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// See Appendix 1, 2.232
	OldTime                *uint32
	NewTime                *uint32
	WorkshopName           *string
	WorkshopAddress        *string
	WorkshopCardNumber     *string
	WorkshopCardGeneration *uint32
}

func (b0 EventsAndFaultsGen1_TimeAdjustmentRecord_builder) Build() *EventsAndFaultsGen1_TimeAdjustmentRecord {
	m0 := &EventsAndFaultsGen1_TimeAdjustmentRecord{}
	b, x := &b0, m0
	_, _ = b, x
	if b.OldTime != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_OldTime = *b.OldTime
	}
	if b.NewTime != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_NewTime = *b.NewTime
	}
	if b.WorkshopName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_WorkshopName = b.WorkshopName
	}
	if b.WorkshopAddress != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_WorkshopAddress = b.WorkshopAddress
	}
	if b.WorkshopCardNumber != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_WorkshopCardNumber = b.WorkshopCardNumber
	}
	if b.WorkshopCardGeneration != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_WorkshopCardGeneration = *b.WorkshopCardGeneration
	}
	return m0
}

var File_wayplatform_connect_tachograph_vu_v1_events_and_faults_gen1_proto protoreflect.FileDescriptor

const file_wayplatform_connect_tachograph_vu_v1_events_and_faults_gen1_proto_rawDesc = "" +
	"\n" +
	"Awayplatform/connect/tachograph/vu/v1/events_and_faults_gen1.proto\x12$wayplatform.connect.tachograph.vu.v1\"\xfa\x0e\n" +
	"\x13EventsAndFaultsGen1\x12]\n" +
	"\x06faults\x18\x01 \x03(\v2E.wayplatform.connect.tachograph.vu.v1.EventsAndFaultsGen1.FaultRecordR\x06faults\x12]\n" +
	"\x06events\x18\x02 \x03(\v2E.wayplatform.connect.tachograph.vu.v1.EventsAndFaultsGen1.EventRecordR\x06events\x12\x84\x01\n" +
	"\x14overspeeding_control\x18\x03 \x01(\v2Q.wayplatform.connect.tachograph.vu.v1.EventsAndFaultsGen1.OverSpeedingControlDataR\x13overspeedingControl\x12\x82\x01\n" +
	"\x13overspeeding_events\x18\x04 \x03(\v2Q.wayplatform.connect.tachograph.vu.v1.EventsAndFaultsGen1.OverSpeedingEventRecordR\x12overspeedingEvents\x12y\n" +
	"\x10time_adjustments\x18\x05 \x03(\v2N.wayplatform.connect.tachograph.vu.v1.EventsAndFaultsGen1.TimeAdjustmentRecordR\x0ftimeAdjustments\x12\x1c\n" +
	"\tsignature\x18\x06 \x01(\fR\tsignature\x1a\xd7\x01\n" +
	"\vFaultRecord\x12\x1d\n" +
	"\n" +
	"fault_type\x18\x01 \x01(\rR\tfaultType\x12%\n" +
	"\x0erecord_purpose\x18\x02 \x01(\rR\rrecordPurpose\x12\x1d\n" +
	"\n" +
	"begin_time\x18\x03 \x01(\rR\tbeginTime\x12\x19\n" +
	"\bend_time\x18\x04 \x01(\rR\aendTime\x12\x1f\n" +
	"\vcard_number\x18\x05 \x01(\tR\n" +
	"cardNumber\x12'\n" +
	"\x0fcard_generation\x18\x06 \x01(\rR\x0ecardGeneration\x1a\x8b\x02\n" +
	"\vEventRecord\x12\x1d\n" +
	"\n" +
	"event_type\x18\x01 \x01(\rR\teventType\x12%\n" +
	"\x0erecord_purpose\x18\x02 \x01(\rR\rrecordPurpose\x12\x1d\n" +
	"\n" +
	"begin_time\x18\x03 \x01(\rR\tbeginTime\x12\x19\n" +
	"\bend_time\x18\x04 \x01(\rR\aendTime\x12\x1f\n" +
	"\vcard_number\x18\x05 \x01(\tR\n" +
	"cardNumber\x12'\n" +
	"\x0fcard_generation\x18\x06 \x01(\rR\x0ecardGeneration\x122\n" +
	"\x15similar_events_number\x18\a \x01(\rR\x13similarEventsNumber\x1a\xe4\x01\n" +
	"\x17OverSpeedingControlData\x12*\n" +
	"\x11last_control_time\x18\x01 \x01(\rR\x0flastControlTime\x12J\n" +
	"\"first_overspeed_since_last_control\x18\x02 \x01(\rR\x1efirstOverspeedSinceLastControl\x12Q\n" +
	"&number_of_overspeed_since_last_control\x18\x03 \x01(\rR!numberOfOverspeedSinceLastControl\x1a\xa5\x02\n" +
	"\x17OverSpeedingEventRecord\x12\x1d\n" +
	"\n" +
	"event_type\x18\x01 \x01(\rR\teventType\x12%\n" +
	"\x0erecord_purpose\x18\x02 \x01(\rR\rrecordPurpose\x12\x1d\n" +
	"\n" +
	"begin_time\x18\x03 \x01(\rR\tbeginTime\x12\x19\n" +
	"\bend_time\x18\x04 \x01(\rR\aendTime\x12\x1b\n" +
	"\tmax_speed\x18\x05 \x01(\rR\bmaxSpeed\x12#\n" +
	"\raverage_speed\x18\x06 \x01(\rR\faverageSpeed\x12\x1f\n" +
	"\vcard_number\x18\a \x01(\tR\n" +
	"cardNumber\x12'\n" +
	"\x0fcard_generation\x18\b \x01(\rR\x0ecardGeneration\x1a\x88\x02\n" +
	"\x14TimeAdjustmentRecord\x12\x19\n" +
	"\bold_time\x18\x01 \x01(\rR\aoldTime\x12\x19\n" +
	"\bnew_time\x18\x02 \x01(\rR\anewTime\x12#\n" +
	"\rworkshop_name\x18\x03 \x01(\tR\fworkshopName\x12)\n" +
	"\x10workshop_address\x18\x04 \x01(\tR\x0fworkshopAddress\x120\n" +
	"\x14workshop_card_number\x18\x05 \x01(\tR\x12workshopCardNumber\x128\n" +
	"\x18workshop_card_generation\x18\x06 \x01(\rR\x16workshopCardGenerationB\xd7\x02\n" +
	"(com.wayplatform.connect.tachograph.vu.v1B\x18EventsAndFaultsGen1ProtoP\x01Z\\github.com/way-platform/tachograph-go/proto/gen/go/wayplatform/connect/tachograph/vu/v1;vuv1\xa2\x02\x04WCTV\xaa\x02$Wayplatform.Connect.Tachograph.Vu.V1\xca\x02$Wayplatform\\Connect\\Tachograph\\Vu\\V1\xe2\x020Wayplatform\\Connect\\Tachograph\\Vu\\V1\\GPBMetadata\xea\x02(Wayplatform::Connect::Tachograph::Vu::V1b\beditionsp\xe8\a"

var file_wayplatform_connect_tachograph_vu_v1_events_and_faults_gen1_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_wayplatform_connect_tachograph_vu_v1_events_and_faults_gen1_proto_goTypes = []any{
	(*EventsAndFaultsGen1)(nil),                         // 0: wayplatform.connect.tachograph.vu.v1.EventsAndFaultsGen1
	(*EventsAndFaultsGen1_FaultRecord)(nil),             // 1: wayplatform.connect.tachograph.vu.v1.EventsAndFaultsGen1.FaultRecord
	(*EventsAndFaultsGen1_EventRecord)(nil),             // 2: wayplatform.connect.tachograph.vu.v1.EventsAndFaultsGen1.EventRecord
	(*EventsAndFaultsGen1_OverSpeedingControlData)(nil), // 3: wayplatform.connect.tachograph.vu.v1.EventsAndFaultsGen1.OverSpeedingControlData
	(*EventsAndFaultsGen1_OverSpeedingEventRecord)(nil), // 4: wayplatform.connect.tachograph.vu.v1.EventsAndFaultsGen1.OverSpeedingEventRecord
	(*EventsAndFaultsGen1_TimeAdjustmentRecord)(nil),    // 5: wayplatform.connect.tachograph.vu.v1.EventsAndFaultsGen1.TimeAdjustmentRecord
}
var file_wayplatform_connect_tachograph_vu_v1_events_and_faults_gen1_proto_depIdxs = []int32{
	1, // 0: wayplatform.connect.tachograph.vu.v1.EventsAndFaultsGen1.faults:type_name -> wayplatform.connect.tachograph.vu.v1.EventsAndFaultsGen1.FaultRecord
	2, // 1: wayplatform.connect.tachograph.vu.v1.EventsAndFaultsGen1.events:type_name -> wayplatform.connect.tachograph.vu.v1.EventsAndFaultsGen1.EventRecord
	3, // 2: wayplatform.connect.tachograph.vu.v1.EventsAndFaultsGen1.overspeeding_control:type_name -> wayplatform.connect.tachograph.vu.v1.EventsAndFaultsGen1.OverSpeedingControlData
	4, // 3: wayplatform.connect.tachograph.vu.v1.EventsAndFaultsGen1.overspeeding_events:type_name -> wayplatform.connect.tachograph.vu.v1.EventsAndFaultsGen1.OverSpeedingEventRecord
	5, // 4: wayplatform.connect.tachograph.vu.v1.EventsAndFaultsGen1.time_adjustments:type_name -> wayplatform.connect.tachograph.vu.v1.EventsAndFaultsGen1.TimeAdjustmentRecord
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_wayplatform_connect_tachograph_vu_v1_events_and_faults_gen1_proto_init() }
func file_wayplatform_connect_tachograph_vu_v1_events_and_faults_gen1_proto_init() {
	if File_wayplatform_connect_tachograph_vu_v1_events_and_faults_gen1_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wayplatform_connect_tachograph_vu_v1_events_and_faults_gen1_proto_rawDesc), len(file_wayplatform_connect_tachograph_vu_v1_events_and_faults_gen1_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wayplatform_connect_tachograph_vu_v1_events_and_faults_gen1_proto_goTypes,
		DependencyIndexes: file_wayplatform_connect_tachograph_vu_v1_events_and_faults_gen1_proto_depIdxs,
		MessageInfos:      file_wayplatform_connect_tachograph_vu_v1_events_and_faults_gen1_proto_msgTypes,
	}.Build()
	File_wayplatform_connect_tachograph_vu_v1_events_and_faults_gen1_proto = out.File
	file_wayplatform_connect_tachograph_vu_v1_events_and_faults_gen1_proto_goTypes = nil
	file_wayplatform_connect_tachograph_vu_v1_events_and_faults_gen1_proto_depIdxs = nil
}
