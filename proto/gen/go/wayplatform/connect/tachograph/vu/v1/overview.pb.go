// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wayplatform/connect/tachograph/vu/v1/overview.proto

package vuv1

import (
	v1 "github.com/way-platform/tachograph-go/proto/gen/go/wayplatform/connect/tachograph/dd/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents the consolidated data structure for an Overview transfer.
//
// This message corresponds to the data defined in the regulation document:
// Appendix 7, Section 2.2.6.2: "Positive Response Transfer Data Overview".
type Overview struct {
	state                                    protoimpl.MessageState                `protogen:"opaque.v1"`
	xxx_hidden_Generation                    v1.Generation                         `protobuf:"varint,1,opt,name=generation,enum=wayplatform.connect.tachograph.dd.v1.Generation"`
	xxx_hidden_Version                       v1.Version                            `protobuf:"varint,2,opt,name=version,enum=wayplatform.connect.tachograph.dd.v1.Version"`
	xxx_hidden_MemberStateCertificate        []byte                                `protobuf:"bytes,3,opt,name=member_state_certificate,json=memberStateCertificate"`
	xxx_hidden_VuCertificate                 []byte                                `protobuf:"bytes,4,opt,name=vu_certificate,json=vuCertificate"`
	xxx_hidden_VehicleIdentificationNumber   *v1.StringValue                       `protobuf:"bytes,5,opt,name=vehicle_identification_number,json=vehicleIdentificationNumber"`
	xxx_hidden_CurrentDateTime               *timestamppb.Timestamp                `protobuf:"bytes,6,opt,name=current_date_time,json=currentDateTime"`
	xxx_hidden_DownloadablePeriod            *v1.DownloadablePeriod                `protobuf:"bytes,7,opt,name=downloadable_period,json=downloadablePeriod"`
	xxx_hidden_DriverSlotCard                v1.SlotCardType                       `protobuf:"varint,8,opt,name=driver_slot_card,json=driverSlotCard,enum=wayplatform.connect.tachograph.dd.v1.SlotCardType"`
	xxx_hidden_CoDriverSlotCard              v1.SlotCardType                       `protobuf:"varint,9,opt,name=co_driver_slot_card,json=coDriverSlotCard,enum=wayplatform.connect.tachograph.dd.v1.SlotCardType"`
	xxx_hidden_DownloadActivities            *[]*Overview_DownloadActivity         `protobuf:"bytes,10,rep,name=download_activities,json=downloadActivities"`
	xxx_hidden_CompanyLocks                  *[]*Overview_CompanyLock              `protobuf:"bytes,11,rep,name=company_locks,json=companyLocks"`
	xxx_hidden_ControlActivities             *[]*Overview_ControlActivity          `protobuf:"bytes,12,rep,name=control_activities,json=controlActivities"`
	xxx_hidden_VehicleRegistrationWithNation *v1.VehicleRegistrationIdentification `protobuf:"bytes,13,opt,name=vehicle_registration_with_nation,json=vehicleRegistrationWithNation"`
	xxx_hidden_VehicleRegistrationNumberOnly *v1.StringValue                       `protobuf:"bytes,14,opt,name=vehicle_registration_number_only,json=vehicleRegistrationNumberOnly"`
	xxx_hidden_SignatureGen1                 []byte                                `protobuf:"bytes,15,opt,name=signature_gen1,json=signatureGen1"`
	xxx_hidden_SignatureGen2                 []byte                                `protobuf:"bytes,16,opt,name=signature_gen2,json=signatureGen2"`
	XXX_raceDetectHookData                   protoimpl.RaceDetectHookData
	XXX_presence                             [1]uint32
	unknownFields                            protoimpl.UnknownFields
	sizeCache                                protoimpl.SizeCache
}

func (x *Overview) Reset() {
	*x = Overview{}
	mi := &file_wayplatform_connect_tachograph_vu_v1_overview_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Overview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Overview) ProtoMessage() {}

func (x *Overview) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_vu_v1_overview_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Overview) GetGeneration() v1.Generation {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_Generation
		}
	}
	return v1.Generation(0)
}

func (x *Overview) GetVersion() v1.Version {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_Version
		}
	}
	return v1.Version(0)
}

func (x *Overview) GetMemberStateCertificate() []byte {
	if x != nil {
		return x.xxx_hidden_MemberStateCertificate
	}
	return nil
}

func (x *Overview) GetVuCertificate() []byte {
	if x != nil {
		return x.xxx_hidden_VuCertificate
	}
	return nil
}

func (x *Overview) GetVehicleIdentificationNumber() *v1.StringValue {
	if x != nil {
		return x.xxx_hidden_VehicleIdentificationNumber
	}
	return nil
}

func (x *Overview) GetCurrentDateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_CurrentDateTime
	}
	return nil
}

func (x *Overview) GetDownloadablePeriod() *v1.DownloadablePeriod {
	if x != nil {
		return x.xxx_hidden_DownloadablePeriod
	}
	return nil
}

func (x *Overview) GetDriverSlotCard() v1.SlotCardType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 7) {
			return x.xxx_hidden_DriverSlotCard
		}
	}
	return v1.SlotCardType(0)
}

func (x *Overview) GetCoDriverSlotCard() v1.SlotCardType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 8) {
			return x.xxx_hidden_CoDriverSlotCard
		}
	}
	return v1.SlotCardType(0)
}

func (x *Overview) GetDownloadActivities() []*Overview_DownloadActivity {
	if x != nil {
		if x.xxx_hidden_DownloadActivities != nil {
			return *x.xxx_hidden_DownloadActivities
		}
	}
	return nil
}

func (x *Overview) GetCompanyLocks() []*Overview_CompanyLock {
	if x != nil {
		if x.xxx_hidden_CompanyLocks != nil {
			return *x.xxx_hidden_CompanyLocks
		}
	}
	return nil
}

func (x *Overview) GetControlActivities() []*Overview_ControlActivity {
	if x != nil {
		if x.xxx_hidden_ControlActivities != nil {
			return *x.xxx_hidden_ControlActivities
		}
	}
	return nil
}

func (x *Overview) GetVehicleRegistrationWithNation() *v1.VehicleRegistrationIdentification {
	if x != nil {
		return x.xxx_hidden_VehicleRegistrationWithNation
	}
	return nil
}

func (x *Overview) GetVehicleRegistrationNumberOnly() *v1.StringValue {
	if x != nil {
		return x.xxx_hidden_VehicleRegistrationNumberOnly
	}
	return nil
}

func (x *Overview) GetSignatureGen1() []byte {
	if x != nil {
		return x.xxx_hidden_SignatureGen1
	}
	return nil
}

func (x *Overview) GetSignatureGen2() []byte {
	if x != nil {
		return x.xxx_hidden_SignatureGen2
	}
	return nil
}

func (x *Overview) SetGeneration(v v1.Generation) {
	x.xxx_hidden_Generation = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 16)
}

func (x *Overview) SetVersion(v v1.Version) {
	x.xxx_hidden_Version = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 16)
}

func (x *Overview) SetMemberStateCertificate(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_MemberStateCertificate = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 16)
}

func (x *Overview) SetVuCertificate(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_VuCertificate = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 16)
}

func (x *Overview) SetVehicleIdentificationNumber(v *v1.StringValue) {
	x.xxx_hidden_VehicleIdentificationNumber = v
}

func (x *Overview) SetCurrentDateTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_CurrentDateTime = v
}

func (x *Overview) SetDownloadablePeriod(v *v1.DownloadablePeriod) {
	x.xxx_hidden_DownloadablePeriod = v
}

func (x *Overview) SetDriverSlotCard(v v1.SlotCardType) {
	x.xxx_hidden_DriverSlotCard = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 16)
}

func (x *Overview) SetCoDriverSlotCard(v v1.SlotCardType) {
	x.xxx_hidden_CoDriverSlotCard = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 16)
}

func (x *Overview) SetDownloadActivities(v []*Overview_DownloadActivity) {
	x.xxx_hidden_DownloadActivities = &v
}

func (x *Overview) SetCompanyLocks(v []*Overview_CompanyLock) {
	x.xxx_hidden_CompanyLocks = &v
}

func (x *Overview) SetControlActivities(v []*Overview_ControlActivity) {
	x.xxx_hidden_ControlActivities = &v
}

func (x *Overview) SetVehicleRegistrationWithNation(v *v1.VehicleRegistrationIdentification) {
	x.xxx_hidden_VehicleRegistrationWithNation = v
}

func (x *Overview) SetVehicleRegistrationNumberOnly(v *v1.StringValue) {
	x.xxx_hidden_VehicleRegistrationNumberOnly = v
}

func (x *Overview) SetSignatureGen1(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_SignatureGen1 = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 14, 16)
}

func (x *Overview) SetSignatureGen2(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_SignatureGen2 = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 15, 16)
}

func (x *Overview) HasGeneration() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Overview) HasVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Overview) HasMemberStateCertificate() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Overview) HasVuCertificate() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Overview) HasVehicleIdentificationNumber() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_VehicleIdentificationNumber != nil
}

func (x *Overview) HasCurrentDateTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CurrentDateTime != nil
}

func (x *Overview) HasDownloadablePeriod() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DownloadablePeriod != nil
}

func (x *Overview) HasDriverSlotCard() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *Overview) HasCoDriverSlotCard() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *Overview) HasVehicleRegistrationWithNation() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_VehicleRegistrationWithNation != nil
}

func (x *Overview) HasVehicleRegistrationNumberOnly() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_VehicleRegistrationNumberOnly != nil
}

func (x *Overview) HasSignatureGen1() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 14)
}

func (x *Overview) HasSignatureGen2() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 15)
}

func (x *Overview) ClearGeneration() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Generation = v1.Generation_GENERATION_UNSPECIFIED
}

func (x *Overview) ClearVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Version = v1.Version_VERSION_UNSPECIFIED
}

func (x *Overview) ClearMemberStateCertificate() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_MemberStateCertificate = nil
}

func (x *Overview) ClearVuCertificate() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_VuCertificate = nil
}

func (x *Overview) ClearVehicleIdentificationNumber() {
	x.xxx_hidden_VehicleIdentificationNumber = nil
}

func (x *Overview) ClearCurrentDateTime() {
	x.xxx_hidden_CurrentDateTime = nil
}

func (x *Overview) ClearDownloadablePeriod() {
	x.xxx_hidden_DownloadablePeriod = nil
}

func (x *Overview) ClearDriverSlotCard() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_DriverSlotCard = v1.SlotCardType_SLOT_CARD_TYPE_UNSPECIFIED
}

func (x *Overview) ClearCoDriverSlotCard() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_CoDriverSlotCard = v1.SlotCardType_SLOT_CARD_TYPE_UNSPECIFIED
}

func (x *Overview) ClearVehicleRegistrationWithNation() {
	x.xxx_hidden_VehicleRegistrationWithNation = nil
}

func (x *Overview) ClearVehicleRegistrationNumberOnly() {
	x.xxx_hidden_VehicleRegistrationNumberOnly = nil
}

func (x *Overview) ClearSignatureGen1() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 14)
	x.xxx_hidden_SignatureGen1 = nil
}

func (x *Overview) ClearSignatureGen2() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 15)
	x.xxx_hidden_SignatureGen2 = nil
}

type Overview_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The generation of the vehicle unit, parsed from the raw transfer data.
	// This is a discriminator field used for parsing.
	Generation *v1.Generation
	// The version of the interface, parsed from the raw transfer data.
	// This is a discriminator field used for parsing.
	Version *v1.Version
	// VU Security certificate from the Member State.
	//
	// See Data Dictionary, Section 2.96, `MemberStateCertificate`.
	// ASN.1 Definition:
	//
	//	MemberStateCertificate ::= Certificate
	MemberStateCertificate []byte
	// The VU's own security certificate.
	//
	// See Data Dictionary, Section 2.181, `VuCertificate`.
	// ASN.1 Definition:
	//
	//	VuCertificate ::= Certificate
	VuCertificate []byte
	// The Vehicle Identification Number.
	//
	// See Data Dictionary, Section 2.164, `VehicleIdentificationNumber`.
	//
	// ASN.1 Definition:
	//
	//	VehicleIdentificationNumber ::= IA5String(SIZE(17))
	VehicleIdentificationNumber *v1.StringValue
	// Current date and time of the VU.
	//
	// See Data Dictionary, Section 2.54, `CurrentDateTime`.
	// ASN.1 Definition:
	//
	//	CurrentDateTime ::= TimeReal
	CurrentDateTime *timestamppb.Timestamp
	// The range of dates for which data can be downloaded.
	DownloadablePeriod *v1.DownloadablePeriod
	// Type of card in the driver slot.
	DriverSlotCard *v1.SlotCardType
	// Type of card in the co-driver slot.
	CoDriverSlotCard *v1.SlotCardType
	// Information about recent download activities.
	// This field uses a repeated message to represent both the single record from Gen1
	// and the record array from Gen2, as per the project's design guidelines.
	//
	// See Data Dictionary, Sections 2.195 and 2.196.
	//
	// ASN.1 Definition (Gen1 - `VuDownloadActivityData`):
	//
	//	VuDownloadActivityData ::= SEQUENCE {
	//	    downloadingTime TimeReal,
	//	    fullCardNumber FullCardNumber,
	//	    companyOrWorkshopName Name
	//	}
	//
	// ASN.1 Definition (Gen2 - `VuDownloadActivityDataRecordArray`):
	//
	//	VuDownloadActivityDataRecordArray ::= SEQUENCE {
	//	    recordType RecordType,
	//	    recordSize INTEGER(0..2^16-1),
	//	    noOfRecords INTEGER(0..2^16-1),
	//	    records SET SIZE(noOfRecords) OF VuDownloadActivityData
	//	}
	DownloadActivities []*Overview_DownloadActivity
	// All company locks stored in the VU.
	//
	// See Data Dictionary, Section 2.183, `VuCompanyLocksData`.
	CompanyLocks []*Overview_CompanyLock
	// All control records stored in the VU.
	//
	// See Data Dictionary, Section 2.186, `VuControlActivityData`.
	ControlActivities []*Overview_ControlActivity
	// The vehicle registration, including nation (Gen1, Gen2v1).
	//
	// See Data Dictionary, Section 2.166, `VehicleRegistrationIdentification`.
	VehicleRegistrationWithNation *v1.VehicleRegistrationIdentification
	// The vehicle registration number only (Gen2v2).
	//
	// See Data Dictionary, Section 2.167, `VehicleRegistrationNumber`.
	// ASN.1 Definition:
	//
	//	VehicleRegistrationNumber ::= IA5String(SIZE(13))
	VehicleRegistrationNumberOnly *v1.StringValue
	// Signature for Gen1 data.
	//
	// See Data Dictionary, Section 2.149, `Signature`.
	// ASN.1 Definition:
	//
	//	Signature ::= OCTET STRING (SIZE (128))
	SignatureGen1 []byte
	// Signature for Gen2 data.
	//
	// See Data Dictionary, Section 2.149, `Signature`.
	SignatureGen2 []byte
}

func (b0 Overview_builder) Build() *Overview {
	m0 := &Overview{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Generation != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 16)
		x.xxx_hidden_Generation = *b.Generation
	}
	if b.Version != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 16)
		x.xxx_hidden_Version = *b.Version
	}
	if b.MemberStateCertificate != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 16)
		x.xxx_hidden_MemberStateCertificate = b.MemberStateCertificate
	}
	if b.VuCertificate != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 16)
		x.xxx_hidden_VuCertificate = b.VuCertificate
	}
	x.xxx_hidden_VehicleIdentificationNumber = b.VehicleIdentificationNumber
	x.xxx_hidden_CurrentDateTime = b.CurrentDateTime
	x.xxx_hidden_DownloadablePeriod = b.DownloadablePeriod
	if b.DriverSlotCard != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 16)
		x.xxx_hidden_DriverSlotCard = *b.DriverSlotCard
	}
	if b.CoDriverSlotCard != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 16)
		x.xxx_hidden_CoDriverSlotCard = *b.CoDriverSlotCard
	}
	x.xxx_hidden_DownloadActivities = &b.DownloadActivities
	x.xxx_hidden_CompanyLocks = &b.CompanyLocks
	x.xxx_hidden_ControlActivities = &b.ControlActivities
	x.xxx_hidden_VehicleRegistrationWithNation = b.VehicleRegistrationWithNation
	x.xxx_hidden_VehicleRegistrationNumberOnly = b.VehicleRegistrationNumberOnly
	if b.SignatureGen1 != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 14, 16)
		x.xxx_hidden_SignatureGen1 = b.SignatureGen1
	}
	if b.SignatureGen2 != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 15, 16)
		x.xxx_hidden_SignatureGen2 = b.SignatureGen2
	}
	return m0
}

// Represents a record of a download activity from the VU.
//
// This message corresponds to the `VuDownloadActivityData` data type.
// See Data Dictionary, Section 2.195.
//
// ASN.1 Definition (Gen1):
//
//	VuDownloadActivityData ::= SEQUENCE {
//	    downloadingTime TimeReal,
//	    fullCardNumber FullCardNumber,
//	    companyOrWorkshopName Name
//	}
//
// For Gen2, this is typically part of a `VuDownloadActivityDataRecordArray`.
type Overview_DownloadActivity struct {
	state                                  protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_DownloadingTime             *timestamppb.Timestamp          `protobuf:"bytes,1,opt,name=downloading_time,json=downloadingTime"`
	xxx_hidden_FullCardNumberAndGeneration *v1.FullCardNumberAndGeneration `protobuf:"bytes,2,opt,name=full_card_number_and_generation,json=fullCardNumberAndGeneration"`
	xxx_hidden_CompanyOrWorkshopName       *v1.StringValue                 `protobuf:"bytes,3,opt,name=company_or_workshop_name,json=companyOrWorkshopName"`
	unknownFields                          protoimpl.UnknownFields
	sizeCache                              protoimpl.SizeCache
}

func (x *Overview_DownloadActivity) Reset() {
	*x = Overview_DownloadActivity{}
	mi := &file_wayplatform_connect_tachograph_vu_v1_overview_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Overview_DownloadActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Overview_DownloadActivity) ProtoMessage() {}

func (x *Overview_DownloadActivity) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_vu_v1_overview_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Overview_DownloadActivity) GetDownloadingTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_DownloadingTime
	}
	return nil
}

func (x *Overview_DownloadActivity) GetFullCardNumberAndGeneration() *v1.FullCardNumberAndGeneration {
	if x != nil {
		return x.xxx_hidden_FullCardNumberAndGeneration
	}
	return nil
}

func (x *Overview_DownloadActivity) GetCompanyOrWorkshopName() *v1.StringValue {
	if x != nil {
		return x.xxx_hidden_CompanyOrWorkshopName
	}
	return nil
}

func (x *Overview_DownloadActivity) SetDownloadingTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_DownloadingTime = v
}

func (x *Overview_DownloadActivity) SetFullCardNumberAndGeneration(v *v1.FullCardNumberAndGeneration) {
	x.xxx_hidden_FullCardNumberAndGeneration = v
}

func (x *Overview_DownloadActivity) SetCompanyOrWorkshopName(v *v1.StringValue) {
	x.xxx_hidden_CompanyOrWorkshopName = v
}

func (x *Overview_DownloadActivity) HasDownloadingTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DownloadingTime != nil
}

func (x *Overview_DownloadActivity) HasFullCardNumberAndGeneration() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_FullCardNumberAndGeneration != nil
}

func (x *Overview_DownloadActivity) HasCompanyOrWorkshopName() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CompanyOrWorkshopName != nil
}

func (x *Overview_DownloadActivity) ClearDownloadingTime() {
	x.xxx_hidden_DownloadingTime = nil
}

func (x *Overview_DownloadActivity) ClearFullCardNumberAndGeneration() {
	x.xxx_hidden_FullCardNumberAndGeneration = nil
}

func (x *Overview_DownloadActivity) ClearCompanyOrWorkshopName() {
	x.xxx_hidden_CompanyOrWorkshopName = nil
}

type Overview_DownloadActivity_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The time the download was performed.
	//
	// See Data Dictionary, Section 2.162, `TimeReal`.
	// ASN.1 Definition:
	//
	//	TimeReal ::= INTEGER (0..2^32-1)
	DownloadingTime *timestamppb.Timestamp
	// The card number of the company or workshop that performed the download.
	//
	// The underlying `VuDownloadActivityData` record exists for both Gen1 and Gen2.
	// To support both versions in a single field and ensure unique card
	// identification for Gen2, this uses the `FullCardNumberAndGeneration` superset.
	// For Gen1 records, the `generation` field will be unset.
	FullCardNumberAndGeneration *v1.FullCardNumberAndGeneration
	// The name of the company or workshop.
	//
	// See Data Dictionary, Section 2.99, `Name`.
	// ASN.1 Definition:
	//
	//	Name ::= SEQUENCE { codePage INTEGER(0..255), name OCTET STRING (SIZE(36)) }
	CompanyOrWorkshopName *v1.StringValue
}

func (b0 Overview_DownloadActivity_builder) Build() *Overview_DownloadActivity {
	m0 := &Overview_DownloadActivity{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_DownloadingTime = b.DownloadingTime
	x.xxx_hidden_FullCardNumberAndGeneration = b.FullCardNumberAndGeneration
	x.xxx_hidden_CompanyOrWorkshopName = b.CompanyOrWorkshopName
	return m0
}

// Represents a company lock record.
//
// See Data Dictionary, Section 2.184, `VuCompanyLocksRecord`.
//
// ASN.1 Definition:
//
//	VuCompanyLocksRecord ::= SEQUENCE {
//	    lockInTime TimeReal,
//	    lockOutTime TimeReal,
//	    companyName Name,
//	    companyAddress Address,
//	    companyCardNumber FullCardNumber
//	}
type Overview_CompanyLock struct {
	state                                     protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_LockInTime                     *timestamppb.Timestamp          `protobuf:"bytes,1,opt,name=lock_in_time,json=lockInTime"`
	xxx_hidden_LockOutTime                    *timestamppb.Timestamp          `protobuf:"bytes,2,opt,name=lock_out_time,json=lockOutTime"`
	xxx_hidden_CompanyName                    *v1.StringValue                 `protobuf:"bytes,3,opt,name=company_name,json=companyName"`
	xxx_hidden_CompanyAddress                 *v1.StringValue                 `protobuf:"bytes,4,opt,name=company_address,json=companyAddress"`
	xxx_hidden_CompanyCardNumberAndGeneration *v1.FullCardNumberAndGeneration `protobuf:"bytes,5,opt,name=company_card_number_and_generation,json=companyCardNumberAndGeneration"`
	unknownFields                             protoimpl.UnknownFields
	sizeCache                                 protoimpl.SizeCache
}

func (x *Overview_CompanyLock) Reset() {
	*x = Overview_CompanyLock{}
	mi := &file_wayplatform_connect_tachograph_vu_v1_overview_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Overview_CompanyLock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Overview_CompanyLock) ProtoMessage() {}

func (x *Overview_CompanyLock) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_vu_v1_overview_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Overview_CompanyLock) GetLockInTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_LockInTime
	}
	return nil
}

func (x *Overview_CompanyLock) GetLockOutTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_LockOutTime
	}
	return nil
}

func (x *Overview_CompanyLock) GetCompanyName() *v1.StringValue {
	if x != nil {
		return x.xxx_hidden_CompanyName
	}
	return nil
}

func (x *Overview_CompanyLock) GetCompanyAddress() *v1.StringValue {
	if x != nil {
		return x.xxx_hidden_CompanyAddress
	}
	return nil
}

func (x *Overview_CompanyLock) GetCompanyCardNumberAndGeneration() *v1.FullCardNumberAndGeneration {
	if x != nil {
		return x.xxx_hidden_CompanyCardNumberAndGeneration
	}
	return nil
}

func (x *Overview_CompanyLock) SetLockInTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_LockInTime = v
}

func (x *Overview_CompanyLock) SetLockOutTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_LockOutTime = v
}

func (x *Overview_CompanyLock) SetCompanyName(v *v1.StringValue) {
	x.xxx_hidden_CompanyName = v
}

func (x *Overview_CompanyLock) SetCompanyAddress(v *v1.StringValue) {
	x.xxx_hidden_CompanyAddress = v
}

func (x *Overview_CompanyLock) SetCompanyCardNumberAndGeneration(v *v1.FullCardNumberAndGeneration) {
	x.xxx_hidden_CompanyCardNumberAndGeneration = v
}

func (x *Overview_CompanyLock) HasLockInTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_LockInTime != nil
}

func (x *Overview_CompanyLock) HasLockOutTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_LockOutTime != nil
}

func (x *Overview_CompanyLock) HasCompanyName() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CompanyName != nil
}

func (x *Overview_CompanyLock) HasCompanyAddress() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CompanyAddress != nil
}

func (x *Overview_CompanyLock) HasCompanyCardNumberAndGeneration() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CompanyCardNumberAndGeneration != nil
}

func (x *Overview_CompanyLock) ClearLockInTime() {
	x.xxx_hidden_LockInTime = nil
}

func (x *Overview_CompanyLock) ClearLockOutTime() {
	x.xxx_hidden_LockOutTime = nil
}

func (x *Overview_CompanyLock) ClearCompanyName() {
	x.xxx_hidden_CompanyName = nil
}

func (x *Overview_CompanyLock) ClearCompanyAddress() {
	x.xxx_hidden_CompanyAddress = nil
}

func (x *Overview_CompanyLock) ClearCompanyCardNumberAndGeneration() {
	x.xxx_hidden_CompanyCardNumberAndGeneration = nil
}

type Overview_CompanyLock_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The time the lock was engaged.
	//
	// See Data Dictionary, Section 2.162, `TimeReal`.
	// ASN.1 Definition:
	//
	//	TimeReal ::= INTEGER (0..2^32-1)
	LockInTime *timestamppb.Timestamp
	// The time the lock was disengaged.
	//
	// See Data Dictionary, Section 2.162, `TimeReal`.
	// ASN.1 Definition:
	//
	//	TimeReal ::= INTEGER (0..2^32-1)
	LockOutTime *timestamppb.Timestamp
	// The name of the company that applied the lock.
	//
	// See Data Dictionary, Section 2.99, `Name`.
	// ASN.1 Definition:
	//
	//	Name ::= SEQUENCE { codePage INTEGER(0..255), name OCTET STRING (SIZE(36)) }
	CompanyName *v1.StringValue
	// The address of the company.
	//
	// See Data Dictionary, Section 2.2, `Address`.
	// ASN.1 Definition:
	//
	//	Address ::= SEQUENCE { codePage INTEGER(0..255), address OCTET STRING (SIZE(36)) }
	CompanyAddress *v1.StringValue
	// The card number of the company.
	//
	// The underlying `VuCompanyLocksRecord` exists for both Gen1 and Gen2.
	// To support both versions in a single field and ensure unique card
	// identification for Gen2, this uses the `FullCardNumberAndGeneration` superset.
	// For Gen1 records, the `generation` field will be unset.
	CompanyCardNumberAndGeneration *v1.FullCardNumberAndGeneration
}

func (b0 Overview_CompanyLock_builder) Build() *Overview_CompanyLock {
	m0 := &Overview_CompanyLock{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_LockInTime = b.LockInTime
	x.xxx_hidden_LockOutTime = b.LockOutTime
	x.xxx_hidden_CompanyName = b.CompanyName
	x.xxx_hidden_CompanyAddress = b.CompanyAddress
	x.xxx_hidden_CompanyCardNumberAndGeneration = b.CompanyCardNumberAndGeneration
	return m0
}

// Represents a control activity record.
//
// See Data Dictionary, Section 2.187, `VuControlActivityRecord`.
//
// ASN.1 Definition:
//
//	VuControlActivityRecord ::= SEQUENCE {
//	    controlType ControlType,
//	    controlTime TimeReal,
//	    controlCardNumber FullCardNumber,
//	    downloadPeriodBeginTime TimeReal,
//	    downloadPeriodEndTime TimeReal
//	}
type Overview_ControlActivity struct {
	state                                     protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_ControlType                    *v1.ControlType                 `protobuf:"bytes,1,opt,name=control_type,json=controlType"`
	xxx_hidden_ControlTime                    *timestamppb.Timestamp          `protobuf:"bytes,2,opt,name=control_time,json=controlTime"`
	xxx_hidden_ControlCardNumberAndGeneration *v1.FullCardNumberAndGeneration `protobuf:"bytes,3,opt,name=control_card_number_and_generation,json=controlCardNumberAndGeneration"`
	xxx_hidden_DownloadPeriodBeginTime        *timestamppb.Timestamp          `protobuf:"bytes,4,opt,name=download_period_begin_time,json=downloadPeriodBeginTime"`
	xxx_hidden_DownloadPeriodEndTime          *timestamppb.Timestamp          `protobuf:"bytes,5,opt,name=download_period_end_time,json=downloadPeriodEndTime"`
	unknownFields                             protoimpl.UnknownFields
	sizeCache                                 protoimpl.SizeCache
}

func (x *Overview_ControlActivity) Reset() {
	*x = Overview_ControlActivity{}
	mi := &file_wayplatform_connect_tachograph_vu_v1_overview_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Overview_ControlActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Overview_ControlActivity) ProtoMessage() {}

func (x *Overview_ControlActivity) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_vu_v1_overview_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Overview_ControlActivity) GetControlType() *v1.ControlType {
	if x != nil {
		return x.xxx_hidden_ControlType
	}
	return nil
}

func (x *Overview_ControlActivity) GetControlTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_ControlTime
	}
	return nil
}

func (x *Overview_ControlActivity) GetControlCardNumberAndGeneration() *v1.FullCardNumberAndGeneration {
	if x != nil {
		return x.xxx_hidden_ControlCardNumberAndGeneration
	}
	return nil
}

func (x *Overview_ControlActivity) GetDownloadPeriodBeginTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_DownloadPeriodBeginTime
	}
	return nil
}

func (x *Overview_ControlActivity) GetDownloadPeriodEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_DownloadPeriodEndTime
	}
	return nil
}

func (x *Overview_ControlActivity) SetControlType(v *v1.ControlType) {
	x.xxx_hidden_ControlType = v
}

func (x *Overview_ControlActivity) SetControlTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_ControlTime = v
}

func (x *Overview_ControlActivity) SetControlCardNumberAndGeneration(v *v1.FullCardNumberAndGeneration) {
	x.xxx_hidden_ControlCardNumberAndGeneration = v
}

func (x *Overview_ControlActivity) SetDownloadPeriodBeginTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_DownloadPeriodBeginTime = v
}

func (x *Overview_ControlActivity) SetDownloadPeriodEndTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_DownloadPeriodEndTime = v
}

func (x *Overview_ControlActivity) HasControlType() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ControlType != nil
}

func (x *Overview_ControlActivity) HasControlTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ControlTime != nil
}

func (x *Overview_ControlActivity) HasControlCardNumberAndGeneration() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ControlCardNumberAndGeneration != nil
}

func (x *Overview_ControlActivity) HasDownloadPeriodBeginTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DownloadPeriodBeginTime != nil
}

func (x *Overview_ControlActivity) HasDownloadPeriodEndTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DownloadPeriodEndTime != nil
}

func (x *Overview_ControlActivity) ClearControlType() {
	x.xxx_hidden_ControlType = nil
}

func (x *Overview_ControlActivity) ClearControlTime() {
	x.xxx_hidden_ControlTime = nil
}

func (x *Overview_ControlActivity) ClearControlCardNumberAndGeneration() {
	x.xxx_hidden_ControlCardNumberAndGeneration = nil
}

func (x *Overview_ControlActivity) ClearDownloadPeriodBeginTime() {
	x.xxx_hidden_DownloadPeriodBeginTime = nil
}

func (x *Overview_ControlActivity) ClearDownloadPeriodEndTime() {
	x.xxx_hidden_DownloadPeriodEndTime = nil
}

type Overview_ControlActivity_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The type of control activity.
	//
	// See Data Dictionary, Section 2.53, `ControlType`.
	// ASN.1 Definition:
	//
	//	ControlType ::= OCTET STRING (SIZE(1))
	ControlType *v1.ControlType
	// The time of the control.
	//
	// See Data Dictionary, Section 2.162, `TimeReal`.
	// ASN.1 Definition:
	//
	//	TimeReal ::= INTEGER (0..2^32-1)
	ControlTime *timestamppb.Timestamp
	// The card number of the control officer.
	//
	// The underlying `VuControlActivityRecord` exists for both Gen1 and Gen2.
	// To support both versions in a single field and ensure unique card
	// identification for Gen2, this uses the `FullCardNumberAndGeneration` superset.
	// For Gen1 records, the `generation` field will be unset.
	ControlCardNumberAndGeneration *v1.FullCardNumberAndGeneration
	// The start of the downloaded period.
	//
	// See Data Dictionary, Section 2.162, `TimeReal`.
	// ASN.1 Definition:
	//
	//	TimeReal ::= INTEGER (0..2^32-1)
	DownloadPeriodBeginTime *timestamppb.Timestamp
	// The end of the downloaded period.
	//
	// See Data Dictionary, Section 2.162, `TimeReal`.
	// ASN.1 Definition:
	//
	//	TimeReal ::= INTEGER (0..2^32-1)
	DownloadPeriodEndTime *timestamppb.Timestamp
}

func (b0 Overview_ControlActivity_builder) Build() *Overview_ControlActivity {
	m0 := &Overview_ControlActivity{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_ControlType = b.ControlType
	x.xxx_hidden_ControlTime = b.ControlTime
	x.xxx_hidden_ControlCardNumberAndGeneration = b.ControlCardNumberAndGeneration
	x.xxx_hidden_DownloadPeriodBeginTime = b.DownloadPeriodBeginTime
	x.xxx_hidden_DownloadPeriodEndTime = b.DownloadPeriodEndTime
	return m0
}

var File_wayplatform_connect_tachograph_vu_v1_overview_proto protoreflect.FileDescriptor

const file_wayplatform_connect_tachograph_vu_v1_overview_proto_rawDesc = "" +
	"\n" +
	"3wayplatform/connect/tachograph/vu/v1/overview.proto\x12$wayplatform.connect.tachograph.vu.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a7wayplatform/connect/tachograph/dd/v1/control_type.proto\x1a>wayplatform/connect/tachograph/dd/v1/downloadable_period.proto\x1a;wayplatform/connect/tachograph/dd/v1/full_card_number.proto\x1aJwayplatform/connect/tachograph/dd/v1/full_card_number_and_generation.proto\x1a5wayplatform/connect/tachograph/dd/v1/generation.proto\x1a9wayplatform/connect/tachograph/dd/v1/slot_card_type.proto\x1a7wayplatform/connect/tachograph/dd/v1/string_value.proto\x1aNwayplatform/connect/tachograph/dd/v1/vehicle_registration_identification.proto\x1a2wayplatform/connect/tachograph/dd/v1/version.proto\"\x99\x15\n" +
	"\bOverview\x12P\n" +
	"\n" +
	"generation\x18\x01 \x01(\x0e20.wayplatform.connect.tachograph.dd.v1.GenerationR\n" +
	"generation\x12G\n" +
	"\aversion\x18\x02 \x01(\x0e2-.wayplatform.connect.tachograph.dd.v1.VersionR\aversion\x128\n" +
	"\x18member_state_certificate\x18\x03 \x01(\fR\x16memberStateCertificate\x12%\n" +
	"\x0evu_certificate\x18\x04 \x01(\fR\rvuCertificate\x12u\n" +
	"\x1dvehicle_identification_number\x18\x05 \x01(\v21.wayplatform.connect.tachograph.dd.v1.StringValueR\x1bvehicleIdentificationNumber\x12F\n" +
	"\x11current_date_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\x0fcurrentDateTime\x12i\n" +
	"\x13downloadable_period\x18\a \x01(\v28.wayplatform.connect.tachograph.dd.v1.DownloadablePeriodR\x12downloadablePeriod\x12\\\n" +
	"\x10driver_slot_card\x18\b \x01(\x0e22.wayplatform.connect.tachograph.dd.v1.SlotCardTypeR\x0edriverSlotCard\x12a\n" +
	"\x13co_driver_slot_card\x18\t \x01(\x0e22.wayplatform.connect.tachograph.dd.v1.SlotCardTypeR\x10coDriverSlotCard\x12p\n" +
	"\x13download_activities\x18\n" +
	" \x03(\v2?.wayplatform.connect.tachograph.vu.v1.Overview.DownloadActivityR\x12downloadActivities\x12_\n" +
	"\rcompany_locks\x18\v \x03(\v2:.wayplatform.connect.tachograph.vu.v1.Overview.CompanyLockR\fcompanyLocks\x12m\n" +
	"\x12control_activities\x18\f \x03(\v2>.wayplatform.connect.tachograph.vu.v1.Overview.ControlActivityR\x11controlActivities\x12\x90\x01\n" +
	" vehicle_registration_with_nation\x18\r \x01(\v2G.wayplatform.connect.tachograph.dd.v1.VehicleRegistrationIdentificationR\x1dvehicleRegistrationWithNation\x12z\n" +
	" vehicle_registration_number_only\x18\x0e \x01(\v21.wayplatform.connect.tachograph.dd.v1.StringValueR\x1dvehicleRegistrationNumberOnly\x12%\n" +
	"\x0esignature_gen1\x18\x0f \x01(\fR\rsignatureGen1\x12%\n" +
	"\x0esignature_gen2\x18\x10 \x01(\fR\rsignatureGen2\x1a\xcf\x02\n" +
	"\x10DownloadActivity\x12E\n" +
	"\x10downloading_time\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x0fdownloadingTime\x12\x87\x01\n" +
	"\x1ffull_card_number_and_generation\x18\x02 \x01(\v2A.wayplatform.connect.tachograph.dd.v1.FullCardNumberAndGenerationR\x1bfullCardNumberAndGeneration\x12j\n" +
	"\x18company_or_workshop_name\x18\x03 \x01(\v21.wayplatform.connect.tachograph.dd.v1.StringValueR\x15companyOrWorkshopName\x1a\xcd\x03\n" +
	"\vCompanyLock\x12<\n" +
	"\flock_in_time\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"lockInTime\x12>\n" +
	"\rlock_out_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\vlockOutTime\x12T\n" +
	"\fcompany_name\x18\x03 \x01(\v21.wayplatform.connect.tachograph.dd.v1.StringValueR\vcompanyName\x12Z\n" +
	"\x0fcompany_address\x18\x04 \x01(\v21.wayplatform.connect.tachograph.dd.v1.StringValueR\x0ecompanyAddress\x12\x8d\x01\n" +
	"\"company_card_number_and_generation\x18\x05 \x01(\v2A.wayplatform.connect.tachograph.dd.v1.FullCardNumberAndGenerationR\x1ecompanyCardNumberAndGeneration\x1a\xe4\x03\n" +
	"\x0fControlActivity\x12T\n" +
	"\fcontrol_type\x18\x01 \x01(\v21.wayplatform.connect.tachograph.dd.v1.ControlTypeR\vcontrolType\x12=\n" +
	"\fcontrol_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\vcontrolTime\x12\x8d\x01\n" +
	"\"control_card_number_and_generation\x18\x03 \x01(\v2A.wayplatform.connect.tachograph.dd.v1.FullCardNumberAndGenerationR\x1econtrolCardNumberAndGeneration\x12W\n" +
	"\x1adownload_period_begin_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x17downloadPeriodBeginTime\x12S\n" +
	"\x18download_period_end_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x15downloadPeriodEndTimeB\xcc\x02\n" +
	"(com.wayplatform.connect.tachograph.vu.v1B\rOverviewProtoP\x01Z\\github.com/way-platform/tachograph-go/proto/gen/go/wayplatform/connect/tachograph/vu/v1;vuv1\xa2\x02\x04WCTV\xaa\x02$Wayplatform.Connect.Tachograph.Vu.V1\xca\x02$Wayplatform\\Connect\\Tachograph\\Vu\\V1\xe2\x020Wayplatform\\Connect\\Tachograph\\Vu\\V1\\GPBMetadata\xea\x02(Wayplatform::Connect::Tachograph::Vu::V1b\beditionsp\xe8\a"

var file_wayplatform_connect_tachograph_vu_v1_overview_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_wayplatform_connect_tachograph_vu_v1_overview_proto_goTypes = []any{
	(*Overview)(nil),                             // 0: wayplatform.connect.tachograph.vu.v1.Overview
	(*Overview_DownloadActivity)(nil),            // 1: wayplatform.connect.tachograph.vu.v1.Overview.DownloadActivity
	(*Overview_CompanyLock)(nil),                 // 2: wayplatform.connect.tachograph.vu.v1.Overview.CompanyLock
	(*Overview_ControlActivity)(nil),             // 3: wayplatform.connect.tachograph.vu.v1.Overview.ControlActivity
	(v1.Generation)(0),                           // 4: wayplatform.connect.tachograph.dd.v1.Generation
	(v1.Version)(0),                              // 5: wayplatform.connect.tachograph.dd.v1.Version
	(*v1.StringValue)(nil),                       // 6: wayplatform.connect.tachograph.dd.v1.StringValue
	(*timestamppb.Timestamp)(nil),                // 7: google.protobuf.Timestamp
	(*v1.DownloadablePeriod)(nil),                // 8: wayplatform.connect.tachograph.dd.v1.DownloadablePeriod
	(v1.SlotCardType)(0),                         // 9: wayplatform.connect.tachograph.dd.v1.SlotCardType
	(*v1.VehicleRegistrationIdentification)(nil), // 10: wayplatform.connect.tachograph.dd.v1.VehicleRegistrationIdentification
	(*v1.FullCardNumberAndGeneration)(nil),       // 11: wayplatform.connect.tachograph.dd.v1.FullCardNumberAndGeneration
	(*v1.ControlType)(nil),                       // 12: wayplatform.connect.tachograph.dd.v1.ControlType
}
var file_wayplatform_connect_tachograph_vu_v1_overview_proto_depIdxs = []int32{
	4,  // 0: wayplatform.connect.tachograph.vu.v1.Overview.generation:type_name -> wayplatform.connect.tachograph.dd.v1.Generation
	5,  // 1: wayplatform.connect.tachograph.vu.v1.Overview.version:type_name -> wayplatform.connect.tachograph.dd.v1.Version
	6,  // 2: wayplatform.connect.tachograph.vu.v1.Overview.vehicle_identification_number:type_name -> wayplatform.connect.tachograph.dd.v1.StringValue
	7,  // 3: wayplatform.connect.tachograph.vu.v1.Overview.current_date_time:type_name -> google.protobuf.Timestamp
	8,  // 4: wayplatform.connect.tachograph.vu.v1.Overview.downloadable_period:type_name -> wayplatform.connect.tachograph.dd.v1.DownloadablePeriod
	9,  // 5: wayplatform.connect.tachograph.vu.v1.Overview.driver_slot_card:type_name -> wayplatform.connect.tachograph.dd.v1.SlotCardType
	9,  // 6: wayplatform.connect.tachograph.vu.v1.Overview.co_driver_slot_card:type_name -> wayplatform.connect.tachograph.dd.v1.SlotCardType
	1,  // 7: wayplatform.connect.tachograph.vu.v1.Overview.download_activities:type_name -> wayplatform.connect.tachograph.vu.v1.Overview.DownloadActivity
	2,  // 8: wayplatform.connect.tachograph.vu.v1.Overview.company_locks:type_name -> wayplatform.connect.tachograph.vu.v1.Overview.CompanyLock
	3,  // 9: wayplatform.connect.tachograph.vu.v1.Overview.control_activities:type_name -> wayplatform.connect.tachograph.vu.v1.Overview.ControlActivity
	10, // 10: wayplatform.connect.tachograph.vu.v1.Overview.vehicle_registration_with_nation:type_name -> wayplatform.connect.tachograph.dd.v1.VehicleRegistrationIdentification
	6,  // 11: wayplatform.connect.tachograph.vu.v1.Overview.vehicle_registration_number_only:type_name -> wayplatform.connect.tachograph.dd.v1.StringValue
	7,  // 12: wayplatform.connect.tachograph.vu.v1.Overview.DownloadActivity.downloading_time:type_name -> google.protobuf.Timestamp
	11, // 13: wayplatform.connect.tachograph.vu.v1.Overview.DownloadActivity.full_card_number_and_generation:type_name -> wayplatform.connect.tachograph.dd.v1.FullCardNumberAndGeneration
	6,  // 14: wayplatform.connect.tachograph.vu.v1.Overview.DownloadActivity.company_or_workshop_name:type_name -> wayplatform.connect.tachograph.dd.v1.StringValue
	7,  // 15: wayplatform.connect.tachograph.vu.v1.Overview.CompanyLock.lock_in_time:type_name -> google.protobuf.Timestamp
	7,  // 16: wayplatform.connect.tachograph.vu.v1.Overview.CompanyLock.lock_out_time:type_name -> google.protobuf.Timestamp
	6,  // 17: wayplatform.connect.tachograph.vu.v1.Overview.CompanyLock.company_name:type_name -> wayplatform.connect.tachograph.dd.v1.StringValue
	6,  // 18: wayplatform.connect.tachograph.vu.v1.Overview.CompanyLock.company_address:type_name -> wayplatform.connect.tachograph.dd.v1.StringValue
	11, // 19: wayplatform.connect.tachograph.vu.v1.Overview.CompanyLock.company_card_number_and_generation:type_name -> wayplatform.connect.tachograph.dd.v1.FullCardNumberAndGeneration
	12, // 20: wayplatform.connect.tachograph.vu.v1.Overview.ControlActivity.control_type:type_name -> wayplatform.connect.tachograph.dd.v1.ControlType
	7,  // 21: wayplatform.connect.tachograph.vu.v1.Overview.ControlActivity.control_time:type_name -> google.protobuf.Timestamp
	11, // 22: wayplatform.connect.tachograph.vu.v1.Overview.ControlActivity.control_card_number_and_generation:type_name -> wayplatform.connect.tachograph.dd.v1.FullCardNumberAndGeneration
	7,  // 23: wayplatform.connect.tachograph.vu.v1.Overview.ControlActivity.download_period_begin_time:type_name -> google.protobuf.Timestamp
	7,  // 24: wayplatform.connect.tachograph.vu.v1.Overview.ControlActivity.download_period_end_time:type_name -> google.protobuf.Timestamp
	25, // [25:25] is the sub-list for method output_type
	25, // [25:25] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_wayplatform_connect_tachograph_vu_v1_overview_proto_init() }
func file_wayplatform_connect_tachograph_vu_v1_overview_proto_init() {
	if File_wayplatform_connect_tachograph_vu_v1_overview_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wayplatform_connect_tachograph_vu_v1_overview_proto_rawDesc), len(file_wayplatform_connect_tachograph_vu_v1_overview_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wayplatform_connect_tachograph_vu_v1_overview_proto_goTypes,
		DependencyIndexes: file_wayplatform_connect_tachograph_vu_v1_overview_proto_depIdxs,
		MessageInfos:      file_wayplatform_connect_tachograph_vu_v1_overview_proto_msgTypes,
	}.Build()
	File_wayplatform_connect_tachograph_vu_v1_overview_proto = out.File
	file_wayplatform_connect_tachograph_vu_v1_overview_proto_goTypes = nil
	file_wayplatform_connect_tachograph_vu_v1_overview_proto_depIdxs = nil
}
