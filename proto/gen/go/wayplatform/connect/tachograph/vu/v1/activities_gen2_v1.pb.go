// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wayplatform/connect/tachograph/vu/v1/activities_gen2_v1.proto

package vuv1

import (
	v1 "github.com/way-platform/tachograph-go/proto/gen/go/wayplatform/connect/tachograph/dd/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Activities data for Generation 2, Version 1 VU downloads.
//
// See Appendix 7, Section 2.2.6.3 (TREP 22 Hex).
//
// Gen2 V1 uses RecordArray structures and includes GNSS accumulated driving records.
//
// ASN.1 Definition:
//
//	VuActivitiesSecondGen ::= SEQUENCE {
//	    timeReal TimeReal,
//	    odometerValueMidnight OdometerValueMidnight,
//	    vuCardIWRecordArray VuCardIWRecordArray,
//	    vuActivityDailyRecordArray VuActivityDailyRecordArray,
//	    vuPlaceDailyWorkPeriodRecordArray VuPlaceDailyWorkPeriodRecordArray,
//	    vuGNSSADRecordArray VuGNSSADRecordArray,
//	    vuSpecificConditionRecordArray VuSpecificConditionRecordArray,
//	    signatureRecordArray SignatureRecordArray
//	}
type ActivitiesGen2V1 struct {
	state                             protoimpl.MessageState                            `protogen:"opaque.v1"`
	xxx_hidden_DateOfDay              *timestamppb.Timestamp                            `protobuf:"bytes,1,opt,name=date_of_day,json=dateOfDay"`
	xxx_hidden_OdometerMidnightKm     int32                                             `protobuf:"varint,2,opt,name=odometer_midnight_km,json=odometerMidnightKm"`
	xxx_hidden_CardIwData             *[]*ActivitiesGen2V1_CardIWRecord                 `protobuf:"bytes,3,rep,name=card_iw_data,json=cardIwData"`
	xxx_hidden_ActivityChanges        *[]*v1.ActivityChangeInfo                         `protobuf:"bytes,4,rep,name=activity_changes,json=activityChanges"`
	xxx_hidden_Places                 *[]*ActivitiesGen2V1_PlaceRecord                  `protobuf:"bytes,5,rep,name=places"`
	xxx_hidden_GnssAccumulatedDriving *[]*ActivitiesGen2V1_GnssAccumulatedDrivingRecord `protobuf:"bytes,6,rep,name=gnss_accumulated_driving,json=gnssAccumulatedDriving"`
	xxx_hidden_SpecificConditions     *[]*v1.SpecificConditionRecord                    `protobuf:"bytes,7,rep,name=specific_conditions,json=specificConditions"`
	xxx_hidden_Signature              []byte                                            `protobuf:"bytes,8,opt,name=signature"`
	xxx_hidden_RawData                []byte                                            `protobuf:"bytes,9,opt,name=raw_data,json=rawData"`
	XXX_raceDetectHookData            protoimpl.RaceDetectHookData
	XXX_presence                      [1]uint32
	unknownFields                     protoimpl.UnknownFields
	sizeCache                         protoimpl.SizeCache
}

func (x *ActivitiesGen2V1) Reset() {
	*x = ActivitiesGen2V1{}
	mi := &file_wayplatform_connect_tachograph_vu_v1_activities_gen2_v1_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivitiesGen2V1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivitiesGen2V1) ProtoMessage() {}

func (x *ActivitiesGen2V1) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_vu_v1_activities_gen2_v1_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ActivitiesGen2V1) GetDateOfDay() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_DateOfDay
	}
	return nil
}

func (x *ActivitiesGen2V1) GetOdometerMidnightKm() int32 {
	if x != nil {
		return x.xxx_hidden_OdometerMidnightKm
	}
	return 0
}

func (x *ActivitiesGen2V1) GetCardIwData() []*ActivitiesGen2V1_CardIWRecord {
	if x != nil {
		if x.xxx_hidden_CardIwData != nil {
			return *x.xxx_hidden_CardIwData
		}
	}
	return nil
}

func (x *ActivitiesGen2V1) GetActivityChanges() []*v1.ActivityChangeInfo {
	if x != nil {
		if x.xxx_hidden_ActivityChanges != nil {
			return *x.xxx_hidden_ActivityChanges
		}
	}
	return nil
}

func (x *ActivitiesGen2V1) GetPlaces() []*ActivitiesGen2V1_PlaceRecord {
	if x != nil {
		if x.xxx_hidden_Places != nil {
			return *x.xxx_hidden_Places
		}
	}
	return nil
}

func (x *ActivitiesGen2V1) GetGnssAccumulatedDriving() []*ActivitiesGen2V1_GnssAccumulatedDrivingRecord {
	if x != nil {
		if x.xxx_hidden_GnssAccumulatedDriving != nil {
			return *x.xxx_hidden_GnssAccumulatedDriving
		}
	}
	return nil
}

func (x *ActivitiesGen2V1) GetSpecificConditions() []*v1.SpecificConditionRecord {
	if x != nil {
		if x.xxx_hidden_SpecificConditions != nil {
			return *x.xxx_hidden_SpecificConditions
		}
	}
	return nil
}

func (x *ActivitiesGen2V1) GetSignature() []byte {
	if x != nil {
		return x.xxx_hidden_Signature
	}
	return nil
}

func (x *ActivitiesGen2V1) GetRawData() []byte {
	if x != nil {
		return x.xxx_hidden_RawData
	}
	return nil
}

func (x *ActivitiesGen2V1) SetDateOfDay(v *timestamppb.Timestamp) {
	x.xxx_hidden_DateOfDay = v
}

func (x *ActivitiesGen2V1) SetOdometerMidnightKm(v int32) {
	x.xxx_hidden_OdometerMidnightKm = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 9)
}

func (x *ActivitiesGen2V1) SetCardIwData(v []*ActivitiesGen2V1_CardIWRecord) {
	x.xxx_hidden_CardIwData = &v
}

func (x *ActivitiesGen2V1) SetActivityChanges(v []*v1.ActivityChangeInfo) {
	x.xxx_hidden_ActivityChanges = &v
}

func (x *ActivitiesGen2V1) SetPlaces(v []*ActivitiesGen2V1_PlaceRecord) {
	x.xxx_hidden_Places = &v
}

func (x *ActivitiesGen2V1) SetGnssAccumulatedDriving(v []*ActivitiesGen2V1_GnssAccumulatedDrivingRecord) {
	x.xxx_hidden_GnssAccumulatedDriving = &v
}

func (x *ActivitiesGen2V1) SetSpecificConditions(v []*v1.SpecificConditionRecord) {
	x.xxx_hidden_SpecificConditions = &v
}

func (x *ActivitiesGen2V1) SetSignature(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Signature = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 9)
}

func (x *ActivitiesGen2V1) SetRawData(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_RawData = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 9)
}

func (x *ActivitiesGen2V1) HasDateOfDay() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DateOfDay != nil
}

func (x *ActivitiesGen2V1) HasOdometerMidnightKm() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ActivitiesGen2V1) HasSignature() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *ActivitiesGen2V1) HasRawData() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *ActivitiesGen2V1) ClearDateOfDay() {
	x.xxx_hidden_DateOfDay = nil
}

func (x *ActivitiesGen2V1) ClearOdometerMidnightKm() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_OdometerMidnightKm = 0
}

func (x *ActivitiesGen2V1) ClearSignature() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_Signature = nil
}

func (x *ActivitiesGen2V1) ClearRawData() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_RawData = nil
}

type ActivitiesGen2V1_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Date of the downloaded day.
	//
	// See Data Dictionary, Section 2.162, `TimeReal`.
	DateOfDay *timestamppb.Timestamp
	// Odometer value at midnight in kilometers.
	//
	// See Data Dictionary, Section 2.114, `OdometerValueMidnight`.
	OdometerMidnightKm *int32
	// Card insertion and withdrawal data.
	//
	// See Data Dictionary, Section 2.178, `VuCardIWRecordArray`.
	CardIwData []*ActivitiesGen2V1_CardIWRecord
	// Driver activity changes.
	//
	// See Data Dictionary, Section 2.171, `VuActivityDailyRecordArray`.
	ActivityChanges []*v1.ActivityChangeInfo
	// Daily work period place entries.
	//
	// See Data Dictionary, Section 2.220, `VuPlaceDailyWorkPeriodRecordArray`.
	Places []*ActivitiesGen2V1_PlaceRecord
	// GNSS positions recorded at 3-hour accumulated driving time intervals.
	//
	// See Data Dictionary, Section 2.204, `VuGNSSADRecordArray`.
	GnssAccumulatedDriving []*ActivitiesGen2V1_GnssAccumulatedDrivingRecord
	// Specific conditions data.
	//
	// See Data Dictionary, Section 2.228, `VuSpecificConditionRecordArray`.
	SpecificConditions []*v1.SpecificConditionRecord
	// Signature for Gen2 data (ECC, variable length in SignatureRecordArray).
	//
	// See Data Dictionary, Section 2.149, `Signature`.
	Signature []byte
	// The raw, unparsed binary data of the complete Activities transfer value.
	// This field is preserved for data fidelity and lossless round-trips.
	// It includes all data structures and the embedded signature.
	RawData []byte
}

func (b0 ActivitiesGen2V1_builder) Build() *ActivitiesGen2V1 {
	m0 := &ActivitiesGen2V1{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_DateOfDay = b.DateOfDay
	if b.OdometerMidnightKm != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 9)
		x.xxx_hidden_OdometerMidnightKm = *b.OdometerMidnightKm
	}
	x.xxx_hidden_CardIwData = &b.CardIwData
	x.xxx_hidden_ActivityChanges = &b.ActivityChanges
	x.xxx_hidden_Places = &b.Places
	x.xxx_hidden_GnssAccumulatedDriving = &b.GnssAccumulatedDriving
	x.xxx_hidden_SpecificConditions = &b.SpecificConditions
	if b.Signature != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 9)
		x.xxx_hidden_Signature = b.Signature
	}
	if b.RawData != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 9)
		x.xxx_hidden_RawData = b.RawData
	}
	return m0
}

// Represents a card insertion and withdrawal record.
//
// Binary Layout: 132 bytes total (Gen2)
//
// See Data Dictionary, Section 2.177, `VuCardIWRecord`.
//
// ASN.1 Definition:
//
//	VuCardIWRecord ::= SEQUENCE {
//	    cardHolderName HolderName,
//	    fullCardNumberAndGeneration FullCardNumberAndGeneration,
//	    cardExpiryDate Datef,
//	    cardInsertionTime TimeReal,
//	    vehicleOdometerValueAtInsertion OdometerShort,
//	    cardSlotNumber CardSlotNumber,
//	    cardWithdrawalTime TimeReal,
//	    vehicleOdometerValueAtWithdrawal OdometerShort,
//	    previousVehicleInfo PreviousVehicleInfo,
//	    manualInputFlag ManualInputFlag
//	}
type ActivitiesGen2V1_CardIWRecord struct {
	state                                  protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_CardHolderName              *v1.HolderName                  `protobuf:"bytes,1,opt,name=card_holder_name,json=cardHolderName"`
	xxx_hidden_FullCardNumberAndGeneration *v1.FullCardNumberAndGeneration `protobuf:"bytes,2,opt,name=full_card_number_and_generation,json=fullCardNumberAndGeneration"`
	xxx_hidden_CardExpiryDate              *v1.Date                        `protobuf:"bytes,3,opt,name=card_expiry_date,json=cardExpiryDate"`
	xxx_hidden_CardInsertionTime           *timestamppb.Timestamp          `protobuf:"bytes,4,opt,name=card_insertion_time,json=cardInsertionTime"`
	xxx_hidden_OdometerAtInsertionKm       int32                           `protobuf:"varint,5,opt,name=odometer_at_insertion_km,json=odometerAtInsertionKm"`
	xxx_hidden_CardSlotNumber              v1.CardSlotNumber               `protobuf:"varint,6,opt,name=card_slot_number,json=cardSlotNumber,enum=wayplatform.connect.tachograph.dd.v1.CardSlotNumber"`
	xxx_hidden_CardWithdrawalTime          *timestamppb.Timestamp          `protobuf:"bytes,7,opt,name=card_withdrawal_time,json=cardWithdrawalTime"`
	xxx_hidden_OdometerAtWithdrawalKm      int32                           `protobuf:"varint,8,opt,name=odometer_at_withdrawal_km,json=odometerAtWithdrawalKm"`
	xxx_hidden_PreviousVehicleInfo         *v1.PreviousVehicleInfoG2       `protobuf:"bytes,9,opt,name=previous_vehicle_info,json=previousVehicleInfo"`
	xxx_hidden_ManualInputFlag             bool                            `protobuf:"varint,10,opt,name=manual_input_flag,json=manualInputFlag"`
	XXX_raceDetectHookData                 protoimpl.RaceDetectHookData
	XXX_presence                           [1]uint32
	unknownFields                          protoimpl.UnknownFields
	sizeCache                              protoimpl.SizeCache
}

func (x *ActivitiesGen2V1_CardIWRecord) Reset() {
	*x = ActivitiesGen2V1_CardIWRecord{}
	mi := &file_wayplatform_connect_tachograph_vu_v1_activities_gen2_v1_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivitiesGen2V1_CardIWRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivitiesGen2V1_CardIWRecord) ProtoMessage() {}

func (x *ActivitiesGen2V1_CardIWRecord) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_vu_v1_activities_gen2_v1_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ActivitiesGen2V1_CardIWRecord) GetCardHolderName() *v1.HolderName {
	if x != nil {
		return x.xxx_hidden_CardHolderName
	}
	return nil
}

func (x *ActivitiesGen2V1_CardIWRecord) GetFullCardNumberAndGeneration() *v1.FullCardNumberAndGeneration {
	if x != nil {
		return x.xxx_hidden_FullCardNumberAndGeneration
	}
	return nil
}

func (x *ActivitiesGen2V1_CardIWRecord) GetCardExpiryDate() *v1.Date {
	if x != nil {
		return x.xxx_hidden_CardExpiryDate
	}
	return nil
}

func (x *ActivitiesGen2V1_CardIWRecord) GetCardInsertionTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_CardInsertionTime
	}
	return nil
}

func (x *ActivitiesGen2V1_CardIWRecord) GetOdometerAtInsertionKm() int32 {
	if x != nil {
		return x.xxx_hidden_OdometerAtInsertionKm
	}
	return 0
}

func (x *ActivitiesGen2V1_CardIWRecord) GetCardSlotNumber() v1.CardSlotNumber {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 5) {
			return x.xxx_hidden_CardSlotNumber
		}
	}
	return v1.CardSlotNumber(0)
}

func (x *ActivitiesGen2V1_CardIWRecord) GetCardWithdrawalTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_CardWithdrawalTime
	}
	return nil
}

func (x *ActivitiesGen2V1_CardIWRecord) GetOdometerAtWithdrawalKm() int32 {
	if x != nil {
		return x.xxx_hidden_OdometerAtWithdrawalKm
	}
	return 0
}

func (x *ActivitiesGen2V1_CardIWRecord) GetPreviousVehicleInfo() *v1.PreviousVehicleInfoG2 {
	if x != nil {
		return x.xxx_hidden_PreviousVehicleInfo
	}
	return nil
}

func (x *ActivitiesGen2V1_CardIWRecord) GetManualInputFlag() bool {
	if x != nil {
		return x.xxx_hidden_ManualInputFlag
	}
	return false
}

func (x *ActivitiesGen2V1_CardIWRecord) SetCardHolderName(v *v1.HolderName) {
	x.xxx_hidden_CardHolderName = v
}

func (x *ActivitiesGen2V1_CardIWRecord) SetFullCardNumberAndGeneration(v *v1.FullCardNumberAndGeneration) {
	x.xxx_hidden_FullCardNumberAndGeneration = v
}

func (x *ActivitiesGen2V1_CardIWRecord) SetCardExpiryDate(v *v1.Date) {
	x.xxx_hidden_CardExpiryDate = v
}

func (x *ActivitiesGen2V1_CardIWRecord) SetCardInsertionTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_CardInsertionTime = v
}

func (x *ActivitiesGen2V1_CardIWRecord) SetOdometerAtInsertionKm(v int32) {
	x.xxx_hidden_OdometerAtInsertionKm = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 10)
}

func (x *ActivitiesGen2V1_CardIWRecord) SetCardSlotNumber(v v1.CardSlotNumber) {
	x.xxx_hidden_CardSlotNumber = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 10)
}

func (x *ActivitiesGen2V1_CardIWRecord) SetCardWithdrawalTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_CardWithdrawalTime = v
}

func (x *ActivitiesGen2V1_CardIWRecord) SetOdometerAtWithdrawalKm(v int32) {
	x.xxx_hidden_OdometerAtWithdrawalKm = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 10)
}

func (x *ActivitiesGen2V1_CardIWRecord) SetPreviousVehicleInfo(v *v1.PreviousVehicleInfoG2) {
	x.xxx_hidden_PreviousVehicleInfo = v
}

func (x *ActivitiesGen2V1_CardIWRecord) SetManualInputFlag(v bool) {
	x.xxx_hidden_ManualInputFlag = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 10)
}

func (x *ActivitiesGen2V1_CardIWRecord) HasCardHolderName() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CardHolderName != nil
}

func (x *ActivitiesGen2V1_CardIWRecord) HasFullCardNumberAndGeneration() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_FullCardNumberAndGeneration != nil
}

func (x *ActivitiesGen2V1_CardIWRecord) HasCardExpiryDate() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CardExpiryDate != nil
}

func (x *ActivitiesGen2V1_CardIWRecord) HasCardInsertionTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CardInsertionTime != nil
}

func (x *ActivitiesGen2V1_CardIWRecord) HasOdometerAtInsertionKm() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *ActivitiesGen2V1_CardIWRecord) HasCardSlotNumber() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *ActivitiesGen2V1_CardIWRecord) HasCardWithdrawalTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CardWithdrawalTime != nil
}

func (x *ActivitiesGen2V1_CardIWRecord) HasOdometerAtWithdrawalKm() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *ActivitiesGen2V1_CardIWRecord) HasPreviousVehicleInfo() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_PreviousVehicleInfo != nil
}

func (x *ActivitiesGen2V1_CardIWRecord) HasManualInputFlag() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *ActivitiesGen2V1_CardIWRecord) ClearCardHolderName() {
	x.xxx_hidden_CardHolderName = nil
}

func (x *ActivitiesGen2V1_CardIWRecord) ClearFullCardNumberAndGeneration() {
	x.xxx_hidden_FullCardNumberAndGeneration = nil
}

func (x *ActivitiesGen2V1_CardIWRecord) ClearCardExpiryDate() {
	x.xxx_hidden_CardExpiryDate = nil
}

func (x *ActivitiesGen2V1_CardIWRecord) ClearCardInsertionTime() {
	x.xxx_hidden_CardInsertionTime = nil
}

func (x *ActivitiesGen2V1_CardIWRecord) ClearOdometerAtInsertionKm() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_OdometerAtInsertionKm = 0
}

func (x *ActivitiesGen2V1_CardIWRecord) ClearCardSlotNumber() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_CardSlotNumber = v1.CardSlotNumber_CARD_SLOT_NUMBER_UNSPECIFIED
}

func (x *ActivitiesGen2V1_CardIWRecord) ClearCardWithdrawalTime() {
	x.xxx_hidden_CardWithdrawalTime = nil
}

func (x *ActivitiesGen2V1_CardIWRecord) ClearOdometerAtWithdrawalKm() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_OdometerAtWithdrawalKm = 0
}

func (x *ActivitiesGen2V1_CardIWRecord) ClearPreviousVehicleInfo() {
	x.xxx_hidden_PreviousVehicleInfo = nil
}

func (x *ActivitiesGen2V1_CardIWRecord) ClearManualInputFlag() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_ManualInputFlag = false
}

type ActivitiesGen2V1_CardIWRecord_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The name of the card holder.
	//
	// See Data Dictionary, Section 2.83, `HolderName`.
	CardHolderName *v1.HolderName
	// The full card number and generation of the inserted card.
	//
	// See Data Dictionary, Section 2.74, `FullCardNumberAndGeneration`.
	FullCardNumberAndGeneration *v1.FullCardNumberAndGeneration
	// The expiry date of the card.
	//
	// See Data Dictionary, Section 2.57, `Datef`.
	CardExpiryDate *v1.Date
	// The time the card was inserted.
	//
	// See Data Dictionary, Section 2.162, `TimeReal`.
	CardInsertionTime *timestamppb.Timestamp
	// The odometer value at the time of card insertion in kilometers.
	//
	// See Data Dictionary, Section 2.113, `OdometerShort`.
	OdometerAtInsertionKm *int32
	// The slot the card was inserted into.
	//
	// See Data Dictionary, Section 2.33, `CardSlotNumber`.
	CardSlotNumber *v1.CardSlotNumber
	// The time the card was withdrawn.
	//
	// See Data Dictionary, Section 2.162, `TimeReal`.
	CardWithdrawalTime *timestamppb.Timestamp
	// The odometer value at the time of card withdrawal in kilometers.
	//
	// See Data Dictionary, Section 2.113, `OdometerShort`.
	OdometerAtWithdrawalKm *int32
	// Information about the previous vehicle used.
	//
	// See Data Dictionary, Section 2.118, `PreviousVehicleInfo`.
	PreviousVehicleInfo *v1.PreviousVehicleInfoG2
	// Indicates if manual entries were made.
	//
	// See Data Dictionary, Section 2.93, `ManualInputFlag`.
	ManualInputFlag *bool
}

func (b0 ActivitiesGen2V1_CardIWRecord_builder) Build() *ActivitiesGen2V1_CardIWRecord {
	m0 := &ActivitiesGen2V1_CardIWRecord{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_CardHolderName = b.CardHolderName
	x.xxx_hidden_FullCardNumberAndGeneration = b.FullCardNumberAndGeneration
	x.xxx_hidden_CardExpiryDate = b.CardExpiryDate
	x.xxx_hidden_CardInsertionTime = b.CardInsertionTime
	if b.OdometerAtInsertionKm != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 10)
		x.xxx_hidden_OdometerAtInsertionKm = *b.OdometerAtInsertionKm
	}
	if b.CardSlotNumber != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 10)
		x.xxx_hidden_CardSlotNumber = *b.CardSlotNumber
	}
	x.xxx_hidden_CardWithdrawalTime = b.CardWithdrawalTime
	if b.OdometerAtWithdrawalKm != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 10)
		x.xxx_hidden_OdometerAtWithdrawalKm = *b.OdometerAtWithdrawalKm
	}
	x.xxx_hidden_PreviousVehicleInfo = b.PreviousVehicleInfo
	if b.ManualInputFlag != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 10)
		x.xxx_hidden_ManualInputFlag = *b.ManualInputFlag
	}
	return m0
}

// Represents a place record for the beginning or end of a daily work period.
//
// Binary Layout: 21 bytes (Gen2)
//
// See Data Dictionary, Section 2.117, `PlaceRecord`.
//
// ASN.1 Definition:
//
//	PlaceRecord ::= SEQUENCE {
//	    entryTime TimeReal,
//	    entryTypeDailyWorkPeriod EntryTypeDailyWorkPeriod,
//	    dailyWorkPeriodCountry NationNumeric,
//	    dailyWorkPeriodRegion RegionNumeric,
//	    vehicleOdometerValue OdometerShort,
//	    entryGNSSPlaceRecord GNSSPlaceRecord
//	}
type ActivitiesGen2V1_PlaceRecord struct {
	state                      protoimpl.MessageState            `protogen:"opaque.v1"`
	xxx_hidden_EntryTime       *timestamppb.Timestamp            `protobuf:"bytes,1,opt,name=entry_time,json=entryTime"`
	xxx_hidden_EntryType       v1.EntryTypeDailyWorkPeriod       `protobuf:"varint,2,opt,name=entry_type,json=entryType,enum=wayplatform.connect.tachograph.dd.v1.EntryTypeDailyWorkPeriod"`
	xxx_hidden_Country         v1.NationNumeric                  `protobuf:"varint,3,opt,name=country,enum=wayplatform.connect.tachograph.dd.v1.NationNumeric"`
	xxx_hidden_Region          []byte                            `protobuf:"bytes,4,opt,name=region"`
	xxx_hidden_OdometerKm      int32                             `protobuf:"varint,5,opt,name=odometer_km,json=odometerKm"`
	xxx_hidden_GnssPlaceRecord *ActivitiesGen2V1_GnssPlaceRecord `protobuf:"bytes,6,opt,name=gnss_place_record,json=gnssPlaceRecord"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *ActivitiesGen2V1_PlaceRecord) Reset() {
	*x = ActivitiesGen2V1_PlaceRecord{}
	mi := &file_wayplatform_connect_tachograph_vu_v1_activities_gen2_v1_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivitiesGen2V1_PlaceRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivitiesGen2V1_PlaceRecord) ProtoMessage() {}

func (x *ActivitiesGen2V1_PlaceRecord) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_vu_v1_activities_gen2_v1_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ActivitiesGen2V1_PlaceRecord) GetEntryTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_EntryTime
	}
	return nil
}

func (x *ActivitiesGen2V1_PlaceRecord) GetEntryType() v1.EntryTypeDailyWorkPeriod {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_EntryType
		}
	}
	return v1.EntryTypeDailyWorkPeriod(0)
}

func (x *ActivitiesGen2V1_PlaceRecord) GetCountry() v1.NationNumeric {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 2) {
			return x.xxx_hidden_Country
		}
	}
	return v1.NationNumeric(0)
}

func (x *ActivitiesGen2V1_PlaceRecord) GetRegion() []byte {
	if x != nil {
		return x.xxx_hidden_Region
	}
	return nil
}

func (x *ActivitiesGen2V1_PlaceRecord) GetOdometerKm() int32 {
	if x != nil {
		return x.xxx_hidden_OdometerKm
	}
	return 0
}

func (x *ActivitiesGen2V1_PlaceRecord) GetGnssPlaceRecord() *ActivitiesGen2V1_GnssPlaceRecord {
	if x != nil {
		return x.xxx_hidden_GnssPlaceRecord
	}
	return nil
}

func (x *ActivitiesGen2V1_PlaceRecord) SetEntryTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_EntryTime = v
}

func (x *ActivitiesGen2V1_PlaceRecord) SetEntryType(v v1.EntryTypeDailyWorkPeriod) {
	x.xxx_hidden_EntryType = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *ActivitiesGen2V1_PlaceRecord) SetCountry(v v1.NationNumeric) {
	x.xxx_hidden_Country = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *ActivitiesGen2V1_PlaceRecord) SetRegion(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Region = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *ActivitiesGen2V1_PlaceRecord) SetOdometerKm(v int32) {
	x.xxx_hidden_OdometerKm = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *ActivitiesGen2V1_PlaceRecord) SetGnssPlaceRecord(v *ActivitiesGen2V1_GnssPlaceRecord) {
	x.xxx_hidden_GnssPlaceRecord = v
}

func (x *ActivitiesGen2V1_PlaceRecord) HasEntryTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_EntryTime != nil
}

func (x *ActivitiesGen2V1_PlaceRecord) HasEntryType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ActivitiesGen2V1_PlaceRecord) HasCountry() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ActivitiesGen2V1_PlaceRecord) HasRegion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ActivitiesGen2V1_PlaceRecord) HasOdometerKm() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *ActivitiesGen2V1_PlaceRecord) HasGnssPlaceRecord() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_GnssPlaceRecord != nil
}

func (x *ActivitiesGen2V1_PlaceRecord) ClearEntryTime() {
	x.xxx_hidden_EntryTime = nil
}

func (x *ActivitiesGen2V1_PlaceRecord) ClearEntryType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_EntryType = v1.EntryTypeDailyWorkPeriod_ENTRY_TYPE_DAILY_WORK_PERIOD_UNSPECIFIED
}

func (x *ActivitiesGen2V1_PlaceRecord) ClearCountry() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Country = v1.NationNumeric_NATION_NUMERIC_UNSPECIFIED
}

func (x *ActivitiesGen2V1_PlaceRecord) ClearRegion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Region = nil
}

func (x *ActivitiesGen2V1_PlaceRecord) ClearOdometerKm() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_OdometerKm = 0
}

func (x *ActivitiesGen2V1_PlaceRecord) ClearGnssPlaceRecord() {
	x.xxx_hidden_GnssPlaceRecord = nil
}

type ActivitiesGen2V1_PlaceRecord_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Time of the entry.
	//
	// See Data Dictionary, Section 2.162, `TimeReal`.
	EntryTime *timestamppb.Timestamp
	// Type of entry (begin or end).
	//
	// See Data Dictionary, Section 2.66, `EntryTypeDailyWorkPeriod`.
	EntryType *v1.EntryTypeDailyWorkPeriod
	// Country code.
	//
	// See Data Dictionary, Section 2.101, `NationNumeric`.
	Country *v1.NationNumeric
	// Region code.
	//
	// See Data Dictionary, Section 2.122, `RegionNumeric`.
	Region []byte
	// Odometer value at the time of entry in kilometers.
	//
	// See Data Dictionary, Section 2.113, `OdometerShort`.
	OdometerKm *int32
	// GNSS position at the time of entry (Gen2 addition).
	//
	// See Data Dictionary, Section 2.79, `GNSSPlaceRecord`.
	GnssPlaceRecord *ActivitiesGen2V1_GnssPlaceRecord
}

func (b0 ActivitiesGen2V1_PlaceRecord_builder) Build() *ActivitiesGen2V1_PlaceRecord {
	m0 := &ActivitiesGen2V1_PlaceRecord{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_EntryTime = b.EntryTime
	if b.EntryType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_EntryType = *b.EntryType
	}
	if b.Country != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_Country = *b.Country
	}
	if b.Region != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_Region = b.Region
	}
	if b.OdometerKm != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_OdometerKm = *b.OdometerKm
	}
	x.xxx_hidden_GnssPlaceRecord = b.GnssPlaceRecord
	return m0
}

// Represents a GNSS place record (without authentication status).
//
// Binary Layout: 11 bytes
//
// See Data Dictionary, Section 2.79, `GNSSPlaceRecord`.
//
// ASN.1 Definition:
//
//	GNSSPlaceRecord ::= SEQUENCE {
//	    timeStamp TimeReal,
//	    gnssAccuracy GNSSAccuracy,
//	    geoCoordinates GeoCoordinates
//	}
type ActivitiesGen2V1_GnssPlaceRecord struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Timestamp      *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp"`
	xxx_hidden_GnssAccuracy   int32                  `protobuf:"varint,2,opt,name=gnss_accuracy,json=gnssAccuracy"`
	xxx_hidden_GeoCoordinates *v1.GeoCoordinates     `protobuf:"bytes,3,opt,name=geo_coordinates,json=geoCoordinates"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *ActivitiesGen2V1_GnssPlaceRecord) Reset() {
	*x = ActivitiesGen2V1_GnssPlaceRecord{}
	mi := &file_wayplatform_connect_tachograph_vu_v1_activities_gen2_v1_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivitiesGen2V1_GnssPlaceRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivitiesGen2V1_GnssPlaceRecord) ProtoMessage() {}

func (x *ActivitiesGen2V1_GnssPlaceRecord) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_vu_v1_activities_gen2_v1_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ActivitiesGen2V1_GnssPlaceRecord) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_Timestamp
	}
	return nil
}

func (x *ActivitiesGen2V1_GnssPlaceRecord) GetGnssAccuracy() int32 {
	if x != nil {
		return x.xxx_hidden_GnssAccuracy
	}
	return 0
}

func (x *ActivitiesGen2V1_GnssPlaceRecord) GetGeoCoordinates() *v1.GeoCoordinates {
	if x != nil {
		return x.xxx_hidden_GeoCoordinates
	}
	return nil
}

func (x *ActivitiesGen2V1_GnssPlaceRecord) SetTimestamp(v *timestamppb.Timestamp) {
	x.xxx_hidden_Timestamp = v
}

func (x *ActivitiesGen2V1_GnssPlaceRecord) SetGnssAccuracy(v int32) {
	x.xxx_hidden_GnssAccuracy = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *ActivitiesGen2V1_GnssPlaceRecord) SetGeoCoordinates(v *v1.GeoCoordinates) {
	x.xxx_hidden_GeoCoordinates = v
}

func (x *ActivitiesGen2V1_GnssPlaceRecord) HasTimestamp() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Timestamp != nil
}

func (x *ActivitiesGen2V1_GnssPlaceRecord) HasGnssAccuracy() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ActivitiesGen2V1_GnssPlaceRecord) HasGeoCoordinates() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_GeoCoordinates != nil
}

func (x *ActivitiesGen2V1_GnssPlaceRecord) ClearTimestamp() {
	x.xxx_hidden_Timestamp = nil
}

func (x *ActivitiesGen2V1_GnssPlaceRecord) ClearGnssAccuracy() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_GnssAccuracy = 0
}

func (x *ActivitiesGen2V1_GnssPlaceRecord) ClearGeoCoordinates() {
	x.xxx_hidden_GeoCoordinates = nil
}

type ActivitiesGen2V1_GnssPlaceRecord_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Timestamp of the position fix.
	//
	// See Data Dictionary, Section 2.162, `TimeReal`.
	Timestamp *timestamppb.Timestamp
	// Accuracy of the GNSS fix.
	//
	// See Data Dictionary, Section 2.77, `GNSSAccuracy`.
	GnssAccuracy *int32
	// Geographic coordinates of the position.
	//
	// See Data Dictionary, Section 2.76, `GeoCoordinates`.
	GeoCoordinates *v1.GeoCoordinates
}

func (b0 ActivitiesGen2V1_GnssPlaceRecord_builder) Build() *ActivitiesGen2V1_GnssPlaceRecord {
	m0 := &ActivitiesGen2V1_GnssPlaceRecord{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Timestamp = b.Timestamp
	if b.GnssAccuracy != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_GnssAccuracy = *b.GnssAccuracy
	}
	x.xxx_hidden_GeoCoordinates = b.GeoCoordinates
	return m0
}

// Represents a GNSS accumulated driving record.
//
// Binary Layout: 12 bytes
//
// See Data Dictionary, Section 2.203, `VuGNSSADRecord`.
//
// ASN.1 Definition:
//
//	VuGNSSADRecord ::= SEQUENCE {
//	    timeStamp TimeReal,
//	    gnssAccuracy GNSSAccuracy,
//	    geoCoordinates GeoCoordinates,
//	    posAuthentication PositionAuthenticationStatus
//	}
type ActivitiesGen2V1_GnssAccumulatedDrivingRecord struct {
	state                                       protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_Timestamp                        *timestamppb.Timestamp          `protobuf:"bytes,1,opt,name=timestamp"`
	xxx_hidden_GnssAccuracy                     int32                           `protobuf:"varint,2,opt,name=gnss_accuracy,json=gnssAccuracy"`
	xxx_hidden_GeoCoordinates                   *v1.GeoCoordinates              `protobuf:"bytes,3,opt,name=geo_coordinates,json=geoCoordinates"`
	xxx_hidden_AuthenticationStatus             v1.PositionAuthenticationStatus `protobuf:"varint,4,opt,name=authentication_status,json=authenticationStatus,enum=wayplatform.connect.tachograph.dd.v1.PositionAuthenticationStatus"`
	xxx_hidden_UnrecognizedAuthenticationStatus int32                           `protobuf:"varint,5,opt,name=unrecognized_authentication_status,json=unrecognizedAuthenticationStatus"`
	XXX_raceDetectHookData                      protoimpl.RaceDetectHookData
	XXX_presence                                [1]uint32
	unknownFields                               protoimpl.UnknownFields
	sizeCache                                   protoimpl.SizeCache
}

func (x *ActivitiesGen2V1_GnssAccumulatedDrivingRecord) Reset() {
	*x = ActivitiesGen2V1_GnssAccumulatedDrivingRecord{}
	mi := &file_wayplatform_connect_tachograph_vu_v1_activities_gen2_v1_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivitiesGen2V1_GnssAccumulatedDrivingRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivitiesGen2V1_GnssAccumulatedDrivingRecord) ProtoMessage() {}

func (x *ActivitiesGen2V1_GnssAccumulatedDrivingRecord) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_vu_v1_activities_gen2_v1_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ActivitiesGen2V1_GnssAccumulatedDrivingRecord) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_Timestamp
	}
	return nil
}

func (x *ActivitiesGen2V1_GnssAccumulatedDrivingRecord) GetGnssAccuracy() int32 {
	if x != nil {
		return x.xxx_hidden_GnssAccuracy
	}
	return 0
}

func (x *ActivitiesGen2V1_GnssAccumulatedDrivingRecord) GetGeoCoordinates() *v1.GeoCoordinates {
	if x != nil {
		return x.xxx_hidden_GeoCoordinates
	}
	return nil
}

func (x *ActivitiesGen2V1_GnssAccumulatedDrivingRecord) GetAuthenticationStatus() v1.PositionAuthenticationStatus {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 3) {
			return x.xxx_hidden_AuthenticationStatus
		}
	}
	return v1.PositionAuthenticationStatus(0)
}

func (x *ActivitiesGen2V1_GnssAccumulatedDrivingRecord) GetUnrecognizedAuthenticationStatus() int32 {
	if x != nil {
		return x.xxx_hidden_UnrecognizedAuthenticationStatus
	}
	return 0
}

func (x *ActivitiesGen2V1_GnssAccumulatedDrivingRecord) SetTimestamp(v *timestamppb.Timestamp) {
	x.xxx_hidden_Timestamp = v
}

func (x *ActivitiesGen2V1_GnssAccumulatedDrivingRecord) SetGnssAccuracy(v int32) {
	x.xxx_hidden_GnssAccuracy = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *ActivitiesGen2V1_GnssAccumulatedDrivingRecord) SetGeoCoordinates(v *v1.GeoCoordinates) {
	x.xxx_hidden_GeoCoordinates = v
}

func (x *ActivitiesGen2V1_GnssAccumulatedDrivingRecord) SetAuthenticationStatus(v v1.PositionAuthenticationStatus) {
	x.xxx_hidden_AuthenticationStatus = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *ActivitiesGen2V1_GnssAccumulatedDrivingRecord) SetUnrecognizedAuthenticationStatus(v int32) {
	x.xxx_hidden_UnrecognizedAuthenticationStatus = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *ActivitiesGen2V1_GnssAccumulatedDrivingRecord) HasTimestamp() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Timestamp != nil
}

func (x *ActivitiesGen2V1_GnssAccumulatedDrivingRecord) HasGnssAccuracy() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ActivitiesGen2V1_GnssAccumulatedDrivingRecord) HasGeoCoordinates() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_GeoCoordinates != nil
}

func (x *ActivitiesGen2V1_GnssAccumulatedDrivingRecord) HasAuthenticationStatus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ActivitiesGen2V1_GnssAccumulatedDrivingRecord) HasUnrecognizedAuthenticationStatus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *ActivitiesGen2V1_GnssAccumulatedDrivingRecord) ClearTimestamp() {
	x.xxx_hidden_Timestamp = nil
}

func (x *ActivitiesGen2V1_GnssAccumulatedDrivingRecord) ClearGnssAccuracy() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_GnssAccuracy = 0
}

func (x *ActivitiesGen2V1_GnssAccumulatedDrivingRecord) ClearGeoCoordinates() {
	x.xxx_hidden_GeoCoordinates = nil
}

func (x *ActivitiesGen2V1_GnssAccumulatedDrivingRecord) ClearAuthenticationStatus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_AuthenticationStatus = v1.PositionAuthenticationStatus_POSITION_AUTHENTICATION_STATUS_UNSPECIFIED
}

func (x *ActivitiesGen2V1_GnssAccumulatedDrivingRecord) ClearUnrecognizedAuthenticationStatus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_UnrecognizedAuthenticationStatus = 0
}

type ActivitiesGen2V1_GnssAccumulatedDrivingRecord_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Timestamp of the position fix.
	//
	// See Data Dictionary, Section 2.162, `TimeReal`.
	Timestamp *timestamppb.Timestamp
	// Accuracy of the GNSS fix.
	//
	// See Data Dictionary, Section 2.77, `GNSSAccuracy`.
	GnssAccuracy *int32
	// Geographic coordinates of the position.
	//
	// See Data Dictionary, Section 2.76, `GeoCoordinates`.
	GeoCoordinates *v1.GeoCoordinates
	// Authentication status of the GNSS position.
	//
	// See Data Dictionary, Section 2.117a, `PositionAuthenticationStatus`.
	AuthenticationStatus *v1.PositionAuthenticationStatus
	// Preserved raw protocol value when authentication_status is UNRECOGNIZED.
	UnrecognizedAuthenticationStatus *int32
}

func (b0 ActivitiesGen2V1_GnssAccumulatedDrivingRecord_builder) Build() *ActivitiesGen2V1_GnssAccumulatedDrivingRecord {
	m0 := &ActivitiesGen2V1_GnssAccumulatedDrivingRecord{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Timestamp = b.Timestamp
	if b.GnssAccuracy != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_GnssAccuracy = *b.GnssAccuracy
	}
	x.xxx_hidden_GeoCoordinates = b.GeoCoordinates
	if b.AuthenticationStatus != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_AuthenticationStatus = *b.AuthenticationStatus
	}
	if b.UnrecognizedAuthenticationStatus != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_UnrecognizedAuthenticationStatus = *b.UnrecognizedAuthenticationStatus
	}
	return m0
}

var File_wayplatform_connect_tachograph_vu_v1_activities_gen2_v1_proto protoreflect.FileDescriptor

const file_wayplatform_connect_tachograph_vu_v1_activities_gen2_v1_proto_rawDesc = "" +
	"\n" +
	"=wayplatform/connect/tachograph/vu/v1/activities_gen2_v1.proto\x12$wayplatform.connect.tachograph.vu.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a?wayplatform/connect/tachograph/dd/v1/activity_change_info.proto\x1a;wayplatform/connect/tachograph/dd/v1/card_slot_number.proto\x1a/wayplatform/connect/tachograph/dd/v1/date.proto\x1aGwayplatform/connect/tachograph/dd/v1/entry_type_daily_work_period.proto\x1aJwayplatform/connect/tachograph/dd/v1/full_card_number_and_generation.proto\x1a:wayplatform/connect/tachograph/dd/v1/geo_coordinates.proto\x1a6wayplatform/connect/tachograph/dd/v1/holder_name.proto\x1a9wayplatform/connect/tachograph/dd/v1/nation_numeric.proto\x1aIwayplatform/connect/tachograph/dd/v1/position_authentication_status.proto\x1aCwayplatform/connect/tachograph/dd/v1/previous_vehicle_info_g2.proto\x1aDwayplatform/connect/tachograph/dd/v1/specific_condition_record.proto\"\xd7\x14\n" +
	"\x10ActivitiesGen2V1\x12:\n" +
	"\vdate_of_day\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\tdateOfDay\x120\n" +
	"\x14odometer_midnight_km\x18\x02 \x01(\x05R\x12odometerMidnightKm\x12e\n" +
	"\fcard_iw_data\x18\x03 \x03(\v2C.wayplatform.connect.tachograph.vu.v1.ActivitiesGen2V1.CardIWRecordR\n" +
	"cardIwData\x12c\n" +
	"\x10activity_changes\x18\x04 \x03(\v28.wayplatform.connect.tachograph.dd.v1.ActivityChangeInfoR\x0factivityChanges\x12Z\n" +
	"\x06places\x18\x05 \x03(\v2B.wayplatform.connect.tachograph.vu.v1.ActivitiesGen2V1.PlaceRecordR\x06places\x12\x8d\x01\n" +
	"\x18gnss_accumulated_driving\x18\x06 \x03(\v2S.wayplatform.connect.tachograph.vu.v1.ActivitiesGen2V1.GnssAccumulatedDrivingRecordR\x16gnssAccumulatedDriving\x12n\n" +
	"\x13specific_conditions\x18\a \x03(\v2=.wayplatform.connect.tachograph.dd.v1.SpecificConditionRecordR\x12specificConditions\x12\x1c\n" +
	"\tsignature\x18\b \x01(\fR\tsignature\x12\x19\n" +
	"\braw_data\x18\t \x01(\fR\arawData\x1a\xd5\x06\n" +
	"\fCardIWRecord\x12Z\n" +
	"\x10card_holder_name\x18\x01 \x01(\v20.wayplatform.connect.tachograph.dd.v1.HolderNameR\x0ecardHolderName\x12\x87\x01\n" +
	"\x1ffull_card_number_and_generation\x18\x02 \x01(\v2A.wayplatform.connect.tachograph.dd.v1.FullCardNumberAndGenerationR\x1bfullCardNumberAndGeneration\x12T\n" +
	"\x10card_expiry_date\x18\x03 \x01(\v2*.wayplatform.connect.tachograph.dd.v1.DateR\x0ecardExpiryDate\x12J\n" +
	"\x13card_insertion_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x11cardInsertionTime\x127\n" +
	"\x18odometer_at_insertion_km\x18\x05 \x01(\x05R\x15odometerAtInsertionKm\x12^\n" +
	"\x10card_slot_number\x18\x06 \x01(\x0e24.wayplatform.connect.tachograph.dd.v1.CardSlotNumberR\x0ecardSlotNumber\x12L\n" +
	"\x14card_withdrawal_time\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\x12cardWithdrawalTime\x129\n" +
	"\x19odometer_at_withdrawal_km\x18\b \x01(\x05R\x16odometerAtWithdrawalKm\x12o\n" +
	"\x15previous_vehicle_info\x18\t \x01(\v2;.wayplatform.connect.tachograph.dd.v1.PreviousVehicleInfoG2R\x13previousVehicleInfo\x12*\n" +
	"\x11manual_input_flag\x18\n" +
	" \x01(\bR\x0fmanualInputFlag\x1a\xa3\x03\n" +
	"\vPlaceRecord\x129\n" +
	"\n" +
	"entry_time\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\tentryTime\x12]\n" +
	"\n" +
	"entry_type\x18\x02 \x01(\x0e2>.wayplatform.connect.tachograph.dd.v1.EntryTypeDailyWorkPeriodR\tentryType\x12M\n" +
	"\acountry\x18\x03 \x01(\x0e23.wayplatform.connect.tachograph.dd.v1.NationNumericR\acountry\x12\x16\n" +
	"\x06region\x18\x04 \x01(\fR\x06region\x12\x1f\n" +
	"\vodometer_km\x18\x05 \x01(\x05R\n" +
	"odometerKm\x12r\n" +
	"\x11gnss_place_record\x18\x06 \x01(\v2F.wayplatform.connect.tachograph.vu.v1.ActivitiesGen2V1.GnssPlaceRecordR\x0fgnssPlaceRecord\x1a\xcf\x01\n" +
	"\x0fGnssPlaceRecord\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12#\n" +
	"\rgnss_accuracy\x18\x02 \x01(\x05R\fgnssAccuracy\x12]\n" +
	"\x0fgeo_coordinates\x18\x03 \x01(\v24.wayplatform.connect.tachograph.dd.v1.GeoCoordinatesR\x0egeoCoordinates\x1a\xa3\x03\n" +
	"\x1cGnssAccumulatedDrivingRecord\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12#\n" +
	"\rgnss_accuracy\x18\x02 \x01(\x05R\fgnssAccuracy\x12]\n" +
	"\x0fgeo_coordinates\x18\x03 \x01(\v24.wayplatform.connect.tachograph.dd.v1.GeoCoordinatesR\x0egeoCoordinates\x12w\n" +
	"\x15authentication_status\x18\x04 \x01(\x0e2B.wayplatform.connect.tachograph.dd.v1.PositionAuthenticationStatusR\x14authenticationStatus\x12L\n" +
	"\"unrecognized_authentication_status\x18\x05 \x01(\x05R unrecognizedAuthenticationStatusB\xd4\x02\n" +
	"(com.wayplatform.connect.tachograph.vu.v1B\x15ActivitiesGen2V1ProtoP\x01Z\\github.com/way-platform/tachograph-go/proto/gen/go/wayplatform/connect/tachograph/vu/v1;vuv1\xa2\x02\x04WCTV\xaa\x02$Wayplatform.Connect.Tachograph.Vu.V1\xca\x02$Wayplatform\\Connect\\Tachograph\\Vu\\V1\xe2\x020Wayplatform\\Connect\\Tachograph\\Vu\\V1\\GPBMetadata\xea\x02(Wayplatform::Connect::Tachograph::Vu::V1b\beditionsp\xe8\a"

var file_wayplatform_connect_tachograph_vu_v1_activities_gen2_v1_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_wayplatform_connect_tachograph_vu_v1_activities_gen2_v1_proto_goTypes = []any{
	(*ActivitiesGen2V1)(nil),                              // 0: wayplatform.connect.tachograph.vu.v1.ActivitiesGen2V1
	(*ActivitiesGen2V1_CardIWRecord)(nil),                 // 1: wayplatform.connect.tachograph.vu.v1.ActivitiesGen2V1.CardIWRecord
	(*ActivitiesGen2V1_PlaceRecord)(nil),                  // 2: wayplatform.connect.tachograph.vu.v1.ActivitiesGen2V1.PlaceRecord
	(*ActivitiesGen2V1_GnssPlaceRecord)(nil),              // 3: wayplatform.connect.tachograph.vu.v1.ActivitiesGen2V1.GnssPlaceRecord
	(*ActivitiesGen2V1_GnssAccumulatedDrivingRecord)(nil), // 4: wayplatform.connect.tachograph.vu.v1.ActivitiesGen2V1.GnssAccumulatedDrivingRecord
	(*timestamppb.Timestamp)(nil),                         // 5: google.protobuf.Timestamp
	(*v1.ActivityChangeInfo)(nil),                         // 6: wayplatform.connect.tachograph.dd.v1.ActivityChangeInfo
	(*v1.SpecificConditionRecord)(nil),                    // 7: wayplatform.connect.tachograph.dd.v1.SpecificConditionRecord
	(*v1.HolderName)(nil),                                 // 8: wayplatform.connect.tachograph.dd.v1.HolderName
	(*v1.FullCardNumberAndGeneration)(nil),                // 9: wayplatform.connect.tachograph.dd.v1.FullCardNumberAndGeneration
	(*v1.Date)(nil),                                       // 10: wayplatform.connect.tachograph.dd.v1.Date
	(v1.CardSlotNumber)(0),                                // 11: wayplatform.connect.tachograph.dd.v1.CardSlotNumber
	(*v1.PreviousVehicleInfoG2)(nil),                      // 12: wayplatform.connect.tachograph.dd.v1.PreviousVehicleInfoG2
	(v1.EntryTypeDailyWorkPeriod)(0),                      // 13: wayplatform.connect.tachograph.dd.v1.EntryTypeDailyWorkPeriod
	(v1.NationNumeric)(0),                                 // 14: wayplatform.connect.tachograph.dd.v1.NationNumeric
	(*v1.GeoCoordinates)(nil),                             // 15: wayplatform.connect.tachograph.dd.v1.GeoCoordinates
	(v1.PositionAuthenticationStatus)(0),                  // 16: wayplatform.connect.tachograph.dd.v1.PositionAuthenticationStatus
}
var file_wayplatform_connect_tachograph_vu_v1_activities_gen2_v1_proto_depIdxs = []int32{
	5,  // 0: wayplatform.connect.tachograph.vu.v1.ActivitiesGen2V1.date_of_day:type_name -> google.protobuf.Timestamp
	1,  // 1: wayplatform.connect.tachograph.vu.v1.ActivitiesGen2V1.card_iw_data:type_name -> wayplatform.connect.tachograph.vu.v1.ActivitiesGen2V1.CardIWRecord
	6,  // 2: wayplatform.connect.tachograph.vu.v1.ActivitiesGen2V1.activity_changes:type_name -> wayplatform.connect.tachograph.dd.v1.ActivityChangeInfo
	2,  // 3: wayplatform.connect.tachograph.vu.v1.ActivitiesGen2V1.places:type_name -> wayplatform.connect.tachograph.vu.v1.ActivitiesGen2V1.PlaceRecord
	4,  // 4: wayplatform.connect.tachograph.vu.v1.ActivitiesGen2V1.gnss_accumulated_driving:type_name -> wayplatform.connect.tachograph.vu.v1.ActivitiesGen2V1.GnssAccumulatedDrivingRecord
	7,  // 5: wayplatform.connect.tachograph.vu.v1.ActivitiesGen2V1.specific_conditions:type_name -> wayplatform.connect.tachograph.dd.v1.SpecificConditionRecord
	8,  // 6: wayplatform.connect.tachograph.vu.v1.ActivitiesGen2V1.CardIWRecord.card_holder_name:type_name -> wayplatform.connect.tachograph.dd.v1.HolderName
	9,  // 7: wayplatform.connect.tachograph.vu.v1.ActivitiesGen2V1.CardIWRecord.full_card_number_and_generation:type_name -> wayplatform.connect.tachograph.dd.v1.FullCardNumberAndGeneration
	10, // 8: wayplatform.connect.tachograph.vu.v1.ActivitiesGen2V1.CardIWRecord.card_expiry_date:type_name -> wayplatform.connect.tachograph.dd.v1.Date
	5,  // 9: wayplatform.connect.tachograph.vu.v1.ActivitiesGen2V1.CardIWRecord.card_insertion_time:type_name -> google.protobuf.Timestamp
	11, // 10: wayplatform.connect.tachograph.vu.v1.ActivitiesGen2V1.CardIWRecord.card_slot_number:type_name -> wayplatform.connect.tachograph.dd.v1.CardSlotNumber
	5,  // 11: wayplatform.connect.tachograph.vu.v1.ActivitiesGen2V1.CardIWRecord.card_withdrawal_time:type_name -> google.protobuf.Timestamp
	12, // 12: wayplatform.connect.tachograph.vu.v1.ActivitiesGen2V1.CardIWRecord.previous_vehicle_info:type_name -> wayplatform.connect.tachograph.dd.v1.PreviousVehicleInfoG2
	5,  // 13: wayplatform.connect.tachograph.vu.v1.ActivitiesGen2V1.PlaceRecord.entry_time:type_name -> google.protobuf.Timestamp
	13, // 14: wayplatform.connect.tachograph.vu.v1.ActivitiesGen2V1.PlaceRecord.entry_type:type_name -> wayplatform.connect.tachograph.dd.v1.EntryTypeDailyWorkPeriod
	14, // 15: wayplatform.connect.tachograph.vu.v1.ActivitiesGen2V1.PlaceRecord.country:type_name -> wayplatform.connect.tachograph.dd.v1.NationNumeric
	3,  // 16: wayplatform.connect.tachograph.vu.v1.ActivitiesGen2V1.PlaceRecord.gnss_place_record:type_name -> wayplatform.connect.tachograph.vu.v1.ActivitiesGen2V1.GnssPlaceRecord
	5,  // 17: wayplatform.connect.tachograph.vu.v1.ActivitiesGen2V1.GnssPlaceRecord.timestamp:type_name -> google.protobuf.Timestamp
	15, // 18: wayplatform.connect.tachograph.vu.v1.ActivitiesGen2V1.GnssPlaceRecord.geo_coordinates:type_name -> wayplatform.connect.tachograph.dd.v1.GeoCoordinates
	5,  // 19: wayplatform.connect.tachograph.vu.v1.ActivitiesGen2V1.GnssAccumulatedDrivingRecord.timestamp:type_name -> google.protobuf.Timestamp
	15, // 20: wayplatform.connect.tachograph.vu.v1.ActivitiesGen2V1.GnssAccumulatedDrivingRecord.geo_coordinates:type_name -> wayplatform.connect.tachograph.dd.v1.GeoCoordinates
	16, // 21: wayplatform.connect.tachograph.vu.v1.ActivitiesGen2V1.GnssAccumulatedDrivingRecord.authentication_status:type_name -> wayplatform.connect.tachograph.dd.v1.PositionAuthenticationStatus
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_wayplatform_connect_tachograph_vu_v1_activities_gen2_v1_proto_init() }
func file_wayplatform_connect_tachograph_vu_v1_activities_gen2_v1_proto_init() {
	if File_wayplatform_connect_tachograph_vu_v1_activities_gen2_v1_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wayplatform_connect_tachograph_vu_v1_activities_gen2_v1_proto_rawDesc), len(file_wayplatform_connect_tachograph_vu_v1_activities_gen2_v1_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wayplatform_connect_tachograph_vu_v1_activities_gen2_v1_proto_goTypes,
		DependencyIndexes: file_wayplatform_connect_tachograph_vu_v1_activities_gen2_v1_proto_depIdxs,
		MessageInfos:      file_wayplatform_connect_tachograph_vu_v1_activities_gen2_v1_proto_msgTypes,
	}.Build()
	File_wayplatform_connect_tachograph_vu_v1_activities_gen2_v1_proto = out.File
	file_wayplatform_connect_tachograph_vu_v1_activities_gen2_v1_proto_goTypes = nil
	file_wayplatform_connect_tachograph_vu_v1_activities_gen2_v1_proto_depIdxs = nil
}
