// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wayplatform/connect/tachograph/dd/v1/card_vehicle_record_g2.proto

package ddv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents a vehicle usage record from a driver or workshop card (Generation 2 format).
//
// This is the Gen2-specific version with Vehicle Identification Number (VIN).
// For Gen1 format (without VIN), see CardVehicleRecord.
//
// Information, stored in a driver or workshop card, related to a period of use
// of a vehicle during a calendar day.
//
// Binary Layout: 48 bytes (fixed for Gen2)
//   - vehicleOdometerBegin: 3 bytes (OdometerShort)
//   - vehicleOdometerEnd: 3 bytes (OdometerShort)
//   - vehicleFirstUse: 4 bytes (TimeReal)
//   - vehicleLastUse: 4 bytes (TimeReal)
//   - vehicleRegistration: 15 bytes (VehicleRegistrationIdentification)
//   - vuDataBlockCounter: 2 bytes (VuDataBlockCounter as BCD)
//   - vehicleIdentificationNumber: 17 bytes (IA5String)
//
// See Data Dictionary, Section 2.37, `CardVehicleRecord`.
//
// ASN.1 Definition (Gen2):
//
//	CardVehicleRecord ::= SEQUENCE {
//	    vehicleOdometerBegin          OdometerShort,
//	    vehicleOdometerEnd            OdometerShort,
//	    vehicleFirstUse               TimeReal,
//	    vehicleLastUse                TimeReal,
//	    vehicleRegistration           VehicleRegistrationIdentification,
//	    vuDataBlockCounter            VuDataBlockCounter,
//	    vehicleIdentificationNumber   VehicleIdentificationNumber
//	}
type CardVehicleRecordG2 struct {
	state                                  protoimpl.MessageState             `protogen:"opaque.v1"`
	xxx_hidden_VehicleOdometerBeginKm      int32                              `protobuf:"varint,1,opt,name=vehicle_odometer_begin_km,json=vehicleOdometerBeginKm"`
	xxx_hidden_VehicleOdometerEndKm        int32                              `protobuf:"varint,2,opt,name=vehicle_odometer_end_km,json=vehicleOdometerEndKm"`
	xxx_hidden_VehicleFirstUse             *timestamppb.Timestamp             `protobuf:"bytes,3,opt,name=vehicle_first_use,json=vehicleFirstUse"`
	xxx_hidden_VehicleLastUse              *timestamppb.Timestamp             `protobuf:"bytes,4,opt,name=vehicle_last_use,json=vehicleLastUse"`
	xxx_hidden_VehicleRegistration         *VehicleRegistrationIdentification `protobuf:"bytes,5,opt,name=vehicle_registration,json=vehicleRegistration"`
	xxx_hidden_VuDataBlockCounter          *BcdString                         `protobuf:"bytes,6,opt,name=vu_data_block_counter,json=vuDataBlockCounter"`
	xxx_hidden_VehicleIdentificationNumber *string                            `protobuf:"bytes,7,opt,name=vehicle_identification_number,json=vehicleIdentificationNumber"`
	xxx_hidden_RawData                     []byte                             `protobuf:"bytes,8,opt,name=raw_data,json=rawData"`
	XXX_raceDetectHookData                 protoimpl.RaceDetectHookData
	XXX_presence                           [1]uint32
	unknownFields                          protoimpl.UnknownFields
	sizeCache                              protoimpl.SizeCache
}

func (x *CardVehicleRecordG2) Reset() {
	*x = CardVehicleRecordG2{}
	mi := &file_wayplatform_connect_tachograph_dd_v1_card_vehicle_record_g2_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CardVehicleRecordG2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardVehicleRecordG2) ProtoMessage() {}

func (x *CardVehicleRecordG2) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_dd_v1_card_vehicle_record_g2_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CardVehicleRecordG2) GetVehicleOdometerBeginKm() int32 {
	if x != nil {
		return x.xxx_hidden_VehicleOdometerBeginKm
	}
	return 0
}

func (x *CardVehicleRecordG2) GetVehicleOdometerEndKm() int32 {
	if x != nil {
		return x.xxx_hidden_VehicleOdometerEndKm
	}
	return 0
}

func (x *CardVehicleRecordG2) GetVehicleFirstUse() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_VehicleFirstUse
	}
	return nil
}

func (x *CardVehicleRecordG2) GetVehicleLastUse() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_VehicleLastUse
	}
	return nil
}

func (x *CardVehicleRecordG2) GetVehicleRegistration() *VehicleRegistrationIdentification {
	if x != nil {
		return x.xxx_hidden_VehicleRegistration
	}
	return nil
}

func (x *CardVehicleRecordG2) GetVuDataBlockCounter() *BcdString {
	if x != nil {
		return x.xxx_hidden_VuDataBlockCounter
	}
	return nil
}

func (x *CardVehicleRecordG2) GetVehicleIdentificationNumber() string {
	if x != nil {
		if x.xxx_hidden_VehicleIdentificationNumber != nil {
			return *x.xxx_hidden_VehicleIdentificationNumber
		}
		return ""
	}
	return ""
}

func (x *CardVehicleRecordG2) GetRawData() []byte {
	if x != nil {
		return x.xxx_hidden_RawData
	}
	return nil
}

func (x *CardVehicleRecordG2) SetVehicleOdometerBeginKm(v int32) {
	x.xxx_hidden_VehicleOdometerBeginKm = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 8)
}

func (x *CardVehicleRecordG2) SetVehicleOdometerEndKm(v int32) {
	x.xxx_hidden_VehicleOdometerEndKm = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 8)
}

func (x *CardVehicleRecordG2) SetVehicleFirstUse(v *timestamppb.Timestamp) {
	x.xxx_hidden_VehicleFirstUse = v
}

func (x *CardVehicleRecordG2) SetVehicleLastUse(v *timestamppb.Timestamp) {
	x.xxx_hidden_VehicleLastUse = v
}

func (x *CardVehicleRecordG2) SetVehicleRegistration(v *VehicleRegistrationIdentification) {
	x.xxx_hidden_VehicleRegistration = v
}

func (x *CardVehicleRecordG2) SetVuDataBlockCounter(v *BcdString) {
	x.xxx_hidden_VuDataBlockCounter = v
}

func (x *CardVehicleRecordG2) SetVehicleIdentificationNumber(v string) {
	x.xxx_hidden_VehicleIdentificationNumber = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 8)
}

func (x *CardVehicleRecordG2) SetRawData(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_RawData = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 8)
}

func (x *CardVehicleRecordG2) HasVehicleOdometerBeginKm() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CardVehicleRecordG2) HasVehicleOdometerEndKm() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CardVehicleRecordG2) HasVehicleFirstUse() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_VehicleFirstUse != nil
}

func (x *CardVehicleRecordG2) HasVehicleLastUse() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_VehicleLastUse != nil
}

func (x *CardVehicleRecordG2) HasVehicleRegistration() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_VehicleRegistration != nil
}

func (x *CardVehicleRecordG2) HasVuDataBlockCounter() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_VuDataBlockCounter != nil
}

func (x *CardVehicleRecordG2) HasVehicleIdentificationNumber() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *CardVehicleRecordG2) HasRawData() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *CardVehicleRecordG2) ClearVehicleOdometerBeginKm() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_VehicleOdometerBeginKm = 0
}

func (x *CardVehicleRecordG2) ClearVehicleOdometerEndKm() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_VehicleOdometerEndKm = 0
}

func (x *CardVehicleRecordG2) ClearVehicleFirstUse() {
	x.xxx_hidden_VehicleFirstUse = nil
}

func (x *CardVehicleRecordG2) ClearVehicleLastUse() {
	x.xxx_hidden_VehicleLastUse = nil
}

func (x *CardVehicleRecordG2) ClearVehicleRegistration() {
	x.xxx_hidden_VehicleRegistration = nil
}

func (x *CardVehicleRecordG2) ClearVuDataBlockCounter() {
	x.xxx_hidden_VuDataBlockCounter = nil
}

func (x *CardVehicleRecordG2) ClearVehicleIdentificationNumber() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_VehicleIdentificationNumber = nil
}

func (x *CardVehicleRecordG2) ClearRawData() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_RawData = nil
}

type CardVehicleRecordG2_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Vehicle odometer value at the beginning of the period of use (in kilometers).
	//
	// OdometerShort is a 3-byte unsigned integer representing distance in kilometers.
	VehicleOdometerBeginKm *int32
	// Vehicle odometer value at the end of the period of use (in kilometers).
	//
	// OdometerShort is a 3-byte unsigned integer representing distance in kilometers.
	VehicleOdometerEndKm *int32
	// Date and time of the beginning of the period of use of the vehicle.
	//
	// See Data Dictionary, Section 2.162, `TimeReal`.
	VehicleFirstUse *timestamppb.Timestamp
	// Date and time of the end of the period of use of the vehicle.
	//
	// See Data Dictionary, Section 2.162, `TimeReal`.
	VehicleLastUse *timestamppb.Timestamp
	// The VRN and the registering Member State of the vehicle.
	//
	// See Data Dictionary, Section 2.166, `VehicleRegistrationIdentification`.
	VehicleRegistration *VehicleRegistrationIdentification
	// Value of the VuDataBlockCounter at last extraction of the period of use.
	//
	// This is a BCD-encoded counter value.
	//
	// See Data Dictionary, Section 2.213, `VuDataBlockCounter`.
	VuDataBlockCounter *BcdString
	// Vehicle Identification Number referring to the vehicle as a whole.
	//
	// This is a 17-character IA5String field that uniquely identifies the vehicle
	// according to ISO 3779 and ISO 4030 standards (VIN).
	//
	// This field is mandatory in Gen2 and distinguishes CardVehicleRecordG2
	// from the Gen1 CardVehicleRecord.
	//
	// See Data Dictionary, Section 2.165, `VehicleIdentificationNumber`.
	VehicleIdentificationNumber *string
	// Original encoded bytes from the binary format.
	//
	// When present, this is used as a canvas for the "raw data painting" strategy
	// during marshalling to preserve reserved bits and unknown data.
	//
	// Size: 48 bytes (fixed for Gen2).
	RawData []byte
}

func (b0 CardVehicleRecordG2_builder) Build() *CardVehicleRecordG2 {
	m0 := &CardVehicleRecordG2{}
	b, x := &b0, m0
	_, _ = b, x
	if b.VehicleOdometerBeginKm != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 8)
		x.xxx_hidden_VehicleOdometerBeginKm = *b.VehicleOdometerBeginKm
	}
	if b.VehicleOdometerEndKm != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 8)
		x.xxx_hidden_VehicleOdometerEndKm = *b.VehicleOdometerEndKm
	}
	x.xxx_hidden_VehicleFirstUse = b.VehicleFirstUse
	x.xxx_hidden_VehicleLastUse = b.VehicleLastUse
	x.xxx_hidden_VehicleRegistration = b.VehicleRegistration
	x.xxx_hidden_VuDataBlockCounter = b.VuDataBlockCounter
	if b.VehicleIdentificationNumber != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 8)
		x.xxx_hidden_VehicleIdentificationNumber = b.VehicleIdentificationNumber
	}
	if b.RawData != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 8)
		x.xxx_hidden_RawData = b.RawData
	}
	return m0
}

var File_wayplatform_connect_tachograph_dd_v1_card_vehicle_record_g2_proto protoreflect.FileDescriptor

const file_wayplatform_connect_tachograph_dd_v1_card_vehicle_record_g2_proto_rawDesc = "" +
	"\n" +
	"Awayplatform/connect/tachograph/dd/v1/card_vehicle_record_g2.proto\x12$wayplatform.connect.tachograph.dd.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a5wayplatform/connect/tachograph/dd/v1/bcd_string.proto\x1aNwayplatform/connect/tachograph/dd/v1/vehicle_registration_identification.proto\"\xd4\x04\n" +
	"\x13CardVehicleRecordG2\x129\n" +
	"\x19vehicle_odometer_begin_km\x18\x01 \x01(\x05R\x16vehicleOdometerBeginKm\x125\n" +
	"\x17vehicle_odometer_end_km\x18\x02 \x01(\x05R\x14vehicleOdometerEndKm\x12F\n" +
	"\x11vehicle_first_use\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x0fvehicleFirstUse\x12D\n" +
	"\x10vehicle_last_use\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x0evehicleLastUse\x12z\n" +
	"\x14vehicle_registration\x18\x05 \x01(\v2G.wayplatform.connect.tachograph.dd.v1.VehicleRegistrationIdentificationR\x13vehicleRegistration\x12b\n" +
	"\x15vu_data_block_counter\x18\x06 \x01(\v2/.wayplatform.connect.tachograph.dd.v1.BcdStringR\x12vuDataBlockCounter\x12B\n" +
	"\x1dvehicle_identification_number\x18\a \x01(\tR\x1bvehicleIdentificationNumber\x12\x19\n" +
	"\braw_data\x18\b \x01(\fR\arawDataB\xd7\x02\n" +
	"(com.wayplatform.connect.tachograph.dd.v1B\x18CardVehicleRecordG2ProtoP\x01Z\\github.com/way-platform/tachograph-go/proto/gen/go/wayplatform/connect/tachograph/dd/v1;ddv1\xa2\x02\x04WCTD\xaa\x02$Wayplatform.Connect.Tachograph.Dd.V1\xca\x02$Wayplatform\\Connect\\Tachograph\\Dd\\V1\xe2\x020Wayplatform\\Connect\\Tachograph\\Dd\\V1\\GPBMetadata\xea\x02(Wayplatform::Connect::Tachograph::Dd::V1b\beditionsp\xe8\a"

var file_wayplatform_connect_tachograph_dd_v1_card_vehicle_record_g2_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_wayplatform_connect_tachograph_dd_v1_card_vehicle_record_g2_proto_goTypes = []any{
	(*CardVehicleRecordG2)(nil),               // 0: wayplatform.connect.tachograph.dd.v1.CardVehicleRecordG2
	(*timestamppb.Timestamp)(nil),             // 1: google.protobuf.Timestamp
	(*VehicleRegistrationIdentification)(nil), // 2: wayplatform.connect.tachograph.dd.v1.VehicleRegistrationIdentification
	(*BcdString)(nil),                         // 3: wayplatform.connect.tachograph.dd.v1.BcdString
}
var file_wayplatform_connect_tachograph_dd_v1_card_vehicle_record_g2_proto_depIdxs = []int32{
	1, // 0: wayplatform.connect.tachograph.dd.v1.CardVehicleRecordG2.vehicle_first_use:type_name -> google.protobuf.Timestamp
	1, // 1: wayplatform.connect.tachograph.dd.v1.CardVehicleRecordG2.vehicle_last_use:type_name -> google.protobuf.Timestamp
	2, // 2: wayplatform.connect.tachograph.dd.v1.CardVehicleRecordG2.vehicle_registration:type_name -> wayplatform.connect.tachograph.dd.v1.VehicleRegistrationIdentification
	3, // 3: wayplatform.connect.tachograph.dd.v1.CardVehicleRecordG2.vu_data_block_counter:type_name -> wayplatform.connect.tachograph.dd.v1.BcdString
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_wayplatform_connect_tachograph_dd_v1_card_vehicle_record_g2_proto_init() }
func file_wayplatform_connect_tachograph_dd_v1_card_vehicle_record_g2_proto_init() {
	if File_wayplatform_connect_tachograph_dd_v1_card_vehicle_record_g2_proto != nil {
		return
	}
	file_wayplatform_connect_tachograph_dd_v1_bcd_string_proto_init()
	file_wayplatform_connect_tachograph_dd_v1_vehicle_registration_identification_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wayplatform_connect_tachograph_dd_v1_card_vehicle_record_g2_proto_rawDesc), len(file_wayplatform_connect_tachograph_dd_v1_card_vehicle_record_g2_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wayplatform_connect_tachograph_dd_v1_card_vehicle_record_g2_proto_goTypes,
		DependencyIndexes: file_wayplatform_connect_tachograph_dd_v1_card_vehicle_record_g2_proto_depIdxs,
		MessageInfos:      file_wayplatform_connect_tachograph_dd_v1_card_vehicle_record_g2_proto_msgTypes,
	}.Build()
	File_wayplatform_connect_tachograph_dd_v1_card_vehicle_record_g2_proto = out.File
	file_wayplatform_connect_tachograph_dd_v1_card_vehicle_record_g2_proto_goTypes = nil
	file_wayplatform_connect_tachograph_dd_v1_card_vehicle_record_g2_proto_depIdxs = nil
}
