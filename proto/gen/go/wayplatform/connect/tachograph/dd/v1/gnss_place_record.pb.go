// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wayplatform/connect/tachograph/dd/v1/gnss_place_record.proto

package ddv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents a GNSS position recorded at a specific place.
//
// See Data Dictionary, Section 2.80, `GNSSPlaceRecord`.
//
// ASN.1 Definition:
//
//	GNSSPlaceRecord ::= SEQUENCE {
//	    timeStamp TimeReal,
//	    gnssAccuracy GNSSAccuracy,
//	    geoCoordinates GeoCoordinates
//	}
//
// IMPORTANT: Binary Format Variations
//
// The standard DD definition (13 bytes) is:
//   - timeStamp (4 bytes) at offset 0
//   - gnssAccuracy (1 byte) at offset 4
//   - geoCoordinates (8 bytes) at offset 5
//
// However, the card file format for PlaceRecord Gen2 uses a different layout (12 bytes):
//   - geoCoordinates (8 bytes) at offset 0 (DIFFERENT ORDER)
//   - timeStamp (4 bytes) at offset 8 (DIFFERENT ORDER)
//   - NO gnssAccuracy field (OMITTED)
//
// This protobuf message represents the superset and is used for both variants.
// The parsing/marshalling code must handle both binary layouts appropriately.
type GNSSPlaceRecord struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Timestamp      *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp"`
	xxx_hidden_GnssAccuracy   int32                  `protobuf:"varint,2,opt,name=gnss_accuracy,json=gnssAccuracy"`
	xxx_hidden_GeoCoordinates *GeoCoordinates        `protobuf:"bytes,3,opt,name=geo_coordinates,json=geoCoordinates"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *GNSSPlaceRecord) Reset() {
	*x = GNSSPlaceRecord{}
	mi := &file_wayplatform_connect_tachograph_dd_v1_gnss_place_record_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GNSSPlaceRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GNSSPlaceRecord) ProtoMessage() {}

func (x *GNSSPlaceRecord) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_dd_v1_gnss_place_record_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GNSSPlaceRecord) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_Timestamp
	}
	return nil
}

func (x *GNSSPlaceRecord) GetGnssAccuracy() int32 {
	if x != nil {
		return x.xxx_hidden_GnssAccuracy
	}
	return 0
}

func (x *GNSSPlaceRecord) GetGeoCoordinates() *GeoCoordinates {
	if x != nil {
		return x.xxx_hidden_GeoCoordinates
	}
	return nil
}

func (x *GNSSPlaceRecord) SetTimestamp(v *timestamppb.Timestamp) {
	x.xxx_hidden_Timestamp = v
}

func (x *GNSSPlaceRecord) SetGnssAccuracy(v int32) {
	x.xxx_hidden_GnssAccuracy = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *GNSSPlaceRecord) SetGeoCoordinates(v *GeoCoordinates) {
	x.xxx_hidden_GeoCoordinates = v
}

func (x *GNSSPlaceRecord) HasTimestamp() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Timestamp != nil
}

func (x *GNSSPlaceRecord) HasGnssAccuracy() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *GNSSPlaceRecord) HasGeoCoordinates() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_GeoCoordinates != nil
}

func (x *GNSSPlaceRecord) ClearTimestamp() {
	x.xxx_hidden_Timestamp = nil
}

func (x *GNSSPlaceRecord) ClearGnssAccuracy() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_GnssAccuracy = 0
}

func (x *GNSSPlaceRecord) ClearGeoCoordinates() {
	x.xxx_hidden_GeoCoordinates = nil
}

type GNSSPlaceRecord_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The timestamp when the GNSS position was recorded.
	//
	// See Data Dictionary, Section 2.162, `TimeReal`.
	Timestamp *timestamppb.Timestamp
	// The accuracy of the GNSS fix.
	//
	// See Data Dictionary, Section 2.77, `GNSSAccuracy`.
	// ASN.1 Definition:
	//
	//	GNSSAccuracy ::= INTEGER (1..100)
	GnssAccuracy *int32
	// The geographic coordinates of the position.
	//
	// See Data Dictionary, Section 2.76, `GeoCoordinates`.
	GeoCoordinates *GeoCoordinates
}

func (b0 GNSSPlaceRecord_builder) Build() *GNSSPlaceRecord {
	m0 := &GNSSPlaceRecord{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Timestamp = b.Timestamp
	if b.GnssAccuracy != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_GnssAccuracy = *b.GnssAccuracy
	}
	x.xxx_hidden_GeoCoordinates = b.GeoCoordinates
	return m0
}

var File_wayplatform_connect_tachograph_dd_v1_gnss_place_record_proto protoreflect.FileDescriptor

const file_wayplatform_connect_tachograph_dd_v1_gnss_place_record_proto_rawDesc = "" +
	"\n" +
	"<wayplatform/connect/tachograph/dd/v1/gnss_place_record.proto\x12$wayplatform.connect.tachograph.dd.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a:wayplatform/connect/tachograph/dd/v1/geo_coordinates.proto\"\xcf\x01\n" +
	"\x0fGNSSPlaceRecord\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12#\n" +
	"\rgnss_accuracy\x18\x02 \x01(\x05R\fgnssAccuracy\x12]\n" +
	"\x0fgeo_coordinates\x18\x03 \x01(\v24.wayplatform.connect.tachograph.dd.v1.GeoCoordinatesR\x0egeoCoordinatesB\xd3\x02\n" +
	"(com.wayplatform.connect.tachograph.dd.v1B\x14GnssPlaceRecordProtoP\x01Z\\github.com/way-platform/tachograph-go/proto/gen/go/wayplatform/connect/tachograph/dd/v1;ddv1\xa2\x02\x04WCTD\xaa\x02$Wayplatform.Connect.Tachograph.Dd.V1\xca\x02$Wayplatform\\Connect\\Tachograph\\Dd\\V1\xe2\x020Wayplatform\\Connect\\Tachograph\\Dd\\V1\\GPBMetadata\xea\x02(Wayplatform::Connect::Tachograph::Dd::V1b\beditionsp\xe8\a"

var file_wayplatform_connect_tachograph_dd_v1_gnss_place_record_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_wayplatform_connect_tachograph_dd_v1_gnss_place_record_proto_goTypes = []any{
	(*GNSSPlaceRecord)(nil),       // 0: wayplatform.connect.tachograph.dd.v1.GNSSPlaceRecord
	(*timestamppb.Timestamp)(nil), // 1: google.protobuf.Timestamp
	(*GeoCoordinates)(nil),        // 2: wayplatform.connect.tachograph.dd.v1.GeoCoordinates
}
var file_wayplatform_connect_tachograph_dd_v1_gnss_place_record_proto_depIdxs = []int32{
	1, // 0: wayplatform.connect.tachograph.dd.v1.GNSSPlaceRecord.timestamp:type_name -> google.protobuf.Timestamp
	2, // 1: wayplatform.connect.tachograph.dd.v1.GNSSPlaceRecord.geo_coordinates:type_name -> wayplatform.connect.tachograph.dd.v1.GeoCoordinates
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_wayplatform_connect_tachograph_dd_v1_gnss_place_record_proto_init() }
func file_wayplatform_connect_tachograph_dd_v1_gnss_place_record_proto_init() {
	if File_wayplatform_connect_tachograph_dd_v1_gnss_place_record_proto != nil {
		return
	}
	file_wayplatform_connect_tachograph_dd_v1_geo_coordinates_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wayplatform_connect_tachograph_dd_v1_gnss_place_record_proto_rawDesc), len(file_wayplatform_connect_tachograph_dd_v1_gnss_place_record_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wayplatform_connect_tachograph_dd_v1_gnss_place_record_proto_goTypes,
		DependencyIndexes: file_wayplatform_connect_tachograph_dd_v1_gnss_place_record_proto_depIdxs,
		MessageInfos:      file_wayplatform_connect_tachograph_dd_v1_gnss_place_record_proto_msgTypes,
	}.Build()
	File_wayplatform_connect_tachograph_dd_v1_gnss_place_record_proto = out.File
	file_wayplatform_connect_tachograph_dd_v1_gnss_place_record_proto_goTypes = nil
	file_wayplatform_connect_tachograph_dd_v1_gnss_place_record_proto_depIdxs = nil
}
