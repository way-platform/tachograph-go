// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wayplatform/connect/tachograph/dd/v1/specific_condition_record.proto

package ddv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents information related to a specific condition.
//
// See Data Dictionary, Section 2.152, `SpecificConditionRecord`.
//
// ASN.1 Definition:
//
//	SpecificConditionRecord ::= SEQUENCE {
//	    entryTime TimeReal,
//	    specificConditionType SpecificConditionType
//	}
type SpecificConditionRecord struct {
	state                                        protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_EntryTime                         *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=entry_time,json=entryTime"`
	xxx_hidden_SpecificConditionType             SpecificConditionType  `protobuf:"varint,2,opt,name=specific_condition_type,json=specificConditionType,enum=wayplatform.connect.tachograph.dd.v1.SpecificConditionType"`
	xxx_hidden_UnrecognizedSpecificConditionType int32                  `protobuf:"varint,3,opt,name=unrecognized_specific_condition_type,json=unrecognizedSpecificConditionType"`
	XXX_raceDetectHookData                       protoimpl.RaceDetectHookData
	XXX_presence                                 [1]uint32
	unknownFields                                protoimpl.UnknownFields
	sizeCache                                    protoimpl.SizeCache
}

func (x *SpecificConditionRecord) Reset() {
	*x = SpecificConditionRecord{}
	mi := &file_wayplatform_connect_tachograph_dd_v1_specific_condition_record_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpecificConditionRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecificConditionRecord) ProtoMessage() {}

func (x *SpecificConditionRecord) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_dd_v1_specific_condition_record_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SpecificConditionRecord) GetEntryTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_EntryTime
	}
	return nil
}

func (x *SpecificConditionRecord) GetSpecificConditionType() SpecificConditionType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_SpecificConditionType
		}
	}
	return SpecificConditionType_SPECIFIC_CONDITION_TYPE_UNSPECIFIED
}

func (x *SpecificConditionRecord) GetUnrecognizedSpecificConditionType() int32 {
	if x != nil {
		return x.xxx_hidden_UnrecognizedSpecificConditionType
	}
	return 0
}

func (x *SpecificConditionRecord) SetEntryTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_EntryTime = v
}

func (x *SpecificConditionRecord) SetSpecificConditionType(v SpecificConditionType) {
	x.xxx_hidden_SpecificConditionType = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *SpecificConditionRecord) SetUnrecognizedSpecificConditionType(v int32) {
	x.xxx_hidden_UnrecognizedSpecificConditionType = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *SpecificConditionRecord) HasEntryTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_EntryTime != nil
}

func (x *SpecificConditionRecord) HasSpecificConditionType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *SpecificConditionRecord) HasUnrecognizedSpecificConditionType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *SpecificConditionRecord) ClearEntryTime() {
	x.xxx_hidden_EntryTime = nil
}

func (x *SpecificConditionRecord) ClearSpecificConditionType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_SpecificConditionType = SpecificConditionType_SPECIFIC_CONDITION_TYPE_UNSPECIFIED
}

func (x *SpecificConditionRecord) ClearUnrecognizedSpecificConditionType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_UnrecognizedSpecificConditionType = 0
}

type SpecificConditionRecord_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The date and time of the entry.
	//
	// See Data Dictionary, Section 2.162, `TimeReal`.
	EntryTime *timestamppb.Timestamp
	// The code identifying the specific condition.
	//
	// See Data Dictionary, Section 2.154, `SpecificConditionType`.
	SpecificConditionType *SpecificConditionType
	// Stores the raw protocol value when an unrecognized enum value is
	// encountered during parsing.
	UnrecognizedSpecificConditionType *int32
}

func (b0 SpecificConditionRecord_builder) Build() *SpecificConditionRecord {
	m0 := &SpecificConditionRecord{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_EntryTime = b.EntryTime
	if b.SpecificConditionType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_SpecificConditionType = *b.SpecificConditionType
	}
	if b.UnrecognizedSpecificConditionType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_UnrecognizedSpecificConditionType = *b.UnrecognizedSpecificConditionType
	}
	return m0
}

var File_wayplatform_connect_tachograph_dd_v1_specific_condition_record_proto protoreflect.FileDescriptor

const file_wayplatform_connect_tachograph_dd_v1_specific_condition_record_proto_rawDesc = "" +
	"\n" +
	"Dwayplatform/connect/tachograph/dd/v1/specific_condition_record.proto\x12$wayplatform.connect.tachograph.dd.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1aBwayplatform/connect/tachograph/dd/v1/specific_condition_type.proto\"\x9a\x02\n" +
	"\x17SpecificConditionRecord\x129\n" +
	"\n" +
	"entry_time\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\tentryTime\x12s\n" +
	"\x17specific_condition_type\x18\x02 \x01(\x0e2;.wayplatform.connect.tachograph.dd.v1.SpecificConditionTypeR\x15specificConditionType\x12O\n" +
	"$unrecognized_specific_condition_type\x18\x03 \x01(\x05R!unrecognizedSpecificConditionTypeB\xdb\x02\n" +
	"(com.wayplatform.connect.tachograph.dd.v1B\x1cSpecificConditionRecordProtoP\x01Z\\github.com/way-platform/tachograph-go/proto/gen/go/wayplatform/connect/tachograph/dd/v1;ddv1\xa2\x02\x04WCTD\xaa\x02$Wayplatform.Connect.Tachograph.Dd.V1\xca\x02$Wayplatform\\Connect\\Tachograph\\Dd\\V1\xe2\x020Wayplatform\\Connect\\Tachograph\\Dd\\V1\\GPBMetadata\xea\x02(Wayplatform::Connect::Tachograph::Dd::V1b\beditionsp\xe8\a"

var file_wayplatform_connect_tachograph_dd_v1_specific_condition_record_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_wayplatform_connect_tachograph_dd_v1_specific_condition_record_proto_goTypes = []any{
	(*SpecificConditionRecord)(nil), // 0: wayplatform.connect.tachograph.dd.v1.SpecificConditionRecord
	(*timestamppb.Timestamp)(nil),   // 1: google.protobuf.Timestamp
	(SpecificConditionType)(0),      // 2: wayplatform.connect.tachograph.dd.v1.SpecificConditionType
}
var file_wayplatform_connect_tachograph_dd_v1_specific_condition_record_proto_depIdxs = []int32{
	1, // 0: wayplatform.connect.tachograph.dd.v1.SpecificConditionRecord.entry_time:type_name -> google.protobuf.Timestamp
	2, // 1: wayplatform.connect.tachograph.dd.v1.SpecificConditionRecord.specific_condition_type:type_name -> wayplatform.connect.tachograph.dd.v1.SpecificConditionType
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_wayplatform_connect_tachograph_dd_v1_specific_condition_record_proto_init() }
func file_wayplatform_connect_tachograph_dd_v1_specific_condition_record_proto_init() {
	if File_wayplatform_connect_tachograph_dd_v1_specific_condition_record_proto != nil {
		return
	}
	file_wayplatform_connect_tachograph_dd_v1_specific_condition_type_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wayplatform_connect_tachograph_dd_v1_specific_condition_record_proto_rawDesc), len(file_wayplatform_connect_tachograph_dd_v1_specific_condition_record_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wayplatform_connect_tachograph_dd_v1_specific_condition_record_proto_goTypes,
		DependencyIndexes: file_wayplatform_connect_tachograph_dd_v1_specific_condition_record_proto_depIdxs,
		MessageInfos:      file_wayplatform_connect_tachograph_dd_v1_specific_condition_record_proto_msgTypes,
	}.Build()
	File_wayplatform_connect_tachograph_dd_v1_specific_condition_record_proto = out.File
	file_wayplatform_connect_tachograph_dd_v1_specific_condition_record_proto_goTypes = nil
	file_wayplatform_connect_tachograph_dd_v1_specific_condition_record_proto_depIdxs = nil
}
