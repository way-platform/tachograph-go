// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wayplatform/connect/tachograph/dd/v1/software_identification.proto

package ddv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents the software identification of a vehicle unit.
//
// See Data Dictionary, Section 2.225, `VuSoftwareIdentification`.
//
// ASN.1 Definition:
//
//	VuSoftwareIdentification ::= SEQUENCE {
//	    vuSoftwareVersion VuSoftwareVersion,
//	    vuSoftInstallationDate VuSoftInstallationDate
//	}
type SoftwareIdentification struct {
	state                               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_SoftwareVersion          *StringValue           `protobuf:"bytes,1,opt,name=software_version,json=softwareVersion"`
	xxx_hidden_SoftwareInstallationDate *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=software_installation_date,json=softwareInstallationDate"`
	unknownFields                       protoimpl.UnknownFields
	sizeCache                           protoimpl.SizeCache
}

func (x *SoftwareIdentification) Reset() {
	*x = SoftwareIdentification{}
	mi := &file_wayplatform_connect_tachograph_dd_v1_software_identification_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SoftwareIdentification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoftwareIdentification) ProtoMessage() {}

func (x *SoftwareIdentification) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_dd_v1_software_identification_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SoftwareIdentification) GetSoftwareVersion() *StringValue {
	if x != nil {
		return x.xxx_hidden_SoftwareVersion
	}
	return nil
}

func (x *SoftwareIdentification) GetSoftwareInstallationDate() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_SoftwareInstallationDate
	}
	return nil
}

func (x *SoftwareIdentification) SetSoftwareVersion(v *StringValue) {
	x.xxx_hidden_SoftwareVersion = v
}

func (x *SoftwareIdentification) SetSoftwareInstallationDate(v *timestamppb.Timestamp) {
	x.xxx_hidden_SoftwareInstallationDate = v
}

func (x *SoftwareIdentification) HasSoftwareVersion() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_SoftwareVersion != nil
}

func (x *SoftwareIdentification) HasSoftwareInstallationDate() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_SoftwareInstallationDate != nil
}

func (x *SoftwareIdentification) ClearSoftwareVersion() {
	x.xxx_hidden_SoftwareVersion = nil
}

func (x *SoftwareIdentification) ClearSoftwareInstallationDate() {
	x.xxx_hidden_SoftwareInstallationDate = nil
}

type SoftwareIdentification_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The software version of the VU.
	//
	// See Data Dictionary, Section 2.226, `VuSoftwareVersion`.
	//
	// ASN.1 Definition:
	//
	//	VuSoftwareVersion ::= IA5String(SIZE(4))
	SoftwareVersion *StringValue
	// The installation date of the software.
	//
	// See Data Dictionary, Section 2.224, `VuSoftInstallationDate`.
	// ASN.1 Definition:
	//
	//	VuSoftInstallationDate ::= TimeReal ::= INTEGER (0..2^32-1)
	SoftwareInstallationDate *timestamppb.Timestamp
}

func (b0 SoftwareIdentification_builder) Build() *SoftwareIdentification {
	m0 := &SoftwareIdentification{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_SoftwareVersion = b.SoftwareVersion
	x.xxx_hidden_SoftwareInstallationDate = b.SoftwareInstallationDate
	return m0
}

var File_wayplatform_connect_tachograph_dd_v1_software_identification_proto protoreflect.FileDescriptor

const file_wayplatform_connect_tachograph_dd_v1_software_identification_proto_rawDesc = "" +
	"\n" +
	"Bwayplatform/connect/tachograph/dd/v1/software_identification.proto\x12$wayplatform.connect.tachograph.dd.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a7wayplatform/connect/tachograph/dd/v1/string_value.proto\"\xd0\x01\n" +
	"\x16SoftwareIdentification\x12\\\n" +
	"\x10software_version\x18\x01 \x01(\v21.wayplatform.connect.tachograph.dd.v1.StringValueR\x0fsoftwareVersion\x12X\n" +
	"\x1asoftware_installation_date\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x18softwareInstallationDateB\xda\x02\n" +
	"(com.wayplatform.connect.tachograph.dd.v1B\x1bSoftwareIdentificationProtoP\x01Z\\github.com/way-platform/tachograph-go/proto/gen/go/wayplatform/connect/tachograph/dd/v1;ddv1\xa2\x02\x04WCTD\xaa\x02$Wayplatform.Connect.Tachograph.Dd.V1\xca\x02$Wayplatform\\Connect\\Tachograph\\Dd\\V1\xe2\x020Wayplatform\\Connect\\Tachograph\\Dd\\V1\\GPBMetadata\xea\x02(Wayplatform::Connect::Tachograph::Dd::V1b\beditionsp\xe8\a"

var file_wayplatform_connect_tachograph_dd_v1_software_identification_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_wayplatform_connect_tachograph_dd_v1_software_identification_proto_goTypes = []any{
	(*SoftwareIdentification)(nil), // 0: wayplatform.connect.tachograph.dd.v1.SoftwareIdentification
	(*StringValue)(nil),            // 1: wayplatform.connect.tachograph.dd.v1.StringValue
	(*timestamppb.Timestamp)(nil),  // 2: google.protobuf.Timestamp
}
var file_wayplatform_connect_tachograph_dd_v1_software_identification_proto_depIdxs = []int32{
	1, // 0: wayplatform.connect.tachograph.dd.v1.SoftwareIdentification.software_version:type_name -> wayplatform.connect.tachograph.dd.v1.StringValue
	2, // 1: wayplatform.connect.tachograph.dd.v1.SoftwareIdentification.software_installation_date:type_name -> google.protobuf.Timestamp
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_wayplatform_connect_tachograph_dd_v1_software_identification_proto_init() }
func file_wayplatform_connect_tachograph_dd_v1_software_identification_proto_init() {
	if File_wayplatform_connect_tachograph_dd_v1_software_identification_proto != nil {
		return
	}
	file_wayplatform_connect_tachograph_dd_v1_string_value_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wayplatform_connect_tachograph_dd_v1_software_identification_proto_rawDesc), len(file_wayplatform_connect_tachograph_dd_v1_software_identification_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wayplatform_connect_tachograph_dd_v1_software_identification_proto_goTypes,
		DependencyIndexes: file_wayplatform_connect_tachograph_dd_v1_software_identification_proto_depIdxs,
		MessageInfos:      file_wayplatform_connect_tachograph_dd_v1_software_identification_proto_msgTypes,
	}.Build()
	File_wayplatform_connect_tachograph_dd_v1_software_identification_proto = out.File
	file_wayplatform_connect_tachograph_dd_v1_software_identification_proto_goTypes = nil
	file_wayplatform_connect_tachograph_dd_v1_software_identification_proto_depIdxs = nil
}
