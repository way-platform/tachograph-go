// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wayplatform/connect/tachograph/dd/v1/specific_condition_type.proto

package ddv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// SpecificConditionType indicates special circumstances like ferry crossings.
// See Data Dictionary, Section 2.154.
type SpecificConditionType int32

const (
	SpecificConditionType_SPECIFIC_CONDITION_TYPE_UNSPECIFIED  SpecificConditionType = 0
	SpecificConditionType_SPECIFIC_CONDITION_TYPE_UNRECOGNIZED SpecificConditionType = 1
	SpecificConditionType_RFU                                  SpecificConditionType = 2
	SpecificConditionType_OUT_OF_SCOPE_BEGIN                   SpecificConditionType = 3
	SpecificConditionType_OUT_OF_SCOPE_END                     SpecificConditionType = 4
	SpecificConditionType_FERRY_TRAIN_CROSSING                 SpecificConditionType = 5
)

// Enum value maps for SpecificConditionType.
var (
	SpecificConditionType_name = map[int32]string{
		0: "SPECIFIC_CONDITION_TYPE_UNSPECIFIED",
		1: "SPECIFIC_CONDITION_TYPE_UNRECOGNIZED",
		2: "RFU",
		3: "OUT_OF_SCOPE_BEGIN",
		4: "OUT_OF_SCOPE_END",
		5: "FERRY_TRAIN_CROSSING",
	}
	SpecificConditionType_value = map[string]int32{
		"SPECIFIC_CONDITION_TYPE_UNSPECIFIED":  0,
		"SPECIFIC_CONDITION_TYPE_UNRECOGNIZED": 1,
		"RFU":                                  2,
		"OUT_OF_SCOPE_BEGIN":                   3,
		"OUT_OF_SCOPE_END":                     4,
		"FERRY_TRAIN_CROSSING":                 5,
	}
)

func (x SpecificConditionType) Enum() *SpecificConditionType {
	p := new(SpecificConditionType)
	*p = x
	return p
}

func (x SpecificConditionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SpecificConditionType) Descriptor() protoreflect.EnumDescriptor {
	return file_wayplatform_connect_tachograph_dd_v1_specific_condition_type_proto_enumTypes[0].Descriptor()
}

func (SpecificConditionType) Type() protoreflect.EnumType {
	return &file_wayplatform_connect_tachograph_dd_v1_specific_condition_type_proto_enumTypes[0]
}

func (x SpecificConditionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

var File_wayplatform_connect_tachograph_dd_v1_specific_condition_type_proto protoreflect.FileDescriptor

const file_wayplatform_connect_tachograph_dd_v1_specific_condition_type_proto_rawDesc = "" +
	"\n" +
	"Bwayplatform/connect/tachograph/dd/v1/specific_condition_type.proto\x12$wayplatform.connect.tachograph.dd.v1\x1a6wayplatform/connect/tachograph/dd/v1/annotations.proto*\xd7\x01\n" +
	"\x15SpecificConditionType\x12'\n" +
	"#SPECIFIC_CONDITION_TYPE_UNSPECIFIED\x10\x00\x12(\n" +
	"$SPECIFIC_CONDITION_TYPE_UNRECOGNIZED\x10\x01\x12\x0e\n" +
	"\x03RFU\x10\x02\x1a\x05\x98\xaf\x9c\x02\x00\x12\x1d\n" +
	"\x12OUT_OF_SCOPE_BEGIN\x10\x03\x1a\x05\x98\xaf\x9c\x02\x01\x12\x1b\n" +
	"\x10OUT_OF_SCOPE_END\x10\x04\x1a\x05\x98\xaf\x9c\x02\x02\x12\x1f\n" +
	"\x14FERRY_TRAIN_CROSSING\x10\x05\x1a\x05\x98\xaf\x9c\x02\x03B\xd9\x02\n" +
	"(com.wayplatform.connect.tachograph.dd.v1B\x1aSpecificConditionTypeProtoP\x01Z\\github.com/way-platform/tachograph-go/proto/gen/go/wayplatform/connect/tachograph/dd/v1;ddv1\xa2\x02\x04WCTD\xaa\x02$Wayplatform.Connect.Tachograph.Dd.V1\xca\x02$Wayplatform\\Connect\\Tachograph\\Dd\\V1\xe2\x020Wayplatform\\Connect\\Tachograph\\Dd\\V1\\GPBMetadata\xea\x02(Wayplatform::Connect::Tachograph::Dd::V1b\beditionsp\xe8\a"

var file_wayplatform_connect_tachograph_dd_v1_specific_condition_type_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_wayplatform_connect_tachograph_dd_v1_specific_condition_type_proto_goTypes = []any{
	(SpecificConditionType)(0), // 0: wayplatform.connect.tachograph.dd.v1.SpecificConditionType
}
var file_wayplatform_connect_tachograph_dd_v1_specific_condition_type_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_wayplatform_connect_tachograph_dd_v1_specific_condition_type_proto_init() }
func file_wayplatform_connect_tachograph_dd_v1_specific_condition_type_proto_init() {
	if File_wayplatform_connect_tachograph_dd_v1_specific_condition_type_proto != nil {
		return
	}
	file_wayplatform_connect_tachograph_dd_v1_annotations_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wayplatform_connect_tachograph_dd_v1_specific_condition_type_proto_rawDesc), len(file_wayplatform_connect_tachograph_dd_v1_specific_condition_type_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wayplatform_connect_tachograph_dd_v1_specific_condition_type_proto_goTypes,
		DependencyIndexes: file_wayplatform_connect_tachograph_dd_v1_specific_condition_type_proto_depIdxs,
		EnumInfos:         file_wayplatform_connect_tachograph_dd_v1_specific_condition_type_proto_enumTypes,
	}.Build()
	File_wayplatform_connect_tachograph_dd_v1_specific_condition_type_proto = out.File
	file_wayplatform_connect_tachograph_dd_v1_specific_condition_type_proto_goTypes = nil
	file_wayplatform_connect_tachograph_dd_v1_specific_condition_type_proto_depIdxs = nil
}
