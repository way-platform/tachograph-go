// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wayplatform/connect/tachograph/dd/v1/vu_card_iw_record.proto

package ddv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents an insertion and withdrawal cycle of a driver or workshop card
// in a vehicle unit.
//
// See Data Dictionary, Section 2.177.
//
// ASN.1 Definition (Gen1):
//
//	VuCardIWRecord ::= SEQUENCE {
//	    cardHolderName HolderName,
//	    fullCardNumber FullCardNumber,
//	    cardExpiryDate Datef,
//	    cardInsertionTime TimeReal,
//	    vehicleOdometerValueAtInsertion OdometerShort,
//	    cardSlotNumber CardSlotNumber,
//	    cardWithdrawalTime TimeReal,
//	    vehicleOdometerValueAtWithdrawal OdometerShort,
//	    previousVehicleInfo PreviousVehicleInfo,
//	    manualInputFlag ManualInputFlag
//	}
//
// Binary Layout: 129 bytes (fixed)
type VuCardIWRecord struct {
	state                             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_CardHolderName         *HolderName            `protobuf:"bytes,1,opt,name=card_holder_name,json=cardHolderName"`
	xxx_hidden_FullCardNumber         *FullCardNumber        `protobuf:"bytes,2,opt,name=full_card_number,json=fullCardNumber"`
	xxx_hidden_CardExpiryDate         *Date                  `protobuf:"bytes,3,opt,name=card_expiry_date,json=cardExpiryDate"`
	xxx_hidden_CardInsertionTime      *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=card_insertion_time,json=cardInsertionTime"`
	xxx_hidden_OdometerAtInsertionKm  int32                  `protobuf:"varint,5,opt,name=odometer_at_insertion_km,json=odometerAtInsertionKm"`
	xxx_hidden_CardSlotNumber         CardSlotNumber         `protobuf:"varint,6,opt,name=card_slot_number,json=cardSlotNumber,enum=wayplatform.connect.tachograph.dd.v1.CardSlotNumber"`
	xxx_hidden_CardWithdrawalTime     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=card_withdrawal_time,json=cardWithdrawalTime"`
	xxx_hidden_OdometerAtWithdrawalKm int32                  `protobuf:"varint,8,opt,name=odometer_at_withdrawal_km,json=odometerAtWithdrawalKm"`
	xxx_hidden_PreviousVehicleInfo    *PreviousVehicleInfo   `protobuf:"bytes,9,opt,name=previous_vehicle_info,json=previousVehicleInfo"`
	xxx_hidden_ManualInputFlag        bool                   `protobuf:"varint,10,opt,name=manual_input_flag,json=manualInputFlag"`
	xxx_hidden_RawData                []byte                 `protobuf:"bytes,99,opt,name=raw_data,json=rawData"`
	XXX_raceDetectHookData            protoimpl.RaceDetectHookData
	XXX_presence                      [1]uint32
	unknownFields                     protoimpl.UnknownFields
	sizeCache                         protoimpl.SizeCache
}

func (x *VuCardIWRecord) Reset() {
	*x = VuCardIWRecord{}
	mi := &file_wayplatform_connect_tachograph_dd_v1_vu_card_iw_record_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VuCardIWRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VuCardIWRecord) ProtoMessage() {}

func (x *VuCardIWRecord) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_dd_v1_vu_card_iw_record_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VuCardIWRecord) GetCardHolderName() *HolderName {
	if x != nil {
		return x.xxx_hidden_CardHolderName
	}
	return nil
}

func (x *VuCardIWRecord) GetFullCardNumber() *FullCardNumber {
	if x != nil {
		return x.xxx_hidden_FullCardNumber
	}
	return nil
}

func (x *VuCardIWRecord) GetCardExpiryDate() *Date {
	if x != nil {
		return x.xxx_hidden_CardExpiryDate
	}
	return nil
}

func (x *VuCardIWRecord) GetCardInsertionTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_CardInsertionTime
	}
	return nil
}

func (x *VuCardIWRecord) GetOdometerAtInsertionKm() int32 {
	if x != nil {
		return x.xxx_hidden_OdometerAtInsertionKm
	}
	return 0
}

func (x *VuCardIWRecord) GetCardSlotNumber() CardSlotNumber {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 5) {
			return x.xxx_hidden_CardSlotNumber
		}
	}
	return CardSlotNumber_CARD_SLOT_NUMBER_UNSPECIFIED
}

func (x *VuCardIWRecord) GetCardWithdrawalTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_CardWithdrawalTime
	}
	return nil
}

func (x *VuCardIWRecord) GetOdometerAtWithdrawalKm() int32 {
	if x != nil {
		return x.xxx_hidden_OdometerAtWithdrawalKm
	}
	return 0
}

func (x *VuCardIWRecord) GetPreviousVehicleInfo() *PreviousVehicleInfo {
	if x != nil {
		return x.xxx_hidden_PreviousVehicleInfo
	}
	return nil
}

func (x *VuCardIWRecord) GetManualInputFlag() bool {
	if x != nil {
		return x.xxx_hidden_ManualInputFlag
	}
	return false
}

func (x *VuCardIWRecord) GetRawData() []byte {
	if x != nil {
		return x.xxx_hidden_RawData
	}
	return nil
}

func (x *VuCardIWRecord) SetCardHolderName(v *HolderName) {
	x.xxx_hidden_CardHolderName = v
}

func (x *VuCardIWRecord) SetFullCardNumber(v *FullCardNumber) {
	x.xxx_hidden_FullCardNumber = v
}

func (x *VuCardIWRecord) SetCardExpiryDate(v *Date) {
	x.xxx_hidden_CardExpiryDate = v
}

func (x *VuCardIWRecord) SetCardInsertionTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_CardInsertionTime = v
}

func (x *VuCardIWRecord) SetOdometerAtInsertionKm(v int32) {
	x.xxx_hidden_OdometerAtInsertionKm = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 11)
}

func (x *VuCardIWRecord) SetCardSlotNumber(v CardSlotNumber) {
	x.xxx_hidden_CardSlotNumber = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 11)
}

func (x *VuCardIWRecord) SetCardWithdrawalTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_CardWithdrawalTime = v
}

func (x *VuCardIWRecord) SetOdometerAtWithdrawalKm(v int32) {
	x.xxx_hidden_OdometerAtWithdrawalKm = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 11)
}

func (x *VuCardIWRecord) SetPreviousVehicleInfo(v *PreviousVehicleInfo) {
	x.xxx_hidden_PreviousVehicleInfo = v
}

func (x *VuCardIWRecord) SetManualInputFlag(v bool) {
	x.xxx_hidden_ManualInputFlag = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 11)
}

func (x *VuCardIWRecord) SetRawData(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_RawData = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 10, 11)
}

func (x *VuCardIWRecord) HasCardHolderName() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CardHolderName != nil
}

func (x *VuCardIWRecord) HasFullCardNumber() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_FullCardNumber != nil
}

func (x *VuCardIWRecord) HasCardExpiryDate() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CardExpiryDate != nil
}

func (x *VuCardIWRecord) HasCardInsertionTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CardInsertionTime != nil
}

func (x *VuCardIWRecord) HasOdometerAtInsertionKm() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *VuCardIWRecord) HasCardSlotNumber() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *VuCardIWRecord) HasCardWithdrawalTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CardWithdrawalTime != nil
}

func (x *VuCardIWRecord) HasOdometerAtWithdrawalKm() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *VuCardIWRecord) HasPreviousVehicleInfo() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_PreviousVehicleInfo != nil
}

func (x *VuCardIWRecord) HasManualInputFlag() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *VuCardIWRecord) HasRawData() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 10)
}

func (x *VuCardIWRecord) ClearCardHolderName() {
	x.xxx_hidden_CardHolderName = nil
}

func (x *VuCardIWRecord) ClearFullCardNumber() {
	x.xxx_hidden_FullCardNumber = nil
}

func (x *VuCardIWRecord) ClearCardExpiryDate() {
	x.xxx_hidden_CardExpiryDate = nil
}

func (x *VuCardIWRecord) ClearCardInsertionTime() {
	x.xxx_hidden_CardInsertionTime = nil
}

func (x *VuCardIWRecord) ClearOdometerAtInsertionKm() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_OdometerAtInsertionKm = 0
}

func (x *VuCardIWRecord) ClearCardSlotNumber() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_CardSlotNumber = CardSlotNumber_CARD_SLOT_NUMBER_UNSPECIFIED
}

func (x *VuCardIWRecord) ClearCardWithdrawalTime() {
	x.xxx_hidden_CardWithdrawalTime = nil
}

func (x *VuCardIWRecord) ClearOdometerAtWithdrawalKm() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_OdometerAtWithdrawalKm = 0
}

func (x *VuCardIWRecord) ClearPreviousVehicleInfo() {
	x.xxx_hidden_PreviousVehicleInfo = nil
}

func (x *VuCardIWRecord) ClearManualInputFlag() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_ManualInputFlag = false
}

func (x *VuCardIWRecord) ClearRawData() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 10)
	x.xxx_hidden_RawData = nil
}

type VuCardIWRecord_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The name of the card holder.
	//
	// See Data Dictionary, Section 2.83, `HolderName`.
	CardHolderName *HolderName
	// The full card number of the inserted card.
	//
	// See Data Dictionary, Section 2.73, `FullCardNumber`.
	FullCardNumber *FullCardNumber
	// The expiry date of the card.
	//
	// See Data Dictionary, Section 2.57, `Datef`.
	CardExpiryDate *Date
	// The time the card was inserted.
	//
	// See Data Dictionary, Section 2.162, `TimeReal`.
	CardInsertionTime *timestamppb.Timestamp
	// The odometer value at the time of card insertion in kilometers.
	//
	// See Data Dictionary, Section 2.113, `OdometerShort`.
	OdometerAtInsertionKm *int32
	// The slot the card was inserted into.
	//
	// See Data Dictionary, Section 2.33, `CardSlotNumber`.
	CardSlotNumber *CardSlotNumber
	// The time the card was withdrawn.
	//
	// See Data Dictionary, Section 2.162, `TimeReal`.
	CardWithdrawalTime *timestamppb.Timestamp
	// The odometer value at the time of card withdrawal in kilometers.
	//
	// See Data Dictionary, Section 2.113, `OdometerShort`.
	OdometerAtWithdrawalKm *int32
	// Information about the previous vehicle used.
	//
	// See Data Dictionary, Section 2.118, `PreviousVehicleInfo`.
	PreviousVehicleInfo *PreviousVehicleInfo
	// Indicates if manual entries were made.
	//
	// See Data Dictionary, Section 2.93, `ManualInputFlag`.
	// Protocol values: 0 = noEntry, 1 = manualEntries.
	ManualInputFlag *bool
	// The raw binary data for this record (for round-trip fidelity).
	RawData []byte
}

func (b0 VuCardIWRecord_builder) Build() *VuCardIWRecord {
	m0 := &VuCardIWRecord{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_CardHolderName = b.CardHolderName
	x.xxx_hidden_FullCardNumber = b.FullCardNumber
	x.xxx_hidden_CardExpiryDate = b.CardExpiryDate
	x.xxx_hidden_CardInsertionTime = b.CardInsertionTime
	if b.OdometerAtInsertionKm != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 11)
		x.xxx_hidden_OdometerAtInsertionKm = *b.OdometerAtInsertionKm
	}
	if b.CardSlotNumber != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 11)
		x.xxx_hidden_CardSlotNumber = *b.CardSlotNumber
	}
	x.xxx_hidden_CardWithdrawalTime = b.CardWithdrawalTime
	if b.OdometerAtWithdrawalKm != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 11)
		x.xxx_hidden_OdometerAtWithdrawalKm = *b.OdometerAtWithdrawalKm
	}
	x.xxx_hidden_PreviousVehicleInfo = b.PreviousVehicleInfo
	if b.ManualInputFlag != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 11)
		x.xxx_hidden_ManualInputFlag = *b.ManualInputFlag
	}
	if b.RawData != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 10, 11)
		x.xxx_hidden_RawData = b.RawData
	}
	return m0
}

var File_wayplatform_connect_tachograph_dd_v1_vu_card_iw_record_proto protoreflect.FileDescriptor

const file_wayplatform_connect_tachograph_dd_v1_vu_card_iw_record_proto_rawDesc = "" +
	"\n" +
	"<wayplatform/connect/tachograph/dd/v1/vu_card_iw_record.proto\x12$wayplatform.connect.tachograph.dd.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a;wayplatform/connect/tachograph/dd/v1/card_slot_number.proto\x1a/wayplatform/connect/tachograph/dd/v1/date.proto\x1a;wayplatform/connect/tachograph/dd/v1/full_card_number.proto\x1a6wayplatform/connect/tachograph/dd/v1/holder_name.proto\x1a@wayplatform/connect/tachograph/dd/v1/previous_vehicle_info.proto\"\xc6\x06\n" +
	"\x0eVuCardIWRecord\x12Z\n" +
	"\x10card_holder_name\x18\x01 \x01(\v20.wayplatform.connect.tachograph.dd.v1.HolderNameR\x0ecardHolderName\x12^\n" +
	"\x10full_card_number\x18\x02 \x01(\v24.wayplatform.connect.tachograph.dd.v1.FullCardNumberR\x0efullCardNumber\x12T\n" +
	"\x10card_expiry_date\x18\x03 \x01(\v2*.wayplatform.connect.tachograph.dd.v1.DateR\x0ecardExpiryDate\x12J\n" +
	"\x13card_insertion_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x11cardInsertionTime\x127\n" +
	"\x18odometer_at_insertion_km\x18\x05 \x01(\x05R\x15odometerAtInsertionKm\x12^\n" +
	"\x10card_slot_number\x18\x06 \x01(\x0e24.wayplatform.connect.tachograph.dd.v1.CardSlotNumberR\x0ecardSlotNumber\x12L\n" +
	"\x14card_withdrawal_time\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\x12cardWithdrawalTime\x129\n" +
	"\x19odometer_at_withdrawal_km\x18\b \x01(\x05R\x16odometerAtWithdrawalKm\x12m\n" +
	"\x15previous_vehicle_info\x18\t \x01(\v29.wayplatform.connect.tachograph.dd.v1.PreviousVehicleInfoR\x13previousVehicleInfo\x12*\n" +
	"\x11manual_input_flag\x18\n" +
	" \x01(\bR\x0fmanualInputFlag\x12\x19\n" +
	"\braw_data\x18c \x01(\fR\arawDataB\xd2\x02\n" +
	"(com.wayplatform.connect.tachograph.dd.v1B\x13VuCardIwRecordProtoP\x01Z\\github.com/way-platform/tachograph-go/proto/gen/go/wayplatform/connect/tachograph/dd/v1;ddv1\xa2\x02\x04WCTD\xaa\x02$Wayplatform.Connect.Tachograph.Dd.V1\xca\x02$Wayplatform\\Connect\\Tachograph\\Dd\\V1\xe2\x020Wayplatform\\Connect\\Tachograph\\Dd\\V1\\GPBMetadata\xea\x02(Wayplatform::Connect::Tachograph::Dd::V1b\beditionsp\xe8\a"

var file_wayplatform_connect_tachograph_dd_v1_vu_card_iw_record_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_wayplatform_connect_tachograph_dd_v1_vu_card_iw_record_proto_goTypes = []any{
	(*VuCardIWRecord)(nil),        // 0: wayplatform.connect.tachograph.dd.v1.VuCardIWRecord
	(*HolderName)(nil),            // 1: wayplatform.connect.tachograph.dd.v1.HolderName
	(*FullCardNumber)(nil),        // 2: wayplatform.connect.tachograph.dd.v1.FullCardNumber
	(*Date)(nil),                  // 3: wayplatform.connect.tachograph.dd.v1.Date
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
	(CardSlotNumber)(0),           // 5: wayplatform.connect.tachograph.dd.v1.CardSlotNumber
	(*PreviousVehicleInfo)(nil),   // 6: wayplatform.connect.tachograph.dd.v1.PreviousVehicleInfo
}
var file_wayplatform_connect_tachograph_dd_v1_vu_card_iw_record_proto_depIdxs = []int32{
	1, // 0: wayplatform.connect.tachograph.dd.v1.VuCardIWRecord.card_holder_name:type_name -> wayplatform.connect.tachograph.dd.v1.HolderName
	2, // 1: wayplatform.connect.tachograph.dd.v1.VuCardIWRecord.full_card_number:type_name -> wayplatform.connect.tachograph.dd.v1.FullCardNumber
	3, // 2: wayplatform.connect.tachograph.dd.v1.VuCardIWRecord.card_expiry_date:type_name -> wayplatform.connect.tachograph.dd.v1.Date
	4, // 3: wayplatform.connect.tachograph.dd.v1.VuCardIWRecord.card_insertion_time:type_name -> google.protobuf.Timestamp
	5, // 4: wayplatform.connect.tachograph.dd.v1.VuCardIWRecord.card_slot_number:type_name -> wayplatform.connect.tachograph.dd.v1.CardSlotNumber
	4, // 5: wayplatform.connect.tachograph.dd.v1.VuCardIWRecord.card_withdrawal_time:type_name -> google.protobuf.Timestamp
	6, // 6: wayplatform.connect.tachograph.dd.v1.VuCardIWRecord.previous_vehicle_info:type_name -> wayplatform.connect.tachograph.dd.v1.PreviousVehicleInfo
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_wayplatform_connect_tachograph_dd_v1_vu_card_iw_record_proto_init() }
func file_wayplatform_connect_tachograph_dd_v1_vu_card_iw_record_proto_init() {
	if File_wayplatform_connect_tachograph_dd_v1_vu_card_iw_record_proto != nil {
		return
	}
	file_wayplatform_connect_tachograph_dd_v1_card_slot_number_proto_init()
	file_wayplatform_connect_tachograph_dd_v1_date_proto_init()
	file_wayplatform_connect_tachograph_dd_v1_full_card_number_proto_init()
	file_wayplatform_connect_tachograph_dd_v1_holder_name_proto_init()
	file_wayplatform_connect_tachograph_dd_v1_previous_vehicle_info_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wayplatform_connect_tachograph_dd_v1_vu_card_iw_record_proto_rawDesc), len(file_wayplatform_connect_tachograph_dd_v1_vu_card_iw_record_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wayplatform_connect_tachograph_dd_v1_vu_card_iw_record_proto_goTypes,
		DependencyIndexes: file_wayplatform_connect_tachograph_dd_v1_vu_card_iw_record_proto_depIdxs,
		MessageInfos:      file_wayplatform_connect_tachograph_dd_v1_vu_card_iw_record_proto_msgTypes,
	}.Build()
	File_wayplatform_connect_tachograph_dd_v1_vu_card_iw_record_proto = out.File
	file_wayplatform_connect_tachograph_dd_v1_vu_card_iw_record_proto_goTypes = nil
	file_wayplatform_connect_tachograph_dd_v1_vu_card_iw_record_proto_depIdxs = nil
}
