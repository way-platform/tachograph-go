// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wayplatform/connect/tachograph/dd/v1/geo_coordinates.proto

package ddv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents the `GeoCoordinates` data type from the Data Dictionary, Section 2.76.
//
// Coordinates are encoded as multiples (factor 10) of the ±DDMM.M format, where
// DD/DDD represents degrees and MM.M represents minutes. For example, a position
// of 60°30.5' North would be encoded as 60305 (6030.5 × 10).
//
// An unknown position is represented by the value 0x7FFFFF (8388607 decimal).
//
// See Data Dictionary, Section 2.76.
//
// ASN.1 Definition:
//
//	GeoCoordinates ::= SEQUENCE {
//	    latitude INTEGER(-90000..90001),
//	    longitude INTEGER(-180000..180001)
//	}
type GeoCoordinates struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Latitude    int32                  `protobuf:"zigzag32,1,opt,name=latitude"`
	xxx_hidden_Longitude   int32                  `protobuf:"zigzag32,2,opt,name=longitude"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GeoCoordinates) Reset() {
	*x = GeoCoordinates{}
	mi := &file_wayplatform_connect_tachograph_dd_v1_geo_coordinates_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GeoCoordinates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeoCoordinates) ProtoMessage() {}

func (x *GeoCoordinates) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_tachograph_dd_v1_geo_coordinates_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GeoCoordinates) GetLatitude() int32 {
	if x != nil {
		return x.xxx_hidden_Latitude
	}
	return 0
}

func (x *GeoCoordinates) GetLongitude() int32 {
	if x != nil {
		return x.xxx_hidden_Longitude
	}
	return 0
}

func (x *GeoCoordinates) SetLatitude(v int32) {
	x.xxx_hidden_Latitude = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *GeoCoordinates) SetLongitude(v int32) {
	x.xxx_hidden_Longitude = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *GeoCoordinates) HasLatitude() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GeoCoordinates) HasLongitude() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *GeoCoordinates) ClearLatitude() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Latitude = 0
}

func (x *GeoCoordinates) ClearLongitude() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Longitude = 0
}

type GeoCoordinates_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Latitude encoded as a multiple (factor 10) of ±DDMM.M format.
	//
	// Range: -90000 to +90001 (representing -90°00.0' to +90°00.1')
	// Unknown position: 0x7FFFFF (8388607)
	//
	// ASN.1 Definition:
	//
	//	latitude INTEGER(-90000..90001)
	Latitude *int32
	// Longitude encoded as a multiple (factor 10) of ±DDDMM.M format.
	//
	// Range: -180000 to +180001 (representing -180°00.0' to +180°00.1')
	// Unknown position: 0x7FFFFF (8388607)
	//
	// ASN.1 Definition:
	//
	//	longitude INTEGER(-180000..180001)
	Longitude *int32
}

func (b0 GeoCoordinates_builder) Build() *GeoCoordinates {
	m0 := &GeoCoordinates{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Latitude != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Latitude = *b.Latitude
	}
	if b.Longitude != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Longitude = *b.Longitude
	}
	return m0
}

var File_wayplatform_connect_tachograph_dd_v1_geo_coordinates_proto protoreflect.FileDescriptor

const file_wayplatform_connect_tachograph_dd_v1_geo_coordinates_proto_rawDesc = "" +
	"\n" +
	":wayplatform/connect/tachograph/dd/v1/geo_coordinates.proto\x12$wayplatform.connect.tachograph.dd.v1\"J\n" +
	"\x0eGeoCoordinates\x12\x1a\n" +
	"\blatitude\x18\x01 \x01(\x11R\blatitude\x12\x1c\n" +
	"\tlongitude\x18\x02 \x01(\x11R\tlongitudeB\xd2\x02\n" +
	"(com.wayplatform.connect.tachograph.dd.v1B\x13GeoCoordinatesProtoP\x01Z\\github.com/way-platform/tachograph-go/proto/gen/go/wayplatform/connect/tachograph/dd/v1;ddv1\xa2\x02\x04WCTD\xaa\x02$Wayplatform.Connect.Tachograph.Dd.V1\xca\x02$Wayplatform\\Connect\\Tachograph\\Dd\\V1\xe2\x020Wayplatform\\Connect\\Tachograph\\Dd\\V1\\GPBMetadata\xea\x02(Wayplatform::Connect::Tachograph::Dd::V1b\beditionsp\xe8\a"

var file_wayplatform_connect_tachograph_dd_v1_geo_coordinates_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_wayplatform_connect_tachograph_dd_v1_geo_coordinates_proto_goTypes = []any{
	(*GeoCoordinates)(nil), // 0: wayplatform.connect.tachograph.dd.v1.GeoCoordinates
}
var file_wayplatform_connect_tachograph_dd_v1_geo_coordinates_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_wayplatform_connect_tachograph_dd_v1_geo_coordinates_proto_init() }
func file_wayplatform_connect_tachograph_dd_v1_geo_coordinates_proto_init() {
	if File_wayplatform_connect_tachograph_dd_v1_geo_coordinates_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wayplatform_connect_tachograph_dd_v1_geo_coordinates_proto_rawDesc), len(file_wayplatform_connect_tachograph_dd_v1_geo_coordinates_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wayplatform_connect_tachograph_dd_v1_geo_coordinates_proto_goTypes,
		DependencyIndexes: file_wayplatform_connect_tachograph_dd_v1_geo_coordinates_proto_depIdxs,
		MessageInfos:      file_wayplatform_connect_tachograph_dd_v1_geo_coordinates_proto_msgTypes,
	}.Build()
	File_wayplatform_connect_tachograph_dd_v1_geo_coordinates_proto = out.File
	file_wayplatform_connect_tachograph_dd_v1_geo_coordinates_proto_goTypes = nil
	file_wayplatform_connect_tachograph_dd_v1_geo_coordinates_proto_depIdxs = nil
}
