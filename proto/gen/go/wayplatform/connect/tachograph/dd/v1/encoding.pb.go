// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wayplatform/connect/tachograph/dd/v1/encoding.proto

package ddv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Encoding defines the character encodings for strings as specified in the
// tachograph regulations. It is used within the `StringValue` message to
// provide a canonical representation for all complex string types.
//
// How it maps to ASN.1 types:
//
//  1. Code-Paged Strings (e.g., `Name`, `Address`): These types are defined
//     in the protocol as a sequence of a code page byte and an octet string.
//     The `code_page` custom option on the enum values (e.g., ISO_8859_1)
//     is used to store the corresponding numeric protocol value.
//
//  2. Fixed-Encoding Strings (e.g., `IA5String`): These types have a fixed
//     encoding (ASCII) and do not have a code page byte in the protocol.
//     The `IA5` enum value is used to represent this encoding.
type Encoding int32

const (
	// The encoding is not specified.
	Encoding_ENCODING_UNSPECIFIED Encoding = 0
	// The encoding was present but not recognized.
	Encoding_ENCODING_UNRECOGNIZED Encoding = 1
	// Default encoding for code-paged strings (protocol value 0).
	Encoding_ENCODING_DEFAULT Encoding = 2
	// Empty/unassigned string (protocol value 255 for code-paged strings).
	Encoding_ENCODING_EMPTY Encoding = 3
	// ISO/IEC 8859-1: Latin alphabet No. 1
	Encoding_ISO_8859_1 Encoding = 4
	// ISO/IEC 8859-2: Latin alphabet No. 2
	Encoding_ISO_8859_2 Encoding = 5
	// ISO/IEC 8859-3: Latin alphabet No. 3
	Encoding_ISO_8859_3 Encoding = 6
	// ISO/IEC 8859-5: Latin/Cyrillic alphabet
	Encoding_ISO_8859_5 Encoding = 7
	// ISO/IEC 8859-7: Latin/Greek alphabet
	Encoding_ISO_8859_7 Encoding = 8
	// ISO/IEC 8859-9: Latin alphabet No. 5
	Encoding_ISO_8859_9 Encoding = 9
	// ISO/IEC 8859-13: Latin alphabet No. 7
	Encoding_ISO_8859_13 Encoding = 10
	// ISO/IEC 8859-15: Latin alphabet No. 9
	Encoding_ISO_8859_15 Encoding = 11
	// ISO/IEC 8859-16: Latin alphabet No. 10
	Encoding_ISO_8859_16 Encoding = 12
	// KOI8-R: Cyrillic
	Encoding_KOI8_R Encoding = 13
	// KOI8-U: Ukrainian
	Encoding_KOI8_U Encoding = 14
)

// Enum value maps for Encoding.
var (
	Encoding_name = map[int32]string{
		0:  "ENCODING_UNSPECIFIED",
		1:  "ENCODING_UNRECOGNIZED",
		2:  "ENCODING_DEFAULT",
		3:  "ENCODING_EMPTY",
		4:  "ISO_8859_1",
		5:  "ISO_8859_2",
		6:  "ISO_8859_3",
		7:  "ISO_8859_5",
		8:  "ISO_8859_7",
		9:  "ISO_8859_9",
		10: "ISO_8859_13",
		11: "ISO_8859_15",
		12: "ISO_8859_16",
		13: "KOI8_R",
		14: "KOI8_U",
	}
	Encoding_value = map[string]int32{
		"ENCODING_UNSPECIFIED":  0,
		"ENCODING_UNRECOGNIZED": 1,
		"ENCODING_DEFAULT":      2,
		"ENCODING_EMPTY":        3,
		"ISO_8859_1":            4,
		"ISO_8859_2":            5,
		"ISO_8859_3":            6,
		"ISO_8859_5":            7,
		"ISO_8859_7":            8,
		"ISO_8859_9":            9,
		"ISO_8859_13":           10,
		"ISO_8859_15":           11,
		"ISO_8859_16":           12,
		"KOI8_R":                13,
		"KOI8_U":                14,
	}
)

func (x Encoding) Enum() *Encoding {
	p := new(Encoding)
	*p = x
	return p
}

func (x Encoding) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Encoding) Descriptor() protoreflect.EnumDescriptor {
	return file_wayplatform_connect_tachograph_dd_v1_encoding_proto_enumTypes[0].Descriptor()
}

func (Encoding) Type() protoreflect.EnumType {
	return &file_wayplatform_connect_tachograph_dd_v1_encoding_proto_enumTypes[0]
}

func (x Encoding) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

var File_wayplatform_connect_tachograph_dd_v1_encoding_proto protoreflect.FileDescriptor

const file_wayplatform_connect_tachograph_dd_v1_encoding_proto_rawDesc = "" +
	"\n" +
	"3wayplatform/connect/tachograph/dd/v1/encoding.proto\x12$wayplatform.connect.tachograph.dd.v1\x1a6wayplatform/connect/tachograph/dd/v1/annotations.proto*\xf0\x02\n" +
	"\bEncoding\x12\x18\n" +
	"\x14ENCODING_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15ENCODING_UNRECOGNIZED\x10\x01\x12\x1b\n" +
	"\x10ENCODING_DEFAULT\x10\x02\x1a\x05\xa0\xaf\x9c\x02\x00\x12\x1a\n" +
	"\x0eENCODING_EMPTY\x10\x03\x1a\x06\xa0\xaf\x9c\x02\xff\x01\x12\x15\n" +
	"\n" +
	"ISO_8859_1\x10\x04\x1a\x05\xa0\xaf\x9c\x02\x01\x12\x15\n" +
	"\n" +
	"ISO_8859_2\x10\x05\x1a\x05\xa0\xaf\x9c\x02\x02\x12\x15\n" +
	"\n" +
	"ISO_8859_3\x10\x06\x1a\x05\xa0\xaf\x9c\x02\x03\x12\x15\n" +
	"\n" +
	"ISO_8859_5\x10\a\x1a\x05\xa0\xaf\x9c\x02\x05\x12\x15\n" +
	"\n" +
	"ISO_8859_7\x10\b\x1a\x05\xa0\xaf\x9c\x02\a\x12\x15\n" +
	"\n" +
	"ISO_8859_9\x10\t\x1a\x05\xa0\xaf\x9c\x02\t\x12\x16\n" +
	"\vISO_8859_13\x10\n" +
	"\x1a\x05\xa0\xaf\x9c\x02\r\x12\x16\n" +
	"\vISO_8859_15\x10\v\x1a\x05\xa0\xaf\x9c\x02\x0f\x12\x16\n" +
	"\vISO_8859_16\x10\f\x1a\x05\xa0\xaf\x9c\x02\x10\x12\x11\n" +
	"\x06KOI8_R\x10\r\x1a\x05\xa0\xaf\x9c\x02P\x12\x11\n" +
	"\x06KOI8_U\x10\x0e\x1a\x05\xa0\xaf\x9c\x02UB\xcc\x02\n" +
	"(com.wayplatform.connect.tachograph.dd.v1B\rEncodingProtoP\x01Z\\github.com/way-platform/tachograph-go/proto/gen/go/wayplatform/connect/tachograph/dd/v1;ddv1\xa2\x02\x04WCTD\xaa\x02$Wayplatform.Connect.Tachograph.Dd.V1\xca\x02$Wayplatform\\Connect\\Tachograph\\Dd\\V1\xe2\x020Wayplatform\\Connect\\Tachograph\\Dd\\V1\\GPBMetadata\xea\x02(Wayplatform::Connect::Tachograph::Dd::V1b\beditionsp\xe8\a"

var file_wayplatform_connect_tachograph_dd_v1_encoding_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_wayplatform_connect_tachograph_dd_v1_encoding_proto_goTypes = []any{
	(Encoding)(0), // 0: wayplatform.connect.tachograph.dd.v1.Encoding
}
var file_wayplatform_connect_tachograph_dd_v1_encoding_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_wayplatform_connect_tachograph_dd_v1_encoding_proto_init() }
func file_wayplatform_connect_tachograph_dd_v1_encoding_proto_init() {
	if File_wayplatform_connect_tachograph_dd_v1_encoding_proto != nil {
		return
	}
	file_wayplatform_connect_tachograph_dd_v1_annotations_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wayplatform_connect_tachograph_dd_v1_encoding_proto_rawDesc), len(file_wayplatform_connect_tachograph_dd_v1_encoding_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wayplatform_connect_tachograph_dd_v1_encoding_proto_goTypes,
		DependencyIndexes: file_wayplatform_connect_tachograph_dd_v1_encoding_proto_depIdxs,
		EnumInfos:         file_wayplatform_connect_tachograph_dd_v1_encoding_proto_enumTypes,
	}.Build()
	File_wayplatform_connect_tachograph_dd_v1_encoding_proto = out.File
	file_wayplatform_connect_tachograph_dd_v1_encoding_proto_goTypes = nil
	file_wayplatform_connect_tachograph_dd_v1_encoding_proto_depIdxs = nil
}
