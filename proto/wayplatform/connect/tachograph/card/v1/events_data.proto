edition = "2023";

package wayplatform.connect.tachograph.card.v1;

import "google/protobuf/timestamp.proto";
import "wayplatform/connect/tachograph/dd/v1/event_fault_type.proto";
import "wayplatform/connect/tachograph/dd/v1/vehicle_registration_identification.proto";

// Represents the content of the EF_Events_Data file, which contains a log of
// events related to the tachograph system.
//
// The file structure is specified in Appendix 2.
//
// ASN.1 Definition (Gen1):
//
//     CardEventData ::= SEQUENCE (SIZE(6)) OF
//         cardEventRecords SET SIZE(NoOfEventsPerType) OF CardEventRecord
//
// ASN.1 Definition (Gen2):
//
//     CardEventData ::= SEQUENCE (SIZE(11)) OF
//         cardEventRecords SET SIZE(NoOfEventsPerType) OF CardEventRecord
//
// The sequence contains 6 (Gen1) or 11 (Gen2) sets of records, ordered by
// Event-FaultType. The protobuf message maps these to the named repeated fields
// below. For Gen1 data, fields 7-11 will be empty. The last set in each
// generation (`security_and_other_events`) contains security breach attempts
// and other remaining events.
message EventsData {
  // Represents a single event record.
  //
  // The data type `CardEventRecord` is specified in the Data Dictionary, Section 2.20.
  //
  // ASN.1 Definition:
  //
  //     CardEventRecord ::= SEQUENCE {
  //         eventType EventFaultType,
  //         eventBeginTime TimeReal,
  //         eventEndTime TimeReal,
  //         eventVehicleRegistration VehicleRegistrationIdentification
  //     }
  message Record {
    // If true, the fields below are populated with parsed, semantic data.
    // If false, the 'raw_data' field contains the original, unprocessed record
    // bytes.
    bool valid = 1;

    // --- Fields for a valid record (when valid = true) ---

    // The type of the event.
    //
    // See Data Dictionary, Section 2.70, `EventFaultType`.
    // ASN.1 Definition:
    //
    //     EventFaultType ::= OCTET STRING (SIZE (1))
    dd.v1.EventFaultType event_type = 2;

    // The date and time of the beginning of the event.
    //
    // See Data Dictionary, Section 2.162, `TimeReal`.
    // ASN.1 Definition:
    //
    //     TimeReal ::= INTEGER (0..2^32-1)
    google.protobuf.Timestamp event_begin_time = 4;

    // The date and time of the end of the event.
    //
    // See Data Dictionary, Section 2.162, `TimeReal`.
    // ASN.1 Definition:
    //
    //     TimeReal ::= INTEGER (0..2^32-1)
    google.protobuf.Timestamp event_end_time = 5;

    // The vehicle registration of the vehicle in which the event happened.
    //
    // See Data Dictionary, Section 2.166, `VehicleRegistrationIdentification`.
    // ASN.1 Definition:
    //
    //     VehicleRegistrationIdentification ::= SEQUENCE { ... }
    dd.v1.VehicleRegistrationIdentification event_vehicle_registration = 6;

    // --- Field for a non-valid record (when valid = false) ---
    // Holds the raw 24 bytes of the original record.
    bytes raw_data = 7;
  }

  // Set 1: Insertion of a non-valid card.
  repeated Record insertion_of_non_valid_card_events = 1;

  // Set 2: Card conflict.
  repeated Record card_conflict_events = 2;

  // Set 3: Time overlap.
  repeated Record time_overlap_events = 3;

  // Set 4: Driving without an appropriate card.
  repeated Record driving_without_appropriate_card_events = 4;

  // Set 5: Card insertion while driving.
  repeated Record card_insertion_while_driving_events = 5;

  // Set 6: Last card session not correctly closed.
  repeated Record last_card_session_not_correctly_closed_events = 6;

  // Set 7: Over speeding. (Gen2+)
  repeated Record over_speeding_events = 7;

  // Set 8: Power supply interruption. (Gen2+)
  repeated Record power_supply_interruption_events = 8;

  // Set 9: Motion data error. (Gen2+)
  repeated Record motion_data_error_events = 9;

  // Set 10: Vehicle Motion Conflict. (Gen2+)
  repeated Record vehicle_motion_conflict_events = 10;

  // Set 11: Security breach attempts and other events.
  repeated Record security_and_other_events = 11;

  // Digital signature for the EF_Events_Data file content.
  //
  // See Data Dictionary, Section 2.149, `Signature`.
  // ASN.1 Definition:
  //
  //     Signature ::= OCTET STRING (SIZE(128 for Gen1))
  bytes signature = 12;
}