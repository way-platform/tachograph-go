edition = "2023";

package wayplatform.connect.tachograph.card.v1;

import "google/protobuf/timestamp.proto";
import "wayplatform/connect/tachograph/dd/v1/control_type.proto";
import "wayplatform/connect/tachograph/dd/v1/full_card_number.proto";
import "wayplatform/connect/tachograph/dd/v1/full_card_number_and_generation.proto";
import "wayplatform/connect/tachograph/dd/v1/vehicle_registration_identification.proto";

// Represents the content of the EF_Control_Activity_Data file, which logs details
// about the last control session performed on the driver.
//
// The file structure is specified in Appendix 2, Section 4.2.1.
//
//     EF Control_Activity_Data
//     └─CardControlActivityDataRecord
//
// The data type `CardControlActivityDataRecord` is specified in the Data Dictionary, Section 2.15.
//
// ASN.1 Specification:
//
//     CardControlActivityDataRecord ::= SEQUENCE {
//         controlType ControlType,
//         controlTime TimeReal,
//         controlCardNumber FullCardNumber,
//         controlVehicleRegistration VehicleRegistrationIdentification,
//         controlDownloadPeriodBegin TimeReal,
//         controlDownloadPeriodEnd TimeReal
//     }
message ControlActivityData {
  // If true, the fields below are populated with parsed, semantic data.
  // If false, the 'raw_data' field contains the original, unprocessed record
  // bytes for perfect roundtrip accuracy.
  bool valid = 1;

  // --- Fields for a valid record (when valid = true) ---

  // The type of the control.
  //
  // See Data Dictionary, Section 2.53, `ControlType`.
  // ASN.1 Specification:
  //
  //     ControlType ::= OCTET STRING (SIZE(1))
  wayplatform.connect.tachograph.dd.v1.ControlType control_type = 2;

  // The date and time of the control.
  //
  // See Data Dictionary, Section 2.162, `TimeReal`.
  // ASN.1 Specification:
  //
  //     TimeReal ::= INTEGER (0..2^32-1)
  google.protobuf.Timestamp control_time = 3;

  // The full card number of the control officer who performed the control.
  //
  // The underlying record exists for both Gen1 and Gen2.
  // To support both versions in a single field and ensure unique card
  // identification for Gen2, this uses the `FullCardNumberAndGeneration` superset.
  // For Gen1 records, the `generation` field will be unset.
  //
  // See Data Dictionary, Sections 2.73 (`FullCardNumber`) and 2.74 (`FullCardNumberAndGeneration`).
  dd.v1.FullCardNumberAndGeneration control_card_number = 4;

  // The vehicle registration of the vehicle in which the control happened.
  //
  // See Data Dictionary, Section 2.166, `VehicleRegistrationIdentification`.
  // ASN.1 Specification:
  //
  //     VehicleRegistrationIdentification ::= SEQUENCE { ... }
  dd.v1.VehicleRegistrationIdentification control_vehicle_registration = 5;

  // The beginning of the downloaded period, in case of downloading.
  //
  // See Data Dictionary, Section 2.162, `TimeReal`.
  // ASN.1 Specification:
  //
  //     TimeReal ::= INTEGER (0..2^32-1)
  google.protobuf.Timestamp control_download_period_begin = 6;

  // The end of the downloaded period, in case of downloading.
  //
  // See Data Dictionary, Section 2.162, `TimeReal`.
  // ASN.1 Specification:
  //
  //     TimeReal ::= INTEGER (0..2^32-1)
  google.protobuf.Timestamp control_download_period_end = 7;

  // --- Field for raw data preservation (when valid = false) ---
  // Holds the raw 46 bytes of the original record for perfect roundtrip.
  bytes raw_data = 8;

  // Digital signature for the EF_Control_Activity_Data file content.
  //
  // See Data Dictionary, Section 2.149, `Signature`.
  // ASN.1 Specification:
  //
  //     Signature ::= OCTET STRING (SIZE(128 for Gen1))
  bytes signature = 9;
}
