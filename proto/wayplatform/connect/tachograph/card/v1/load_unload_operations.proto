edition = "2023";

package wayplatform.connect.tachograph.card.v1;

import "google/protobuf/timestamp.proto";
import "wayplatform/connect/tachograph/card/v1/gnss_place_auth_record.proto";

// Represents the content of the EF_Load_Unload_Operations file.
//
// The file structure is specified in Appendix 2, Section 4.2.2.
//
//     EF Load_Unload_Operations
//     └─CardLoadUnloadOperations
//
// The data type `CardLoadUnloadOperations` is specified in the Data Dictionary, Section 2.24c.
//
// ASN.1 Specification:
//
//     CardLoadUnloadOperations ::= SEQUENCE {
//         loadUnloadPointerNewestRecord INTEGER(0..NoOfLoadUnloadRecords -1),
//         cardLoadUnloadRecords SET SIZE (NoOfLoadUnloadRecords) OF CardLoadUnloadRecord
//     }
message LoadUnloadOperations {
  // Represents a single load/unload operation record.
  //
  // The data type `CardLoadUnloadRecord` is specified in the Data Dictionary, Section 2.24d.
  //
  // ASN.1 Specification:
  //
  //     CardLoadUnloadRecord ::= SEQUENCE {
  //         timeStamp TimeReal,
  //         operationType OperationType,
  //         gnssPlaceAuthRecord GNSSPlaceAuthRecord,
  //         vehicleOdometerValue OdometerShort
  //     }
  message Record {
    // ASN.1 Type: OperationType (see DD 2.114a)
    //
    //     OperationType ::= INTEGER {
    //         load(1), unload(2), simultaneous(3)
    //     } (0..255)
    enum OperationType {
      OPERATION_TYPE_UNSPECIFIED = 0;
      LOAD = 1;
      UNLOAD = 2;
      SIMULTANEOUS = 3;
    }

    // ASN.1 Type: TimeReal (see DD 2.162)
    //
    //     TimeReal ::= INTEGER (0..2^32-1)
    google.protobuf.Timestamp timestamp = 1;

    // Type of operation.
    OperationType operation_type = 2;

    // Authenticated position of the vehicle at the time of the operation.
    GnssPlaceAuthRecord gnss_place_auth_record = 3;

    // ASN.1 Type: OdometerShort (see DD 2.113)
    //
    //     OdometerShort ::= INTEGER(0..999999)
    int32 vehicle_odometer_km = 4;
  }

  // Index of the last updated record in the ring buffer.
  int32 newest_record_index = 1;

  // The set of load/unload records.
  repeated Record records = 2;
}
