edition = "2023";

package wayplatform.connect.tachograph.card.v1;

import "wayplatform/connect/tachograph/dd/v1/place_record_g2.proto";

// Represents the content of the EF_Places file for Generation 2 cards.
//
// This is the Gen2-specific version with 21-byte place records (includes GNSS).
// For Gen1 format (10-byte records), see Places.
//
// The file structure is specified in Appendix 2, Section 4.2.1.
//
//     EF Places
//     └─CardPlaceDailyWorkPeriod
//
// The data type `CardPlaceDailyWorkPeriod` is specified in the Data Dictionary, Section 2.28.
//
// ASN.1 Definition:
//
//     CardPlaceDailyWorkPeriod ::= SEQUENCE {
//         placePointerNewestRecord INTEGER(0..NoOfCardPlaceRecords-1),
//         placeRecords SET SIZE(NoOfCardPlaceRecords) OF PlaceRecord
//     }
//
// Note: PlaceRecord is 21 bytes in Gen2 (includes 11-byte GNSS data).
// This is stored as a circular buffer where placePointerNewestRecord indicates
// the index of the most recently written record.
message PlacesG2 {
  // Index of the most recently written place record.
  // Corresponds to `placePointerNewestRecord`.
  //
  // This is used to determine the chronological order of records in the circular buffer.
  //
  // See Data Dictionary, Section 2.28.
  // ASN.1 Definition:
  //
  //     INTEGER(0..NoOfCardPlaceRecords-1)
  int32 newest_record_index = 1;

  // The set of Generation 2 place records (21 bytes each, includes GNSS).
  //
  // This is a circular buffer. The newest record is at index `newest_record_index`.
  // To read in chronological order, start from (newest_record_index + 1) and wrap around.
  //
  // See Data Dictionary, Section 2.117, `PlaceRecord` (Gen2).
  repeated dd.v1.PlaceRecordG2 records = 2;

  // Complete raw binary data (pointer + all records).
  //
  // Used as canvas for raw data painting during marshalling to preserve
  // unknown bits and ensure perfect round-trip fidelity.
  //
  // Length: 2 bytes (pointer) + (N × 21 bytes per record)
  bytes raw_data = 3;

  // Digital signature for the EF_Places file content.
  //
  // See Data Dictionary, Section 2.149, `Signature`.
  // ASN.1 Definition:
  //
  //     Signature ::= OCTET STRING (SIZE(128))
  bytes signature = 4;
}

