edition = "2023";

package wayplatform.connect.tachograph.card.v1;

import "wayplatform/connect/tachograph/card/v1/application_identification_v2.proto";
import "wayplatform/connect/tachograph/card/v1/border_crossings.proto";
import "wayplatform/connect/tachograph/card/v1/icc.proto";
import "wayplatform/connect/tachograph/card/v1/certificates.proto";
import "wayplatform/connect/tachograph/card/v1/ic.proto";
import "wayplatform/connect/tachograph/card/v1/control_activity_data.proto";
import "wayplatform/connect/tachograph/card/v1/current_usage.proto";
import "wayplatform/connect/tachograph/card/v1/driver_activity_data.proto";
import "wayplatform/connect/tachograph/card/v1/driver_card_application_identification.proto";
import "wayplatform/connect/tachograph/card/v1/driver_card_holder_identification.proto";
import "wayplatform/connect/tachograph/card/v1/driving_licence_info.proto";
import "wayplatform/connect/tachograph/card/v1/events_data.proto";
import "wayplatform/connect/tachograph/card/v1/faults_data.proto";
import "wayplatform/connect/tachograph/card/v1/gnss_places.proto";
import "wayplatform/connect/tachograph/card/v1/gnss_places_authentication.proto";
import "wayplatform/connect/tachograph/card/v1/identification.proto";
import "wayplatform/connect/tachograph/card/v1/card_download_driver.proto";
import "wayplatform/connect/tachograph/card/v1/load_type_entries.proto";
import "wayplatform/connect/tachograph/card/v1/load_unload_operations.proto";
import "wayplatform/connect/tachograph/card/v1/places.proto";
import "wayplatform/connect/tachograph/card/v1/places_authentication.proto";
import "wayplatform/connect/tachograph/card/v1/specific_conditions.proto";
import "wayplatform/connect/tachograph/card/v1/vehicle_units_used.proto";
import "wayplatform/connect/tachograph/card/v1/vehicles_used.proto";

// Represents the fully parsed content of a driver card file.
//
// This message is the result of the second pass of parsing, where the raw TLV
// records from a `RawCardFile` are interpreted and structured into their
// semantic meaning according to the driver card specification.
// See regulation document Appendix 2, Section 4.2.
message DriverCardFile {
  // Data from EF_ICC (Integrated Circuit Card Identification).
  Icc icc = 1;

  // Data from EF_IC (Integrated Circuit Identification).
  Ic ic = 2;

  // Data from EF_Application_Identification.
  DriverCardApplicationIdentification application_identification = 3;

  // Data from EF_Identification.
  Identification identification = 4;

  // Data from EF_Driving_Licence_Info.
  DrivingLicenceInfo driving_licence_info = 6;

  // Data from EF_Events_Data.
  EventsData events_data = 7;

  // Data from EF_Faults_Data.
  FaultsData faults_data = 8;

  // Data from EF_Driver_Activity_Data.
  DriverActivityData driver_activity_data = 9;

  // Data from EF_Vehicles_Used.
  VehiclesUsed vehicles_used = 10;

  // Data from EF_Places.
  Places places = 11;

  // Data from EF_Current_Usage.
  CurrentUsage current_usage = 12;

  // Data from EF_Control_Activity_Data.
  ControlActivityData control_activity_data = 13;

  // Data from EF_Specific_Conditions.
  SpecificConditions specific_conditions = 14;

  // Data from EF_Card_Download.
  CardDownloadDriver card_download_driver = 15;

  // --- Gen2 Specific Fields ---

  // Data from EF_VehicleUnits_Used.
  VehicleUnitsUsed vehicle_units_used = 16;

  // Data from EF_GNSS_Places.
  GnssPlaces gnss_places = 17;

  // Data from EF_Application_Identification_V2 (conditional on Gen2v2 cards).
  ApplicationIdentificationV2 application_identification_v2 = 18;

  // Data from EF_Places_Authentication (conditional on Gen2v2 cards).
  PlacesAuthentication places_authentication = 19;

  // Data from EF_GNSS_Places_Authentication (conditional on Gen2v2 cards).
  GnssPlacesAuthentication gnss_places_authentication = 20;

  // Data from EF_Border_Crossings (conditional on Gen2v2 cards).
  BorderCrossings border_crossings = 21;

  // Data from EF_Load_Unload_Operations (conditional on Gen2v2 cards).
  LoadUnloadOperations load_unload_operations = 22;

  // Data from EF_Load_Type_Entries (conditional on Gen2v2 cards).
  LoadTypeEntries load_type_entries = 23;

  // --- Security Data ---

  // Certificate data from various certificate EFs.
  Certificates certificates = 24;
}
