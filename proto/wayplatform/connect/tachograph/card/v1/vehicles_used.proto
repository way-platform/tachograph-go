edition = "2023";

package wayplatform.connect.tachograph.card.v1;

import "google/protobuf/timestamp.proto";
import "wayplatform/connect/tachograph/datadictionary/v1/vehicle_registration_identification.proto";

// Represents the content of the EF_Vehicles_Used file.
//
// The file structure is specified in Appendix 2, Section 4.2.1.
//
//     EF Vehicles_Used
//     └─CardVehiclesUsed
//
// The data type `CardVehiclesUsed` is specified in the Data Dictionary, Section 2.38.
//
// ASN.1 Specification:
//
//     CardVehiclesUsed ::= SEQUENCE {
//         vehiclePointerNewestRecord INTEGER(0..NoOfCardVehicleRecords-1),
//         cardVehicleRecords SET SIZE(NoOfCardVehicleRecords) OF CardVehicleRecord
//     }
message VehiclesUsed {
  // Represents a record for a single period of use of a vehicle.
  //
  // The data type `CardVehicleRecord` is specified in the Data Dictionary, Section 2.37.
  //
  // ASN.1 Specification:
  //
  //     CardVehicleRecord ::= SEQUENCE {
  //         vehicleOdometerBegin OdometerShort,
  //         vehicleOdometerEnd OdometerShort,
  //         vehicleFirstUse TimeReal,
  //         vehicleLastUse TimeReal,
  //         vehicleRegistration VehicleRegistrationIdentification,
  //         vuDataBlockCounter VuDataBlockCounter,
  //         vehicleIdentificationNumber VehicleIdentificationNumber
  //     }
  message Record {
    // ASN.1 Type: OdometerShort (see DD 2.113)
    //
    //     OdometerShort ::= INTEGER(0..999999)
    int32 vehicle_odometer_begin_km = 1;

    // ASN.1 Type: OdometerShort (see DD 2.113)
    //
    //     OdometerShort ::= INTEGER(0..999999)
    int32 vehicle_odometer_end_km = 2;

    // ASN.1 Type: TimeReal (see DD 2.162)
    //
    //     TimeReal ::= INTEGER (0..2^32-1)
    google.protobuf.Timestamp vehicle_first_use = 3;

    // ASN.1 Type: TimeReal (see DD 2.162)
    //
    //     TimeReal ::= INTEGER (0..2^32-1)
    google.protobuf.Timestamp vehicle_last_use = 4;

    // ASN.1 Type: VehicleRegistrationIdentification (see DD 2.166)
    datadictionary.v1.VehicleRegistrationIdentification vehicle_registration = 5;

    // ASN.1 Type: VuDataBlockCounter (see DD 2.189)
    //
    //     VuDataBlockCounter ::= INTEGER(0..65535)
    int32 vu_data_block_counter = 6;

    // ASN.1 Type: VehicleIdentificationNumber (see DD 2.164)
    //
    //     VehicleIdentificationNumber ::= IA5String(SIZE(17))
    string vehicle_identification_number = 7;
  }

  // Index of the last updated vehicle record.
  int32 newest_record_index = 1;

  // The set of records for vehicles used.
  repeated Record records = 2;

  // Digital signature for the EF_Vehicles_Used file content.
  bytes signature = 3;
}
