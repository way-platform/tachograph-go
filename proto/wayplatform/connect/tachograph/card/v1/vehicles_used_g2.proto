edition = "2023";

package wayplatform.connect.tachograph.card.v1;

import "wayplatform/connect/tachograph/dd/v1/card_vehicle_record_g2.proto";

// Represents the content of the EF_Vehicles_Used file for Generation 2 cards.
//
// This is the Gen2-specific version with 48-byte vehicle records (includes VIN).
// For Gen1 format (31-byte records), see VehiclesUsed.
//
// The file structure is specified in Appendix 2, Section 4.2.1.
//
//     EF Vehicles_Used
//     └─CardVehiclesUsed
//
// The data type `CardVehiclesUsed` is specified in the Data Dictionary, Section 2.38.
//
// ASN.1 Definition:
//
//     CardVehiclesUsed ::= SEQUENCE {
//         vehiclePointerNewestRecord INTEGER(0..NoOfCardVehicleRecords-1),
//         cardVehicleRecords SET SIZE(NoOfCardVehicleRecords) OF CardVehicleRecord
//     }
//
// Note: CardVehicleRecord is 48 bytes in Gen2 (includes 17-byte VIN).
message VehiclesUsedG2 {
  // Index of the last updated vehicle record.
  // Corresponds to `vehiclePointerNewestRecord`.
  //
  // See Data Dictionary, Section 2.38.
  // ASN.1 Definition:
  //
  //     INTEGER(0..NoOfCardVehicleRecords-1)
  int32 newest_record_index = 1;

  // The set of Generation 2 vehicle records (48 bytes each, includes VIN).
  //
  // Each record contains information about a period of use of a vehicle,
  // including odometer readings, timestamps, vehicle registration, and VIN.
  //
  // See Data Dictionary, Section 2.37, `CardVehicleRecord` (Gen2).
  repeated dd.v1.CardVehicleRecordG2 records = 2;

  // Complete raw binary data (pointer + all records).
  //
  // Used as canvas for raw data painting during marshalling to preserve
  // unknown bits and ensure perfect round-trip fidelity.
  //
  // Length: 2 bytes (pointer) + (N × 48 bytes per record)
  bytes raw_data = 3;

  // Digital signature for the EF_Vehicles_Used file content.
  //
  // See Data Dictionary, Section 2.149, `Signature`.
  // ASN.1 Definition:
  //
  //     Signature ::= OCTET STRING (SIZE(128))
  bytes signature = 4;
}
