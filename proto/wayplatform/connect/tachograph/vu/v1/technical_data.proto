edition = "2023";

package wayplatform.connect.tachograph.vu.v1;

import "google/protobuf/timestamp.proto";
import "wayplatform/connect/tachograph/datadictionary/v1/calibration_purpose.proto";
import "wayplatform/connect/tachograph/datadictionary/v1/card_slot_number.proto";
import "wayplatform/connect/tachograph/datadictionary/v1/equipment_type.proto";
import "wayplatform/connect/tachograph/datadictionary/v1/extended_serial_number.proto";
import "wayplatform/connect/tachograph/datadictionary/v1/full_card_number.proto";
import "wayplatform/connect/tachograph/datadictionary/v1/nation_numeric.proto";
import "wayplatform/connect/tachograph/datadictionary/v1/vehicle_registration_identification.proto";
import "wayplatform/connect/tachograph/datadictionary/v1/generation.proto";
import "wayplatform/connect/tachograph/vu/v1/versioning.proto";

// Represents the consolidated data structure for a Technical Data transfer.
//
// This message corresponds to the data defined in the regulation document:
// Appendix 7, Section 2.2.6.6: "Positive Response Transfer Data Technical Data".
message TechnicalData {
  // The generation of the vehicle unit, parsed from the raw transfer data.
  //
  // Discriminator field.
  datadictionary.v1.Generation generation = 1;

  // Represents the identification data of the vehicle unit.
  //
  // Corresponds to the `VuIdentification` data type.
  // See Data Dictionary, Section 2.205.
  message VuIdentification {
    // Represents the software identification of the vehicle unit.
    //
    // Corresponds to the `VuSoftwareIdentification` data type.
    // See Data Dictionary, Section 2.225.
    message VuSoftwareIdentification {
      // The software version of the VU.
      string software_version = 1;
      // The installation date of the software.
      google.protobuf.Timestamp software_installation_date = 2;
    }

    // The name of the VU manufacturer.
    string manufacturer_name = 1;
    // The address of the VU manufacturer.
    string manufacturer_address = 2;
    // The part number of the VU.
    string part_number = 3;
    // The serial number of the VU.
    datadictionary.v1.ExtendedSerialNumber serial_number = 4;
    // The software identification of the VU.
    VuSoftwareIdentification software_identification = 5;
    // The manufacturing date of the VU.
    google.protobuf.Timestamp manufacturing_date = 6;
    // The approval number of the VU.
    string approval_number = 7;
  }

  // Represents a paired motion sensor record.
  //
  // Corresponds to the `SensorPairedRecord` data type.
  // See Data Dictionary, Section 2.145.
  message PairedSensor {
    // The serial number of the motion sensor.
    datadictionary.v1.ExtendedSerialNumber serial_number = 1;
    // The approval number of the motion sensor.
    string approval_number = 2;
    // The date the sensor was paired.
    google.protobuf.Timestamp pairing_date = 3;
  }

  // Represents a coupled external GNSS facility record.
  //
  // Corresponds to the `SensorExternalGNSSCoupledRecord` data type.
  // See Data Dictionary, Section 2.133.
  message CoupledGnss {
    // The serial number of the external GNSS.
    datadictionary.v1.ExtendedSerialNumber serial_number = 1;
    // The approval number of the external GNSS.
    string approval_number = 2;
    // The date the GNSS was coupled.
    google.protobuf.Timestamp coupling_date = 3;
  }

  // Represents a calibration record.
  //
  // Corresponds to the `VuCalibrationRecord` data type.
  // See Data Dictionary, Section 2.174.
  message CalibrationRecord {
    // The purpose of the calibration.
    datadictionary.v1.CalibrationPurpose purpose = 1;
    int32 unrecognized_purpose = 2;
    // The name of the workshop.
    string workshop_name = 3;
    // The address of the workshop.
    string workshop_address = 4;
    // The card number of the workshop.
    datadictionary.v1.FullCardNumber workshop_card_number = 5;
    // The expiry date of the workshop card.
    google.protobuf.Timestamp workshop_card_expiry_date = 6;
    // The Vehicle Identification Number.
    string vin = 7;
    // The vehicle registration identifier.
    datadictionary.v1.VehicleRegistrationIdentification vehicle_registration = 8;
    // The vehicle characteristic constant.
    int32 w_vehicle_characteristic_constant = 9;
    // The constant of the recording equipment.
    int32 k_constant_of_recording_equipment = 10;
    // The tyre circumference in mm.
    int32 l_tyre_circumference_mm = 11;
    // The tyre size designation.
    string tyre_size = 12;
    // The authorised speed in km/h.
    int32 authorised_speed_kmh = 13;
    // The odometer value before calibration in km.
    int32 old_odometer_value_km = 14;
    // The odometer value after calibration in km.
    int32 new_odometer_value_km = 15;
    // The time value before calibration.
    google.protobuf.Timestamp old_time_value = 16;
    // The time value after calibration.
    google.protobuf.Timestamp new_time_value = 17;
    // The date of the next calibration.
    google.protobuf.Timestamp next_calibration_date = 18;
  }

  // Represents a record of a card used in the VU.
  //
  // Corresponds to the `VuCardRecord` data type.
  // See Data Dictionary, Section 2.179.
  message CardRecord {
    // The full card number.
    datadictionary.v1.FullCardNumber full_card_number = 1;
    // The structure version of the card.
    bytes card_structure_version = 2;
    // The type of the card.
    datadictionary.v1.EquipmentType card_type = 3;
    int32 unrecognized_card_type = 4;
  }

  // Represents a record of ITS consent status for a card.
  //
  // Corresponds to the `VuITSConsentRecord` data type.
  // See Data Dictionary, Section 2.207.
  message ItsConsentRecord {
    // The full card number.
    datadictionary.v1.FullCardNumber full_card_number = 1;
    // The consent status for ITS data provision.
    int32 consent_status = 2;
  }

  // Represents a record of a power supply interruption.
  //
  // Corresponds to the `VuPowerSupplyInterruptionRecord` data type.
  // See Data Dictionary, Section 2.240.
  message PowerSupplyInterruptionRecord {
    // The timestamp of the interruption.
    google.protobuf.Timestamp timestamp = 1;
    // The slot number of the card affected.
    datadictionary.v1.CardSlotNumber card_slot_number = 2;
    int32 unrecognized_card_slot_number = 3;
  }

  // Vehicle unit identification data.
  VuIdentification vu_identification = 2;
  // All calibration records stored in the VU.
  repeated CalibrationRecord calibration_records = 3;

  // For Gen1, the single paired sensor.
  PairedSensor paired_sensor = 4;

  // For Gen2, the list of paired sensors.
  repeated PairedSensor paired_sensors = 5;
  // For Gen2, the list of coupled external GNSS facilities.
  repeated CoupledGnss coupled_gnss_facilities = 6;
  // For Gen2, the list of cards that have been used in the VU.
  repeated CardRecord card_records = 7;
  // For Gen2, the list of ITS consent records.
  repeated ItsConsentRecord its_consent_records = 8;
  // For Gen2, the list of power supply interruptions.
  repeated PowerSupplyInterruptionRecord power_supply_interruptions = 9;

  // Signature for Gen1 data (RSA, 128 bytes).
  bytes signature_gen1 = 10;

  // Signature for Gen2 data (ECC).
  bytes signature_gen2 = 11;
}
